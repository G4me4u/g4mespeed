com.g4mesoft.G4mespeedMod -> com.g4mesoft.G4mespeedMod:
    java.lang.String CORE_MOD_NAME -> a
    com.g4mesoft.core.GSVersion GS_CORE_VERSION -> a
    com.g4mesoft.core.GSVersion GS_EXTENSIONS_VERSION -> b
    com.g4mesoft.GSExtensionUID CORE_EXTENSION_UID -> a
    com.g4mesoft.GSExtensionUID INVALID_EXTENSION_UID -> b
    org.apache.logging.log4j.Logger GS_LOGGER -> a
    com.g4mesoft.G4mespeedMod instance -> a
    boolean initialized -> a
    com.g4mesoft.packet.GSPacketManager packetManager -> a
    com.g4mesoft.core.compat.GSCarpetCompat carpetCompat -> a
    com.g4mesoft.core.GSCoreExtension coreExtension -> a
    java.util.List extensions -> a
    java.util.Map idToExtension -> a
    java.util.List extensionListeners -> b
    com.g4mesoft.GSExtensionUID[] extensionUidCache -> a
    54:55:void <init>() -> <init>
    60:76:void onInitialize() -> onInitialize
    79:95:void addExtension(com.g4mesoft.GSIExtension) -> a
    98:98:java.util.List getExtensions() -> a
    102:105:void addExtensionListener(com.g4mesoft.GSIExtensionListener) -> a
    108:111:void removeExtensionListener(com.g4mesoft.GSIExtensionListener) -> b
    114:123:com.g4mesoft.GSExtensionUID[] getExtensionUids() -> a
    127:131:void dispatchExtensionAddedEvent(com.g4mesoft.GSIExtension) -> b
    134:134:com.g4mesoft.packet.GSPacketManager getPacketManager() -> a
    138:138:com.g4mesoft.core.compat.GSCarpetCompat getCarpetCompat() -> a
    142:142:com.g4mesoft.core.GSCoreExtension getCoreExtension() -> a
    146:146:com.g4mesoft.G4mespeedMod getInstance() -> a
    23:52:void <clinit>() -> <clinit>
com.g4mesoft.GSExtensionUID -> core.a:
    int value -> a
    11:13:void <init>(int) -> <init>
    16:16:int getValue() -> a
    20:21:void write(net.minecraft.class_2540,com.g4mesoft.GSExtensionUID) -> a
    24:24:com.g4mesoft.GSExtensionUID read(net.minecraft.class_2540) -> a
    30:35:com.g4mesoft.GSExtensionUID parseUID(java.lang.String) -> a
    39:39:java.lang.String toString(com.g4mesoft.GSExtensionUID) -> a
    44:44:int hashCode() -> hashCode
    49:51:boolean equals(java.lang.Object) -> equals
    56:56:java.lang.String toString() -> toString
com.g4mesoft.GSIExtension -> core.b:
    void init() -> init
    void registerPackets(com.g4mesoft.registry.GSElementRegistry) -> a
    void addClientModules(com.g4mesoft.core.client.GSControllerClient) -> a
    void addServerModules(com.g4mesoft.core.server.GSControllerServer) -> a
    java.lang.String getTranslationPath() -> a
    java.lang.String getName() -> b
    com.g4mesoft.GSExtensionUID getUniqueId() -> a
com.g4mesoft.GSIExtensionListener -> core.c:
    void extensionAdded(com.g4mesoft.GSIExtension) -> extensionAdded
com.g4mesoft.access.GSIBufferBuilderAccess -> core.d:
    void pushClip(float,float,float,float) -> a
    void pushClip(com.g4mesoft.gui.renderer.GSClipRect) -> a
    com.g4mesoft.gui.renderer.GSClipRect popClip() -> a
    void setOffset(float,float,float) -> a
    float getOffsetX() -> a
    float getOffsetY() -> b
    float getOffsetZ() -> c
    float getClipOffsetX() -> d
    float getClipOffsetY() -> e
    void setClipOffset(float,float) -> a
    java.nio.ByteBuffer getByteBuffer() -> a
    int getDrawMode() -> b
    net.minecraft.class_293 getVertexFormat() -> a
    int getBuildStart() -> c
    int getVertexCount() -> d
    void setVertexCount(int) -> a
    void setElementOffset(int) -> b
com.g4mesoft.access.GSIKeyboardAccess -> core.e:
    boolean isPreviousEventRepeating() -> a
com.g4mesoft.access.GSIMouseAccess -> core.f:
    int getPreviousEventModifiers() -> e
    double getPreviousEventScrollX() -> a
com.g4mesoft.access.GSINetworkHandlerAccess -> core.g:
    void setCoreVersion(com.g4mesoft.core.GSVersion) -> a
    com.g4mesoft.core.GSVersion getCoreVersion() -> a
    boolean isExtensionInstalled(com.g4mesoft.GSExtensionUID) -> a
    void setExtensionUids(com.g4mesoft.GSExtensionUID[]) -> a
    com.g4mesoft.GSExtensionUID[] getExtensionUids() -> a
    void setTranslationVersion(com.g4mesoft.GSExtensionUID,int) -> a
    int getTranslationVersion(com.g4mesoft.GSExtensionUID) -> a
com.g4mesoft.access.GSIRenderTickCounterAccess -> core.h:
    float getTickTime() -> f
com.g4mesoft.access.GSISmoothPistonBlockEntityAccess -> core.i:
    float getSmoothProgress(float) -> a
com.g4mesoft.core.GSController -> core.j:
    java.lang.String SETTINGS_PATH -> b
    java.lang.String CACHE_DIR_NAME -> c
    java.lang.String INTEGRATED_CACHE_DIR_NAME -> d
    java.util.Set INSTANCES -> a
    com.g4mesoft.setting.GSSettingManager settings -> a
    java.util.List modules -> c
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> tpsModule
    com.g4mesoft.module.translation.GSTranslationModule translationModule -> a
    36:43:void <init>() -> <init>
    46:53:void onStart() -> a
    56:67:void onStop() -> b
    70:74:void initModules() -> c
    78:80:void addModule(com.g4mesoft.core.GSIModule) -> a
    83:85:void tick(boolean) -> a
    88:88:com.g4mesoft.module.tps.GSTpsModule getTpsModule() -> a
    92:92:com.g4mesoft.module.translation.GSTranslationModule getTranslationModule() -> a
    97:97:java.util.List getModules() -> b
    102:102:com.g4mesoft.setting.GSSettingManager getSettingManager() -> a
    106:106:java.io.File getSettingsFile() -> a
    110:114:com.g4mesoft.core.GSController getInstanceOnThread() -> a
    119:120:void extensionAdded(com.g4mesoft.GSIExtension) -> extensionAdded
    void addExtensionModules(com.g4mesoft.GSIExtension) -> c
    boolean isThreadOwner() -> b
    net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    boolean isClient() -> c
    com.g4mesoft.core.GSVersion getCoreVersion() -> a
    27:27:void <clinit>() -> <clinit>
com.g4mesoft.core.GSCoreExtension -> core.k:
    java.lang.String TRANSLATION_PATH -> e
    21:21:void <init>() -> <init>
    27:27:void init() -> init
    31:47:void registerPackets(com.g4mesoft.registry.GSElementRegistry) -> a
    51:51:void addClientModules(com.g4mesoft.core.client.GSControllerClient) -> a
    55:55:void addServerModules(com.g4mesoft.core.server.GSControllerServer) -> a
    59:59:java.lang.String getTranslationPath() -> a
    64:64:java.lang.String getName() -> b
    69:69:com.g4mesoft.GSExtensionUID getUniqueId() -> a
com.g4mesoft.core.GSCoreOverride -> com.g4mesoft.core.GSCoreOverride:
com.g4mesoft.core.GSExtensionUidsPacket -> core.l:
    com.g4mesoft.GSExtensionUID[] extensionUids -> extensionUids
    21:22:void <init>() -> <init>
    24:26:void <init>(com.g4mesoft.GSExtensionUID[]) -> <init>
    30:33:void read(net.minecraft.class_2540) -> a
    37:40:void write(net.minecraft.class_2540) -> b
    44:45:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    50:51:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.core.GSIModule -> core.m:
    void init(com.g4mesoft.core.GSIModuleManager) -> a
    18:18:void initGUI(com.g4mesoft.gui.GSTabbedGUI) -> a
    20:20:void onClose() -> d
    23:23:void registerClientSettings(com.g4mesoft.setting.GSSettingManager) -> a
    26:26:void registerHotkeys(com.g4mesoft.hotkey.GSKeyManager) -> a
    28:28:void registerServerSettings(com.g4mesoft.setting.GSSettingManager) -> b
    30:30:void registerCommands(com.mojang.brigadier.CommandDispatcher) -> a
    32:32:void tick(boolean) -> a
    35:35:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> b
    38:38:void onDisconnectServer() -> e
    40:40:void onPlayerJoin(net.minecraft.class_3222) -> a
    42:42:void onG4mespeedClientJoin(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    44:44:void onPlayerLeave(net.minecraft.class_3222) -> b
    46:46:void onPlayerPermissionChanged(net.minecraft.class_3222) -> c
com.g4mesoft.core.GSIModuleManager -> core.n:
    void addModule(com.g4mesoft.core.GSIModule) -> a
    java.util.List getModules() -> b
    void runOnClient(java.util.function.Consumer) -> a
    void runOnServer(java.util.function.Consumer) -> b
    com.g4mesoft.setting.GSSettingManager getSettingManager() -> a
    java.io.File getCacheFile() -> b
com.g4mesoft.core.GSVersion -> core.o:
    com.g4mesoft.core.GSVersion INVALID -> c
    com.g4mesoft.core.GSVersion MINIMUM_VERSION -> d
    int majorVersion -> b
    int minorVersion -> c
    int updateVersion -> d
    java.lang.String versionStringCache -> f
    16:22:void <init>(int,int,int) -> <init>
    25:25:int getMajorVersion() -> f
    29:29:int getMinorVersion() -> g
    33:33:int getUpdateVersion() -> h
    37:39:java.lang.String getVersionString() -> c
    43:43:boolean isInvalid() -> d
    47:50:com.g4mesoft.core.GSVersion read(net.minecraft.class_2540) -> a
    54:57:void write(net.minecraft.class_2540) -> b
    60:74:boolean isGreaterThanOrEqualTo(com.g4mesoft.core.GSVersion) -> a
    78:78:boolean isLessThan(com.g4mesoft.core.GSVersion) -> b
    82:85:boolean isEqual(com.g4mesoft.core.GSVersion) -> c
    92:94:boolean equals(java.lang.Object) -> equals
    99:99:java.lang.String toString() -> toString
    7:8:void <clinit>() -> <clinit>
com.g4mesoft.core.GSVersionPacket -> core.p:
    com.g4mesoft.core.GSVersion version -> version
    18:19:void <init>() -> <init>
    21:23:void <init>(com.g4mesoft.core.GSVersion) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:38:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    43:44:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.core.client.GSControllerClient -> core.q:
    java.lang.String CLIENT_SETTINGS_GUI_TITLE -> g
    java.lang.String SERVER_SETTINGS_GUI_TITLE -> h
    java.lang.String HOTKEY_GUI_TITLE -> i
    java.lang.String G4MESPEED_INFO_GUI_TITLE -> j
    java.lang.String GS_KEY_CATEGORY -> k
    java.lang.String GUI_KEY_NAME -> l
    java.lang.String HOTKEY_SETTINGS_FILE_NAME -> m
    com.g4mesoft.core.client.GSControllerClient instance -> a
    net.minecraft.class_310 minecraft -> a
    net.minecraft.class_634 networkHandler -> a
    com.g4mesoft.GSExtensionUID[] serverExtensionUids -> b
    java.util.Set serverExtensionUidSet -> b
    com.g4mesoft.core.GSVersion serverVersion -> e
    com.g4mesoft.setting.GSRemoteSettingManager serverSettings -> a
    com.g4mesoft.hotkey.GSKeyManager keyManager -> a
    com.g4mesoft.hotkey.GSKeyBinding openGUIKey -> a
    com.g4mesoft.gui.GSTabbedGUI tabbedGUI -> a
    69:76:void <init>() -> <init>
    79:98:void init(net.minecraft.class_310) -> a
    102:110:void addModule(com.g4mesoft.core.GSIModule) -> a
    113:114:void setNetworkHandler(net.minecraft.class_634) -> a
    117:122:void setServerExtensionUids(com.g4mesoft.GSExtensionUID[]) -> b
    125:125:com.g4mesoft.GSExtensionUID[] getServerExtensionUids() -> b
    130:130:boolean isServerExtensionInstalled(com.g4mesoft.GSExtensionUID) -> b
    134:140:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> b
    143:152:void onDisconnectServer() -> e
    155:160:void onClientClose() -> f
    163:163:java.io.File getHotkeySettingsFile() -> c
    168:171:void tick(boolean) -> a
    175:176:void addExtensionModules(com.g4mesoft.GSIExtension) -> c
    180:180:boolean isThreadOwner() -> b
    185:185:net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    190:190:boolean isClient() -> c
    195:195:com.g4mesoft.core.GSVersion getCoreVersion() -> a
    200:201:void runOnClient(java.util.function.Consumer) -> a
    205:205:void runOnServer(java.util.function.Consumer) -> b
    209:209:com.g4mesoft.core.GSVersion getServerVersion() -> b
    214:214:boolean isG4mespeedServer() -> e
    219:219:boolean isInGame() -> f
    224:225:void sendPacket(com.g4mesoft.packet.GSIPacket) -> a
    229:236:void sendPacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
    240:240:java.io.File getCacheFile() -> b
    244:244:com.g4mesoft.hotkey.GSKeyManager getKeyManager() -> a
    248:248:com.g4mesoft.setting.GSRemoteSettingManager getServerSettings() -> a
    252:252:com.g4mesoft.hotkey.GSKeyBinding getOpenGUIKey() -> a
    256:256:com.g4mesoft.core.client.GSControllerClient getInstance() -> a
    85:87:void lambda$init$0(com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    55:55:void <clinit>() -> <clinit>
com.g4mesoft.core.client.GSIModuleManagerClient -> core.r:
    boolean isServerExtensionInstalled(com.g4mesoft.GSExtensionUID) -> b
    com.g4mesoft.core.GSVersion getServerVersion() -> b
    boolean isG4mespeedServer() -> e
    boolean isInGame() -> f
    void sendPacket(com.g4mesoft.packet.GSIPacket) -> a
    void sendPacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
com.g4mesoft.core.compat.GSCarpetCompat -> core.s:
    java.lang.String TICKSPEED_CLASSPATH -> n
    java.lang.String ADD_TICKRATE_LISTENER_METHOD_NAME -> o
    java.lang.String TICKRATE_METHOD_NAME -> p
    java.lang.String MSPT_FIELD_NAME -> q
    boolean carpetDetected -> b
    java.lang.reflect.Method carpetAddTickrateListener -> a
    java.util.function.BiConsumer carpetTickrateListener -> a
    java.lang.reflect.Field msptField -> a
    float lastBroadcastCarpetTickrate -> a
    boolean outdatedCompatMode -> c
    java.util.List tickrateListeners -> d
    31:33:void <init>() -> <init>
    36:43:void reset() -> g
    47:91:void detectCarpet() -> h
    94:97:void addCarpetTickrateListener(com.g4mesoft.core.compat.GSICarpetCompatTickrateListener) -> a
    100:103:void removeCarpetTickrateListener(com.g4mesoft.core.compat.GSICarpetCompatTickrateListener) -> b
    106:114:void carpetTickrateChanged(java.lang.String,float) -> a
    118:125:java.util.function.BiConsumer establishTickrateLink(java.util.function.BiConsumer) -> a
    129:144:float getCarpetTickrate() -> g
    148:154:void notifyTickrateChange(float) -> a
    157:157:boolean isCarpetDetected() -> g
    161:161:boolean isTickrateLinked() -> h
    165:165:boolean isOutdatedCompatMode() -> i
com.g4mesoft.core.compat.GSCarpetCompat$GSOutdatedCarpetTickrateListener -> core.t:
    java.lang.reflect.Method tickrateMethod -> b
    172:174:void <init>(java.lang.reflect.Method) -> <init>
    179:182:void accept(java.lang.String,java.lang.Float) -> a
    168:168:void accept(java.lang.Object,java.lang.Object) -> accept
com.g4mesoft.core.compat.GSICarpetCompatTickrateListener -> core.u:
    void onCarpetTickrateChanged(float) -> b
com.g4mesoft.core.server.GSControllerServer -> core.v:
    com.g4mesoft.core.GSVersion SETTING_PERMISSION_INTRODUCTION -> f
    int OP_PERMISSION_LEVEL -> e
    com.g4mesoft.core.server.GSControllerServer instance -> a
    com.mojang.brigadier.CommandDispatcher dispatcher -> a
    net.minecraft.server.MinecraftServer server -> a
    49:53:void <init>() -> <init>
    57:63:void addModule(com.g4mesoft.core.GSIModule) -> a
    66:69:void init(net.minecraft.server.MinecraftServer) -> a
    72:78:void setCommandDispatcher(com.mojang.brigadier.CommandDispatcher) -> b
    81:86:void onPlayerJoin(net.minecraft.class_3222) -> a
    90:90:boolean isExtensionInstalled(net.minecraft.class_3222,com.g4mesoft.GSExtensionUID) -> a
    94:103:void onG4mespeedClientJoined(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> b
    106:108:void onPlayerLeave(net.minecraft.class_3222) -> b
    111:114:void onServerShutdown() -> i
    117:121:void onPlayerPermissionChanged(net.minecraft.class_3222) -> c
    125:126:void addExtensionModules(com.g4mesoft.GSIExtension) -> c
    130:130:boolean isThreadOwner() -> b
    135:135:net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    140:140:boolean isClient() -> c
    145:145:com.g4mesoft.core.GSVersion getCoreVersion() -> a
    150:150:void runOnClient(java.util.function.Consumer) -> a
    154:155:void runOnServer(java.util.function.Consumer) -> b
    159:160:void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> a
    164:172:void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    176:177:void sendPacketToAll(com.g4mesoft.packet.GSIPacket) -> b
    181:182:void sendPacketToAll(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> b
    186:187:void sendPacketToAllExcept(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> b
    191:206:void sendPacketToAllExcept(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion,net.minecraft.class_3222) -> a
    210:210:java.util.Collection getAllPlayers() -> a
    215:219:java.io.File getCacheFile() -> b
    224:225:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    229:230:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    234:235:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    238:242:void sendSettingChange(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType) -> a
    245:245:boolean isAllowedSettingChange(net.minecraft.class_3222) -> a
    249:250:void sendSettingPermissionPacket(net.minecraft.class_3222) -> d
    253:253:net.minecraft.server.MinecraftServer getServer() -> a
    257:257:com.g4mesoft.core.server.GSControllerServer getInstance() -> a
    39:43:void <clinit>() -> <clinit>
com.g4mesoft.core.server.GSIModuleManagerServer -> core.w:
    boolean isExtensionInstalled(net.minecraft.class_3222,com.g4mesoft.GSExtensionUID) -> a
    void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> a
    void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    void sendPacketToAll(com.g4mesoft.packet.GSIPacket) -> b
    void sendPacketToAll(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> b
    void sendPacketToAllExcept(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> b
    void sendPacketToAllExcept(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion,net.minecraft.class_3222) -> a
    java.util.Collection getAllPlayers() -> a
com.g4mesoft.core.server.GSInfoCommand -> core.x:
    13:14:void <init>() -> <init>
    17:20:void registerCommand(com.mojang.brigadier.CommandDispatcher) -> c
    23:25:int informG4mespeedVersion(net.minecraft.class_2168) -> a
    18:18:int lambda$registerCommand$0(com.mojang.brigadier.context.CommandContext) -> a
com.g4mesoft.debug.GSDebug -> core.y:
    boolean GS_DEBUG -> d
    boolean PRINT_TICK_INTERVAL -> e
    long lastMethodCallTimeNs -> a
    3:3:void <init>() -> <init>
    11:11:void onClientTick() -> j
    19:19:void onServerTick() -> k
    28:31:void printTimeIntervalSync(java.lang.String) -> a
    25:25:void <clinit>() -> <clinit>
com.g4mesoft.gui.GSBasePanel -> core.z:
    int BACKGROUND_TOP_COLOR -> f
    int BACKGROUND_BOTTOM_COLOR -> g
    com.g4mesoft.gui.event.GSIButtonStroke closeButton -> a
    15:19:void <init>() -> <init>
    22:22:com.g4mesoft.gui.event.GSIButtonStroke getCloseButton() -> a
    26:34:void setCloseButton(com.g4mesoft.gui.event.GSIButtonStroke) -> a
    37:38:void closePanel() -> l
    41:42:void renderBackground(com.g4mesoft.gui.renderer.GSIRenderer2D) -> a
com.g4mesoft.gui.GSCursorType -> core.A:
    com.g4mesoft.gui.GSCursorType DEFAULT -> a
    com.g4mesoft.gui.GSCursorType IBEAM -> b
    com.g4mesoft.gui.GSCursorType CROSSHAIR -> c
    com.g4mesoft.gui.GSCursorType HAND -> d
    com.g4mesoft.gui.GSCursorType HRESIZE -> e
    com.g4mesoft.gui.GSCursorType VRESIZE -> f
    com.g4mesoft.gui.GSCursorType[] $VALUES -> a
    3:3:com.g4mesoft.gui.GSCursorType[] values() -> values
    3:3:com.g4mesoft.gui.GSCursorType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.g4mesoft.gui.GSElementContext -> core.B:
    com.g4mesoft.gui.GSElementContext instance -> a
    net.minecraft.class_310 client -> b
    com.g4mesoft.gui.renderer.GSIRenderer2D renderer -> a
    com.g4mesoft.gui.GSRootPanel rootPanel -> a
    com.g4mesoft.gui.event.GSEventDispatcher eventDispatcher -> a
    java.util.Map standardCursors -> b
    32:40:void <init>(net.minecraft.class_310) -> <init>
    43:45:void init(net.minecraft.class_310) -> a
    48:48:boolean isInitialized() -> j
    52:54:void dispose() -> m
    57:58:void setContent(com.g4mesoft.gui.GSIElement) -> a
    61:62:void setCursor(com.g4mesoft.gui.GSCursorType) -> a
    65:65:java.lang.String getClipboardString() -> d
    69:70:void setClipboardString(java.lang.String) -> b
    73:73:boolean hasI18nTranslation(java.lang.String) -> a
    77:77:java.lang.String i18nTranslate(java.lang.String) -> a
    81:81:java.lang.String i18nTranslateFormatted(java.lang.String,java.lang.Object[]) -> a
    85:85:com.g4mesoft.gui.renderer.GSIRenderer2D getRenderer() -> a
    89:90:void playSound(net.minecraft.class_1113) -> a
    93:94:void requestFocus(com.g4mesoft.gui.GSIElement) -> b
    97:98:void unfocus(com.g4mesoft.gui.GSIElement) -> c
    101:102:void dispatchMouseEvent(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> a
    105:106:void dispatchKeyEvent(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> a
    109:109:com.g4mesoft.gui.event.GSEventDispatcher getEventDispatcher() -> a
    114:117:void disposeImpl() -> n
    120:131:void setContentImpl(com.g4mesoft.gui.GSIElement) -> d
    134:159:void setCursorImpl(com.g4mesoft.gui.GSCursorType) -> b
    164:174:void setGLFWCursor(int) -> c
    177:177:java.lang.String getClipboardStringImpl() -> e
    181:182:void setClipboardStringImpl(java.lang.String) -> c
    185:185:boolean hasI18nTranslationImpl(java.lang.String) -> b
    189:189:java.lang.String i18nTranslateImpl(java.lang.String) -> b
    193:193:java.lang.String i18nTranslateFormattedImpl(java.lang.String,java.lang.Object[]) -> b
    197:197:com.g4mesoft.module.translation.GSTranslationModule getTranslationModule() -> a
    201:201:com.g4mesoft.gui.renderer.GSIRenderer2D getRendererImpl() -> b
    205:206:void playSoundImpl(net.minecraft.class_1113) -> b
    209:210:void requestFocusImpl(com.g4mesoft.gui.GSIElement) -> e
    213:214:void unfocusImpl(com.g4mesoft.gui.GSIElement) -> f
    217:218:void dispatchMouseEventImpl(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> b
    221:222:void dispatchKeyEventImpl(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> b
    225:225:com.g4mesoft.gui.event.GSEventDispatcher getEventDispatcherImpl() -> b
    229:231:com.g4mesoft.gui.GSElementContext getContext() -> a
com.g4mesoft.gui.GSElementContext$1 -> core.C:
    int[] $SwitchMap$com$g4mesoft$gui$GSCursorType -> a
    137:137:void <clinit>() -> <clinit>
com.g4mesoft.gui.GSIElement -> core.D:
    void setBounds(int,int,int,int) -> a
    void onAdded(com.g4mesoft.gui.GSIElement) -> g
    void onRemoved(com.g4mesoft.gui.GSIElement) -> h
    void update() -> o
    void preRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> b
    void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    void postRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> d
    boolean isAdded() -> k
    com.g4mesoft.gui.GSIElement getParent() -> a
    com.g4mesoft.gui.GSIElement getChildAt(int,int) -> a
    boolean isInBounds(int,int) -> a
    int getX() -> i
    int getY() -> j
    int getWidth() -> k
    int getHeight() -> l
    void addMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> a
    void removeMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> b
    java.util.List getMouseEventListeners() -> c
    void addKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> a
    void removeKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> b
    java.util.List getKeyEventListeners() -> d
    void addFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> a
    void removeFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> b
    java.util.List getFocusEventListeners() -> e
    int getEventOffsetX() -> m
    int getEventOffsetY() -> n
    boolean isPassingEvents() -> l
    void setPassingEvents(boolean) -> b
    void dispatchMouseEvent(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement) -> a
    void dispatchKeyEvent(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement) -> a
    boolean isFocused() -> m
    void setFocused(boolean) -> c
    void requestFocus() -> p
    void unfocus() -> q
    boolean isEditingText() -> n
    com.g4mesoft.gui.GSCursorType getCursor() -> a
    void setCursor(com.g4mesoft.gui.GSCursorType) -> a
com.g4mesoft.gui.GSIParentElement -> core.E:
    void add(com.g4mesoft.gui.GSIElement) -> i
    void remove(com.g4mesoft.gui.GSIElement) -> j
    void removeAll() -> r
    java.util.List getChildren() -> f
com.g4mesoft.gui.GSIViewport -> core.F:
    int getWidth() -> k
    int getHeight() -> l
com.g4mesoft.gui.GSInfoGUI -> core.G:
    int TEXT_COLOR -> h
    int VERSION_COLOR -> i
    int LESS_THAN_VERSION_COLOR -> j
    int INVALID_VERSION_COLOR -> k
    java.lang.String SERVER_VERSION_TITLE_MSG -> r
    java.lang.String INVALID_VERSION_MSG -> s
    java.lang.String CLIENT_VERSION_TITLE_MSG -> t
    com.g4mesoft.core.client.GSControllerClient controllerClient -> b
    20:22:void <init>(com.g4mesoft.core.client.GSControllerClient) -> <init>
    26:35:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    38:57:void drawVersion(com.g4mesoft.gui.renderer.GSIRenderer2D,java.lang.String,com.g4mesoft.core.GSVersion,int,int) -> a
com.g4mesoft.gui.GSPanel -> core.H:
    com.g4mesoft.gui.GSIElement parent -> a
    int x -> l
    int y -> m
    int width -> n
    int height -> o
    java.util.List mouseEventListeners -> e
    java.util.List keyEventListeners -> f
    java.util.List focusEventListeners -> g
    boolean passingEvents -> f
    boolean focused -> g
    java.util.Map buttonStrokes -> c
    com.g4mesoft.gui.event.GSIMouseListener buttonMouseListener -> a
    com.g4mesoft.gui.event.GSIKeyListener buttonKeyListener -> a
    com.g4mesoft.gui.GSCursorType cursor -> g
    40:50:void <init>() -> <init>
    54:65:void setBounds(int,int,int,int) -> a
    68:68:void onBoundsChanged() -> s
    72:80:void onAdded(com.g4mesoft.gui.GSIElement) -> g
    84:90:void onRemoved(com.g4mesoft.gui.GSIElement) -> h
    94:94:void update() -> o
    98:100:void preRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> b
    104:104:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    108:109:void postRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> d
    113:113:boolean isAdded() -> k
    118:118:com.g4mesoft.gui.GSIElement getParent() -> a
    123:123:com.g4mesoft.gui.GSIElement getChildAt(int,int) -> a
    128:132:boolean isInBounds(int,int) -> a
    137:137:int getX() -> i
    142:142:int getY() -> j
    147:147:int getWidth() -> k
    152:152:int getHeight() -> l
    157:161:void addMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> a
    165:171:void removeMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> b
    175:177:java.util.List getMouseEventListeners() -> c
    182:186:void addKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> a
    190:196:void removeKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> b
    200:202:java.util.List getKeyEventListeners() -> d
    207:211:void addFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> a
    215:221:void removeFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> b
    225:227:java.util.List getFocusEventListeners() -> e
    232:232:boolean isPassingEvents() -> l
    237:238:void setPassingEvents(boolean) -> b
    242:243:void dispatchMouseEvent(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement) -> a
    247:248:void dispatchKeyEvent(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement) -> a
    252:252:boolean isFocused() -> m
    257:258:void setFocused(boolean) -> c
    262:263:void requestFocus() -> p
    267:269:void unfocus() -> q
    273:273:boolean isEditingText() -> n
    278:278:com.g4mesoft.gui.GSCursorType getCursor() -> a
    283:287:void setCursor(com.g4mesoft.gui.GSCursorType) -> a
    291:291:int getEventOffsetX() -> m
    296:296:int getEventOffsetY() -> n
    300:327:void putButtonStroke(com.g4mesoft.gui.event.GSIButtonStroke,java.lang.Runnable) -> a
    330:332:void removeButtonStroke(com.g4mesoft.gui.event.GSIButtonStroke) -> b
    335:344:void handleButtonEvent(com.g4mesoft.gui.event.GSEvent) -> a
    347:347:boolean hasI18nTranslation(java.lang.String) -> a
    351:351:java.lang.String i18nTranslate(java.lang.String) -> a
    355:355:java.lang.String i18nTranslateFormatted(java.lang.String,java.lang.Object[]) -> a
    360:360:int hashCode() -> hashCode
    365:365:boolean equals(java.lang.Object) -> equals
    18:18:void access$000(com.g4mesoft.gui.GSPanel,com.g4mesoft.gui.event.GSEvent) -> a
com.g4mesoft.gui.GSPanel$1 -> core.I:
    com.g4mesoft.gui.GSPanel this$0 -> a
    304:304:void <init>(com.g4mesoft.gui.GSPanel) -> <init>
    307:308:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
com.g4mesoft.gui.GSPanel$2 -> core.J:
    com.g4mesoft.gui.GSPanel this$0 -> a
    315:315:void <init>(com.g4mesoft.gui.GSPanel) -> <init>
    318:320:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
com.g4mesoft.gui.GSParentPanel -> core.K:
    java.util.List children -> h
    13:15:void <init>() -> <init>
    19:22:void add(com.g4mesoft.gui.GSIElement) -> i
    26:28:void remove(com.g4mesoft.gui.GSIElement) -> j
    32:34:void removeAll() -> r
    38:41:void update() -> o
    44:46:void updateChildren() -> t
    50:53:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    56:61:void renderChildren(com.g4mesoft.gui.renderer.GSIRenderer2D) -> e
    65:70:com.g4mesoft.gui.GSIElement getChildAt(int,int) -> a
    75:75:java.util.List getChildren() -> f
com.g4mesoft.gui.GSRootPanel -> core.L:
    com.g4mesoft.gui.GSIElement content -> b
    boolean elementFocused -> h
    26:27:void <init>() -> <init>
    32:38:void init() -> init
    43:46:void removed() -> removed
    51:54:void tick() -> tick
    59:70:void render(int,int,float) -> render
    75:76:void method_16014(double,double) -> method_16014
    81:83:boolean mouseClicked(double,double,int) -> mouseClicked
    89:91:boolean mouseReleased(double,double,int) -> mouseReleased
    97:98:boolean mouseDragged(double,double,int,double,double) -> mouseDragged
    104:106:boolean mouseScrolled(double,double,double) -> mouseScrolled
    112:117:boolean keyPressed(int,int,int) -> keyPressed
    123:124:boolean method_16803(int,int,int) -> method_16803
    130:131:boolean charTyped(char,int) -> charTyped
    136:136:void setBounds(int,int,int,int) -> a
    141:141:void onAdded(com.g4mesoft.gui.GSIElement) -> g
    146:146:void onRemoved(com.g4mesoft.gui.GSIElement) -> h
    151:153:void update() -> o
    157:157:void preRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> b
    161:166:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    170:170:void postRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> d
    174:174:boolean isAdded() -> k
    179:179:com.g4mesoft.gui.GSIElement getParent() -> a
    184:184:boolean isInBounds(int,int) -> a
    189:189:int getX() -> i
    194:194:int getY() -> j
    199:199:int getWidth() -> k
    204:204:int getHeight() -> l
    209:209:void addMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> a
    213:213:void removeMouseEventListener(com.g4mesoft.gui.event.GSIMouseListener) -> b
    217:217:java.util.List getMouseEventListeners() -> c
    222:222:void addKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> a
    226:226:void removeKeyEventListener(com.g4mesoft.gui.event.GSIKeyListener) -> b
    230:230:java.util.List getKeyEventListeners() -> d
    235:235:void addFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> a
    239:239:void removeFocusEventListener(com.g4mesoft.gui.event.GSIFocusEventListener) -> b
    243:243:java.util.List getFocusEventListeners() -> e
    248:248:int getEventOffsetX() -> m
    253:253:int getEventOffsetY() -> n
    258:258:boolean isPassingEvents() -> l
    263:263:void setPassingEvents(boolean) -> b
    267:267:void dispatchMouseEvent(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement) -> a
    271:271:void dispatchKeyEvent(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement) -> a
    275:275:boolean isFocused() -> m
    280:281:void setFocused(boolean) -> c
    285:286:void requestFocus() -> p
    290:292:void unfocus() -> q
    296:296:boolean isEditingText() -> n
    301:301:com.g4mesoft.gui.GSCursorType getCursor() -> a
    306:306:void setCursor(com.g4mesoft.gui.GSCursorType) -> a
    310:310:com.g4mesoft.gui.GSIElement getChildAt(int,int) -> a
    314:327:void setContent(com.g4mesoft.gui.GSIElement) -> a
    331:331:void add(com.g4mesoft.gui.GSIElement) -> i
    336:336:void remove(com.g4mesoft.gui.GSIElement) -> j
    341:341:void removeAll() -> r
    346:346:java.util.List getChildren() -> f
com.g4mesoft.gui.GSTabbedGUI -> core.M:
    int TAB_VERTICAL_PADDING -> p
    int TAB_HORIZONTAL_PADDING -> q
    int HORIZONTAL_MARGIN -> r
    int VERTICAL_MARGIN -> s
    int MINIMUM_TAB_WIDTH -> t
    int TAB_TEXT_COLOR -> u
    int TAB_BORDER_COLOR -> v
    int SELECTED_TEXT_COLOR -> w
    int SELECTED_BACKGROUND_COLOR -> x
    int HOVERED_BACKGROUND_COLOR -> y
    int tabHeight -> z
    java.util.List tabs -> i
    boolean tabsChanged -> i
    int selectedTabIndex -> A
    45:54:void <init>() -> <init>
    58:61:void onBoundsChanged() -> s
    64:69:void addTab(java.lang.String,com.g4mesoft.gui.GSPanel) -> a
    72:82:void setSelectedTabIndex(int) -> d
    85:85:com.g4mesoft.gui.GSPanel getTabContent(int) -> a
    89:153:void layoutTabs(com.g4mesoft.gui.renderer.GSIRenderer2D) -> f
    157:165:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    168:179:void renderTabs(com.g4mesoft.gui.renderer.GSIRenderer2D) -> g
    182:196:void renderTab(com.g4mesoft.gui.renderer.GSIRenderer2D,com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,int,boolean) -> a
    199:200:void playClickSound() -> u
    204:218:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    106:106:int lambda$layoutTabs$0(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,com.g4mesoft.gui.GSTabbedGUI$GSTabEntry) -> a
    22:22:int access$100(com.g4mesoft.gui.GSTabbedGUI) -> a
com.g4mesoft.gui.GSTabbedGUI$GSTabEntry -> core.N:
    java.lang.String title -> u
    com.g4mesoft.gui.GSPanel tabContent -> b
    java.lang.String displayTitle -> v
    int x -> l
    int width -> n
    com.g4mesoft.gui.GSTabbedGUI this$0 -> b
    229:232:void <init>(com.g4mesoft.gui.GSTabbedGUI,java.lang.String,com.g4mesoft.gui.GSPanel) -> <init>
    235:235:java.lang.String getTitle() -> f
    239:239:com.g4mesoft.gui.GSPanel getTabContent() -> a
    243:244:void setDisplayTitle(java.lang.String) -> d
    247:247:java.lang.String getDisplayTitle() -> g
    251:255:boolean isHovered(int,int) -> b
    259:260:void setX(int) -> e
    263:263:int getX() -> i
    267:268:void setWidth(int) -> f
    271:271:int getWidth() -> k
    220:220:boolean access$000(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,int,int) -> a
com.g4mesoft.gui.action.GSAbstractActionPanel -> core.O:
    com.g4mesoft.gui.action.GSIActionListener listener -> a
    boolean enabled -> j
    17:23:void <init>(com.g4mesoft.gui.action.GSIActionListener) -> <init>
    void onClicked(int,int) -> a
    28:29:void playClickSound() -> u
    33:37:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    40:42:void dispatchActionPerformedEvent() -> v
    45:45:boolean isEnabled() -> o
    49:50:void setEnabled(boolean) -> d
com.g4mesoft.gui.action.GSAbstractTextActionPanel -> core.P:
    int TEXT_COLOR -> h
    int DISABLED_TEXT_COLOR -> B
    java.lang.String translationKey -> w
    boolean literalText -> k
    java.lang.String displayText -> x
    16:22:void <init>(java.lang.String,boolean,com.g4mesoft.gui.action.GSIActionListener) -> <init>
    26:29:void onBoundsChanged() -> s
    33:38:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    void renderBackground(com.g4mesoft.gui.renderer.GSIRenderer2D,boolean) -> a
    43:53:void renderForeground(com.g4mesoft.gui.renderer.GSIRenderer2D,boolean) -> b
    56:56:java.lang.String getTranslationKey() -> h
    60:63:void setTranslationKey(java.lang.String) -> e
    66:70:void setLiteralText(java.lang.String) -> f
    73:73:boolean isLiteralText() -> p
com.g4mesoft.gui.action.GSButtonPanel -> core.Q:
    net.minecraft.class_2960 TEXTURE_IDENTIFIER -> a
    com.g4mesoft.gui.renderer.GSTexture BUTTON_TEXTURE -> a
    int BUTTON_HEIGHT -> C
    18:19:void <init>(java.lang.String,com.g4mesoft.gui.action.GSIActionListener) -> <init>
    22:25:void <init>(java.lang.String,boolean,com.g4mesoft.gui.action.GSIActionListener) -> <init>
    28:29:void setPreferredBounds(int,int,int) -> a
    34:38:void renderBackground(com.g4mesoft.gui.renderer.GSIRenderer2D,boolean) -> a
    42:44:void onClicked(int,int) -> a
    48:59:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    12:13:void <clinit>() -> <clinit>
com.g4mesoft.gui.action.GSIActionListener -> core.R:
    void actionPerformed() -> actionPerformed
com.g4mesoft.gui.action.GSSliderPanel -> core.S:
    net.minecraft.class_2960 TEXTURE_IDENTIFIER -> a
    com.g4mesoft.gui.renderer.GSTexture SLIDER_TEXTURE -> b
    int SLIDER_HEIGHT -> D
    int MAX_WIDTH -> E
    float value -> b
    21:22:void <init>(java.lang.String,com.g4mesoft.gui.action.GSIActionListener) -> <init>
    25:28:void <init>(java.lang.String,boolean,com.g4mesoft.gui.action.GSIActionListener) -> <init>
    32:39:void renderBackground(com.g4mesoft.gui.renderer.GSIRenderer2D,boolean) -> a
    43:45:void onClicked(int,int) -> a
    49:55:void mouseDragged(com.g4mesoft.gui.event.GSMouseEvent) -> b
    59:65:void mouseReleased(com.g4mesoft.gui.event.GSMouseEvent) -> c
    68:68:float getValue() -> h
    72:73:void setValue(float) -> c
    12:13:void <clinit>() -> <clinit>
com.g4mesoft.gui.action.GSToggleSwitchPanel -> core.T:
    net.minecraft.class_2960 TEXTURE_IDENTIFIER -> a
    com.g4mesoft.gui.renderer.GSTexture SWITCH_TEXTURE -> c
    int SWITCH_WIDTH -> F
    int SWITCH_HEIGHT -> G
    boolean toggled -> l
    21:22:void <init>(com.g4mesoft.gui.action.GSIActionListener) -> <init>
    25:30:void <init>(com.g4mesoft.gui.action.GSIActionListener,boolean) -> <init>
    33:34:void setPreferredBounds(int,int) -> b
    41:42:void setBounds(int,int,int,int) -> a
    46:49:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    53:54:void onClicked(int,int) -> a
    58:80:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    83:86:void toggle() -> w
    89:89:boolean isToggled() -> q
    93:94:void setToggled(boolean) -> e
    12:13:void <clinit>() -> <clinit>
com.g4mesoft.gui.event.GSCompoundButtonStroke -> core.U:
    com.g4mesoft.gui.event.GSIButtonStroke button0 -> b
    com.g4mesoft.gui.event.GSIButtonStroke button1 -> c
    8:14:void <init>(com.g4mesoft.gui.event.GSIButtonStroke,com.g4mesoft.gui.event.GSIButtonStroke) -> <init>
    17:17:com.g4mesoft.gui.event.GSIButtonStroke getButton0() -> b
    21:21:com.g4mesoft.gui.event.GSIButtonStroke getButton1() -> c
    26:26:boolean isMatching(com.g4mesoft.gui.event.GSEvent) -> a
com.g4mesoft.gui.event.GSEvent -> core.V:
    int UNKNOWN_TYPE -> H
    int NO_MODIFIERS -> I
    int MODIFIER_SHIFT -> J
    int MODIFIER_CONTROL -> K
    int MODIFIER_ALT -> L
    int MODIFIER_SUPER -> M
    int MODIFIER_CAPS_LOCK -> N
    int MODIFIER_NUM_LOCK -> O
    int ALL_MODIFIERS -> P
    boolean consumed -> m
    24:26:void <init>() -> <init>
    int getType() -> o
    31:32:void consume() -> x
    35:35:boolean isConsumed() -> r
com.g4mesoft.gui.event.GSEventDispatcher -> core.W:
    int BACKSPACE_CONTROL_CHARACTER -> Q
    int TAB_CONTROL_CHARACTER -> R
    int NEW_LINE_CONTROL_CHARACTER -> S
    int CONTROL_Z_CONTROL_CHARACTER -> T
    int ESCAPE_CONTROL_CHARACTER -> U
    int DELETE_CONTROL_CHARACTER -> V
    int TRANSLATE_TO_ROOT -> W
    int TRANSLATE_FROM_ROOT -> X
    com.g4mesoft.gui.GSRootPanel rootPanel -> a
    com.g4mesoft.gui.GSIElement focusedElement -> c
    com.g4mesoft.gui.GSCursorType cursor -> g
    27:32:void <init>(com.g4mesoft.gui.GSRootPanel) -> <init>
    35:37:void reset() -> g
    40:52:void mouseMoved(float,float) -> b
    55:60:void setCurrentCursor(com.g4mesoft.gui.GSCursorType) -> c
    63:72:void mouseDragged(int,float,float,float,float) -> a
    75:87:void mousePressed(int,float,float,int) -> a
    90:99:void mouseReleased(int,float,float,int) -> b
    102:111:void mouseScroll(float,float,float,float) -> b
    114:120:void keyPressed(int,int,int) -> b
    123:144:void checkAndDispatchControlCharacter(int,int) -> c
    147:151:void keyRepeated(int,int,int) -> c
    154:158:void keyReleased(int,int,int) -> d
    161:165:void keyTyped(int) -> g
    168:170:void requestFocus(com.g4mesoft.gui.GSIElement) -> b
    173:175:void unfocus(com.g4mesoft.gui.GSIElement) -> c
    179:181:boolean isChildOfRoot(com.g4mesoft.gui.GSIElement) -> a
    185:202:void setFocusedElement(com.g4mesoft.gui.GSIElement) -> k
    205:212:com.g4mesoft.gui.event.GSMouseEvent translateMouseEvent(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSMouseEvent,int) -> a
    216:216:com.g4mesoft.gui.GSIElement getTopElementAt(int,int) -> b
    220:233:com.g4mesoft.gui.event.GSEventDispatcher$GSIElementResult getTopElementResultAt(int,int) -> a
    237:267:void dispatchMouseEvent(com.g4mesoft.gui.event.GSMouseEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> a
    270:290:void dispatchKeyEvent(com.g4mesoft.gui.event.GSKeyEvent,com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.GSIElement) -> a
    293:302:void distributeMouseEvent(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSMouseEvent,java.util.function.BiConsumer) -> a
    305:315:void distributeKeyEvent(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSKeyEvent,java.util.function.BiConsumer) -> a
    318:320:void invokeMouseEventListeners(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSMouseEvent,java.util.function.BiConsumer) -> b
    323:325:void invokeKeyEventListeners(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSKeyEvent,java.util.function.BiConsumer) -> b
    328:330:void invokeFocusEventListeners(com.g4mesoft.gui.GSIElement,com.g4mesoft.gui.event.GSFocusEvent,java.util.function.BiConsumer) -> a
    333:333:int convertMouseX(float) -> a
    337:337:int convertMouseY(float) -> b
com.g4mesoft.gui.event.GSEventDispatcher$GSIElementResult -> core.X:
    com.g4mesoft.gui.GSIElement element -> d
    int x -> l
    int y -> m
    com.g4mesoft.gui.event.GSEventDispatcher this$0 -> b
    346:350:void <init>(com.g4mesoft.gui.event.GSEventDispatcher,com.g4mesoft.gui.GSIElement,int,int) -> <init>
    340:340:com.g4mesoft.gui.GSIElement access$000(com.g4mesoft.gui.event.GSEventDispatcher$GSIElementResult) -> a
    340:340:int access$100(com.g4mesoft.gui.event.GSEventDispatcher$GSIElementResult) -> a
    340:340:int access$200(com.g4mesoft.gui.event.GSEventDispatcher$GSIElementResult) -> b
com.g4mesoft.gui.event.GSFocusEvent -> core.Y:
    int FOCUS_GAINED_TYPE -> Y
    int FOCUS_LOST_TYPE -> Z
    int FIRST_TYPE -> aa
    int LAST_TYPE -> ab
    int type -> ac
    13:18:void <init>(int) -> <init>
    22:22:int getType() -> o
    26:26:com.g4mesoft.gui.event.GSFocusEvent createFocusGainedEvent() -> a
    30:30:com.g4mesoft.gui.event.GSFocusEvent createFocusLostEvent() -> b
com.g4mesoft.gui.event.GSIButtonStroke -> core.Z:
    boolean isMatching(com.g4mesoft.gui.event.GSEvent) -> a
com.g4mesoft.gui.event.GSIEventListener -> core.aa:
com.g4mesoft.gui.event.GSIFocusEventListener -> core.ab:
    6:6:void focusGained(com.g4mesoft.gui.event.GSFocusEvent) -> a
    9:9:void focusLost(com.g4mesoft.gui.event.GSFocusEvent) -> b
com.g4mesoft.gui.event.GSIKeyListener -> core.ac:
    6:6:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    9:9:void keyReleased(com.g4mesoft.gui.event.GSKeyEvent) -> b
    12:12:void keyTyped(com.g4mesoft.gui.event.GSKeyEvent) -> c
com.g4mesoft.gui.event.GSIMouseListener -> core.ad:
    6:6:void mouseMoved(com.g4mesoft.gui.event.GSMouseEvent) -> d
    9:9:void mouseDragged(com.g4mesoft.gui.event.GSMouseEvent) -> b
    12:12:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    15:15:void mouseReleased(com.g4mesoft.gui.event.GSMouseEvent) -> c
    18:18:void mouseScrolled(com.g4mesoft.gui.event.GSMouseEvent) -> e
com.g4mesoft.gui.event.GSKeyBindingButtonStroke -> core.ae:
    com.g4mesoft.hotkey.GSKeyBinding keyBinding -> b
    12:17:void <init>(com.g4mesoft.hotkey.GSKeyBinding) -> <init>
    21:37:boolean isMatching(com.g4mesoft.gui.event.GSEvent) -> a
    41:51:boolean isMouseEventMatching(com.g4mesoft.gui.event.GSMouseEvent) -> a
    55:74:boolean isKeyEventMatching(com.g4mesoft.gui.event.GSKeyEvent) -> a
com.g4mesoft.gui.event.GSKeyBindingButtonStroke$1 -> core.af:
    int[] $SwitchMap$net$minecraft$client$util$InputUtil$Type -> b
    23:23:void <clinit>() -> <clinit>
com.g4mesoft.gui.event.GSKeyButtonStroke -> core.ag:
    int keyCode -> ad
    int modifiers -> ae
    9:10:void <init>(int) -> <init>
    12:15:void <init>(int,int) -> <init>
    19:31:boolean isMatching(com.g4mesoft.gui.event.GSEvent) -> a
com.g4mesoft.gui.event.GSKeyEvent -> core.ah:
    int KEY_PRESSED_TYPE -> af
    int KEY_REPEATED_TYPE -> ag
    int KEY_RELEASED_TYPE -> ah
    int KEY_TYPED_TYPE -> ai
    int FIRST_TYPE -> aa
    int LAST_TYPE -> ab
    int UNKNOWN_KEY -> aj
    int UNKNOWN_CODE_POINT -> ak
    int KEY_SPACE -> al
    int KEY_APOSTROPHE -> am
    int KEY_COMMA -> an
    int KEY_MINUS -> ao
    int KEY_PERIOD -> ap
    int KEY_SLASH -> aq
    int KEY_0 -> ar
    int KEY_1 -> as
    int KEY_2 -> at
    int KEY_3 -> au
    int KEY_4 -> av
    int KEY_5 -> aw
    int KEY_6 -> ax
    int KEY_7 -> ay
    int KEY_8 -> az
    int KEY_9 -> aA
    int KEY_SEMICOLON -> aB
    int KEY_EQUAL -> aC
    int KEY_A -> aD
    int KEY_B -> aE
    int KEY_C -> aF
    int KEY_D -> aG
    int KEY_E -> aH
    int KEY_F -> aI
    int KEY_G -> aJ
    int KEY_H -> aK
    int KEY_I -> aL
    int KEY_J -> aM
    int KEY_K -> aN
    int KEY_L -> aO
    int KEY_M -> aP
    int KEY_N -> aQ
    int KEY_O -> aR
    int KEY_P -> aS
    int KEY_Q -> aT
    int KEY_R -> aU
    int KEY_S -> aV
    int KEY_T -> aW
    int KEY_U -> aX
    int KEY_V -> aY
    int KEY_W -> aZ
    int KEY_X -> ba
    int KEY_Y -> bb
    int KEY_Z -> bc
    int KEY_LEFT_BRACKET -> bd
    int KEY_BACKSLASH -> be
    int KEY_RIGHT_BRACKET -> bf
    int KEY_GRAVE_ACCENT -> bg
    int KEY_WORLD_1 -> bh
    int KEY_WORLD_2 -> bi
    int KEY_ESCAPE -> bj
    int KEY_ENTER -> bk
    int KEY_TAB -> bl
    int KEY_BACKSPACE -> bm
    int KEY_INSERT -> bn
    int KEY_DELETE -> bo
    int KEY_RIGHT -> bp
    int KEY_LEFT -> bq
    int KEY_DOWN -> br
    int KEY_UP -> bs
    int KEY_PAGE_UP -> bt
    int KEY_PAGE_DOWN -> bu
    int KEY_HOME -> bv
    int KEY_END -> bw
    int KEY_CAPS_LOCK -> bx
    int KEY_SCROLL_LOCK -> by
    int KEY_NUM_LOCK -> bz
    int KEY_PRINT_SCREEN -> bA
    int KEY_PAUSE -> bB
    int KEY_F1 -> bC
    int KEY_F2 -> bD
    int KEY_F3 -> bE
    int KEY_F4 -> bF
    int KEY_F5 -> bG
    int KEY_F6 -> bH
    int KEY_F7 -> bI
    int KEY_F8 -> bJ
    int KEY_F9 -> bK
    int KEY_F10 -> bL
    int KEY_F11 -> bM
    int KEY_F12 -> bN
    int KEY_F13 -> bO
    int KEY_F14 -> bP
    int KEY_F15 -> bQ
    int KEY_F16 -> bR
    int KEY_F17 -> bS
    int KEY_F18 -> bT
    int KEY_F19 -> bU
    int KEY_F20 -> bV
    int KEY_F21 -> bW
    int KEY_F22 -> bX
    int KEY_F23 -> bY
    int KEY_F24 -> bZ
    int KEY_F25 -> ca
    int KEY_KP_0 -> cb
    int KEY_KP_1 -> cc
    int KEY_KP_2 -> cd
    int KEY_KP_3 -> ce
    int KEY_KP_4 -> cf
    int KEY_KP_5 -> cg
    int KEY_KP_6 -> ch
    int KEY_KP_7 -> ci
    int KEY_KP_8 -> cj
    int KEY_KP_9 -> ck
    int KEY_KP_DECIMAL -> cl
    int KEY_KP_DIVIDE -> cm
    int KEY_KP_MULTIPLY -> cn
    int KEY_KP_SUBTRACT -> co
    int KEY_KP_ADD -> cp
    int KEY_KP_ENTER -> cq
    int KEY_KP_EQUAL -> cr
    int KEY_LEFT_SHIFT -> cs
    int KEY_LEFT_CONTROL -> ct
    int KEY_LEFT_ALT -> cu
    int KEY_LEFT_SUPER -> cv
    int KEY_RIGHT_SHIFT -> cw
    int KEY_RIGHT_CONTROL -> cx
    int KEY_RIGHT_ALT -> cy
    int KEY_RIGHT_SUPER -> cz
    int KEY_MENU -> cA
    int KEY_LAST -> cB
    int UNKNOWN_SCANCODE -> cC
    int type -> ac
    int keyCode -> ad
    int scanCode -> cD
    int modifiers -> ae
    154:163:void <init>(int,int,int,int) -> <init>
    167:167:int getType() -> o
    171:171:int getKeyCode() -> p
    175:175:int getScanCode() -> q
    179:179:int getCodePoint() -> r
    183:183:int getModifiers() -> s
    187:187:boolean isModifierHeld(int) -> a
    191:191:boolean isRepeating() -> s
    195:240:boolean isPrintableKey() -> t
    244:244:com.g4mesoft.gui.event.GSKeyEvent createKeyPressedEvent(int,int,int) -> a
    248:248:com.g4mesoft.gui.event.GSKeyEvent createKeyRepeatedEvent(int,int,int) -> b
    252:252:com.g4mesoft.gui.event.GSKeyEvent createKeyReleasedEvent(int,int,int) -> c
    256:256:com.g4mesoft.gui.event.GSKeyEvent createKeyTypedEvent(int) -> a
com.g4mesoft.gui.event.GSMouseButtonStroke -> core.ai:
    int button -> cE
    int modifiers -> ae
    9:10:void <init>(int) -> <init>
    12:15:void <init>(int,int) -> <init>
    19:31:boolean isMatching(com.g4mesoft.gui.event.GSEvent) -> a
com.g4mesoft.gui.event.GSMouseEvent -> core.aj:
    int MOUSE_MOVED_TYPE -> cF
    int MOUSE_DRAGGED_TYPE -> cG
    int MOUSE_PRESSED_TYPE -> cH
    int MOUSE_RELEASED_TYPE -> cI
    int MOUSE_SCROLLED_TYPE -> cJ
    int FIRST_EVENT_TYPE -> cK
    int LAST_EVENT_TYPE -> cL
    int UNKNOWN_BUTTON -> cM
    int BUTTON_1 -> cN
    int BUTTON_2 -> cO
    int BUTTON_3 -> cP
    int BUTTON_4 -> cQ
    int BUTTON_5 -> cR
    int BUTTON_6 -> cS
    int BUTTON_7 -> cT
    int BUTTON_8 -> cU
    int BUTTON_LEFT -> cV
    int BUTTON_MIDDLE -> cW
    int BUTTON_RIGHT -> cX
    int FIRST_BUTTON -> cY
    int LAST_BUTTON -> cZ
    int type -> ac
    int x -> l
    int y -> m
    int button -> cE
    int modifiers -> ae
    float extraX -> c
    float extraY -> d
    53:69:void <init>(int,int,int,int,int,float,float) -> <init>
    73:73:int getType() -> o
    77:77:int getX() -> i
    81:82:void setX(int) -> e
    85:85:int getY() -> j
    89:90:void setY(int) -> h
    93:93:int getButton() -> t
    97:97:int getModifiers() -> s
    101:101:boolean isModifierHeld(int) -> a
    105:105:float getDragX() -> i
    109:109:float getDragY() -> j
    113:113:float getScrollX() -> k
    117:117:float getScrollY() -> l
    121:121:com.g4mesoft.gui.event.GSMouseEvent createMouseMovedEvent(int,int) -> a
    125:125:com.g4mesoft.gui.event.GSMouseEvent createMouseDraggedEvent(int,int,int,float,float) -> a
    129:129:com.g4mesoft.gui.event.GSMouseEvent createMousePressedEvent(int,int,int,int) -> a
    133:133:com.g4mesoft.gui.event.GSMouseEvent createMouseReleasedEvent(int,int,int,int) -> b
    137:137:com.g4mesoft.gui.event.GSMouseEvent createMouseScrolledEvent(int,int,float,float) -> a
com.g4mesoft.gui.hotkey.GSHotkeyElementGUI -> core.ak:
    int HOTKEY_HEIGHT -> da
    int HOTKEY_PADDING -> db
    int MAX_NAME_WIDTH -> dc
    int MODIFY_BUTTON_WIDTH -> dd
    int RESET_BUTTON_WIDTH -> de
    int FONT_COLOR -> df
    int HOVERED_BACKGROUND -> dg
    java.lang.String RESET_TEXT -> y
    java.lang.String CANCEL_TEXT -> z
    com.g4mesoft.gui.hotkey.GSHotkeyGUI hotkeyGui -> a
    com.g4mesoft.hotkey.GSKeyBinding keyBinding -> b
    java.lang.String nameTranslationKey -> A
    java.lang.String localizedKeyCodeName -> B
    boolean modifyingKeyCode -> n
    com.g4mesoft.gui.action.GSButtonPanel modifyButton -> a
    com.g4mesoft.gui.action.GSButtonPanel resetButton -> b
    42:60:void <init>(com.g4mesoft.gui.hotkey.GSHotkeyGUI,com.g4mesoft.hotkey.GSKeyBinding) -> <init>
    64:76:void onBoundsChanged() -> s
    80:84:void onAdded(com.g4mesoft.gui.GSIElement) -> g
    88:92:void onRemoved(com.g4mesoft.gui.GSIElement) -> h
    95:97:void updateButtons() -> y
    100:107:void updateResetButton() -> z
    110:115:void updateModifyButton() -> A
    119:126:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    129:132:void setKeyCode(net.minecraft.class_3675$class_306) -> a
    135:147:void setModifying(boolean) -> f
    151:156:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    160:170:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    173:173:int getPreferredHeight() -> u
    177:177:int getPreferredWidth() -> v
    56:56:void lambda$new$1() -> B
    49:54:void lambda$new$0(com.g4mesoft.gui.hotkey.GSHotkeyGUI,com.g4mesoft.hotkey.GSKeyBinding) -> a
com.g4mesoft.gui.hotkey.GSHotkeyGUI -> core.al:
    int HOTKEY_MARGIN -> dh
    int CATEGORY_MARGIN -> di
    int CATEGORY_TITLE_BOTTOM_MARGIN -> dj
    int CATEGORY_TITLE_COLOR -> dk
    java.util.Map hotkeyCategories -> d
    int contentHeight -> dl
    boolean needsRelayout -> o
    com.g4mesoft.gui.hotkey.GSHotkeyElementGUI changingElement -> a
    31:39:void <init>(com.g4mesoft.hotkey.GSKeyManager) -> <init>
    42:57:void layoutHotkeys() -> C
    61:64:void onBoundsChanged() -> s
    68:77:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    81:82:void onKeyRegistered(com.g4mesoft.hotkey.GSKeyBinding) -> a
    85:93:void addKeyEntry(com.g4mesoft.hotkey.GSKeyBinding) -> b
    97:97:int getContentWidth() -> w
    102:102:int getContentHeight() -> x
    106:109:void setChangingElement(com.g4mesoft.gui.hotkey.GSHotkeyElementGUI) -> a
    112:112:com.g4mesoft.gui.hotkey.GSHotkeyElementGUI getChangingElement() -> a
com.g4mesoft.gui.hotkey.GSHotkeyGUI$GSHotkeyCategoryGUI -> core.am:
    java.lang.String categoryName -> C
    java.util.List elements -> j
    int x -> l
    int y -> m
    int w -> dm
    com.g4mesoft.gui.hotkey.GSHotkeyGUI this$0 -> b
    125:129:void <init>(com.g4mesoft.gui.hotkey.GSHotkeyGUI,java.lang.String) -> <init>
    132:137:void addKeyBinding(com.g4mesoft.hotkey.GSKeyBinding) -> c
    140:147:int getPreferredWidth() -> v
    151:164:int layoutHotkeys(int,int,int) -> a
    168:173:void renderTitle(com.g4mesoft.gui.renderer.GSIRenderer2D) -> h
com.g4mesoft.gui.renderer.GSBasicRenderer2D -> core.an:
    int LINE_SPACING -> dn
    char FORMATTING_CHAR -> a
    net.minecraft.class_310 client -> b
    int mouseX -> do
    int mouseY -> dp
    float partialTicks -> e
    com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D transform -> a
    java.util.LinkedList transformStack -> a
    33:38:void <init>(net.minecraft.class_310) -> <init>
    42:45:void beginRendering(int,int,float) -> a
    49:51:void endRendering() -> D
    55:55:int getMouseX() -> y
    60:60:int getMouseY() -> z
    65:65:float getPartialTicks() -> m
    70:71:void fillRect(int,int,int,int,int) -> a
    75:111:void fillRectGradient(int,int,int,int,int,int) -> a
    115:120:void drawRect(int,int,int,int,int) -> b
    124:125:void drawTexture(com.g4mesoft.gui.renderer.GSTexture,int,int,int,int,int,int) -> a
    129:150:void drawTexture(com.g4mesoft.gui.renderer.GSITextureRegion,int,int) -> a
    154:155:void drawVLine(int,int,int,int) -> b
    159:160:void drawHLine(int,int,int,int) -> c
    164:171:void drawDottedVLine(int,int,int,int,int,int) -> b
    175:182:void drawDottedHLine(int,int,int,int,int,int) -> c
    186:186:int getFontHeight() -> A
    191:191:int getLineHeight() -> B
    196:196:float getStringWidth(java.lang.String) -> a
    201:226:java.lang.String trimString(java.lang.String,int,java.lang.String) -> a
    231:282:java.util.List splitToLines(java.lang.String,int) -> a
    287:299:void drawString(java.lang.String,int,int,int,boolean) -> a
    303:305:void pushClip(int,int,int,int) -> d
    309:311:void pushClip(com.g4mesoft.gui.renderer.GSClipRect) -> a
    315:316:com.g4mesoft.gui.renderer.GSClipRect popClip() -> a
    321:323:void pushTransform() -> E
    327:332:void popTransform() -> F
    335:336:void resetTransform() -> G
    340:344:void translate(int,int) -> d
    347:350:void onTransformChanged() -> H
com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D -> core.ao:
    int offsetX -> dq
    int offsetY -> dr
    com.g4mesoft.gui.renderer.GSBasicRenderer2D this$0 -> a
    357:359:void <init>(com.g4mesoft.gui.renderer.GSBasicRenderer2D) -> <init>
    361:364:void <init>(com.g4mesoft.gui.renderer.GSBasicRenderer2D,com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D) -> <init>
    367:368:void reset() -> g
    352:352:int access$000(com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D) -> a
    352:352:int access$100(com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D) -> b
    352:352:void access$200(com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D) -> a
    352:352:int access$002(com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D,int) -> a
    352:352:int access$102(com.g4mesoft.gui.renderer.GSBasicRenderer2D$GSTransform2D,int) -> b
com.g4mesoft.gui.renderer.GSClipAdjuster -> core.ap:
    float[] clipXBuffer -> a
    float[] clipYBuffer -> b
    float clipOffsetX -> f
    float clipOffsetY -> g
    java.util.LinkedList clipRectStack -> b
    25:32:void <init>() -> <init>
    35:128:void clipPreviousShape(net.minecraft.class_287) -> a
    131:152:void interpolateClipped(java.nio.ByteBuffer,net.minecraft.class_293,int,int,float,float) -> a
    155:168:float getVertexElement(java.nio.ByteBuffer,int,net.minecraft.class_296$class_297) -> a
    173:192:void setVertexElement(java.nio.ByteBuffer,int,net.minecraft.class_296$class_297,float) -> a
    195:196:void pushClip(com.g4mesoft.gui.renderer.GSClipRect) -> a
    199:199:com.g4mesoft.gui.renderer.GSClipRect popClip() -> a
    203:205:void setClipOffset(float,float) -> a
    208:208:float getClipOffsetX() -> d
    212:212:float getClipOffsetY() -> e
com.g4mesoft.gui.renderer.GSClipAdjuster$1 -> core.aq:
    int[] $SwitchMap$net$minecraft$client$render$VertexFormatElement$Format -> c
    155:155:void <clinit>() -> <clinit>
com.g4mesoft.gui.renderer.GSClipRect -> core.ar:
    float x0 -> h
    float y0 -> i
    float x1 -> j
    float y1 -> k
    12:13:void <init>(com.g4mesoft.gui.renderer.GSClipRect) -> <init>
    15:21:void <init>(float,float,float,float) -> <init>
    24:24:com.g4mesoft.gui.renderer.GSClipRect offset(float,float) -> a
com.g4mesoft.gui.renderer.GSIRenderer2D -> core.as:
    java.lang.String DEFAULT_ELLIPSIS -> D
    float COLOR_DARKEN_FACTOR -> l
    void beginRendering(int,int,float) -> a
    void endRendering() -> D
    int getMouseX() -> y
    int getMouseY() -> z
    float getPartialTicks() -> m
    21:28:boolean isMouseInside(int,int,int,int) -> a
    void fillRect(int,int,int,int,int) -> a
    void fillRectGradient(int,int,int,int,int,int) -> a
    void drawRect(int,int,int,int,int) -> b
    void drawTexture(com.g4mesoft.gui.renderer.GSTexture,int,int,int,int,int,int) -> a
    void drawTexture(com.g4mesoft.gui.renderer.GSITextureRegion,int,int) -> a
    void drawVLine(int,int,int,int) -> b
    void drawHLine(int,int,int,int) -> c
    void drawDottedVLine(int,int,int,int,int,int) -> b
    void drawDottedHLine(int,int,int,int,int,int) -> c
    int getFontHeight() -> A
    int getLineHeight() -> B
    float getStringWidth(java.lang.String) -> a
    56:56:java.lang.String trimString(java.lang.String,int) -> a
    java.lang.String trimString(java.lang.String,int,java.lang.String) -> a
    java.util.List splitToLines(java.lang.String,int) -> a
    64:65:void drawCenteredString(java.lang.String,int,int,int) -> a
    68:69:void drawCenteredString(java.lang.String,int,int,int,boolean) -> b
    72:73:void drawString(java.lang.String,int,int,int) -> b
    void drawString(java.lang.String,int,int,int,boolean) -> a
    78:87:int darkenColor(int) -> a
    91:109:int brightenColor(int) -> b
    void pushClip(int,int,int,int) -> d
    void pushClip(com.g4mesoft.gui.renderer.GSClipRect) -> a
    com.g4mesoft.gui.renderer.GSClipRect popClip() -> a
    void pushTransform() -> E
    void popTransform() -> F
    void translate(int,int) -> d
com.g4mesoft.gui.renderer.GSITextureRegion -> core.at:
    com.g4mesoft.gui.renderer.GSTexture getTexture() -> a
    int getRegionWidth() -> C
    int getRegionHeight() -> D
    float getU0() -> n
    float getV0() -> o
    float getU1() -> p
    float getV1() -> q
com.g4mesoft.gui.renderer.GSTexture -> core.au:
    net.minecraft.class_2960 identifier -> b
    int width -> n
    int height -> o
    11:15:void <init>(net.minecraft.class_2960,int,int) -> <init>
    18:18:com.g4mesoft.gui.renderer.GSITextureRegion getRegion(int,int,int,int) -> a
    22:22:net.minecraft.class_2960 getIdentifier() -> a
    26:26:int getWidth() -> k
    30:30:int getHeight() -> l
    35:35:com.g4mesoft.gui.renderer.GSTexture getTexture() -> a
    40:40:int getRegionWidth() -> C
    45:45:int getRegionHeight() -> D
    50:50:float getU0() -> n
    55:55:float getV0() -> o
    60:60:float getU1() -> p
    65:65:float getV1() -> q
com.g4mesoft.gui.renderer.GSTextureRegion -> core.av:
    com.g4mesoft.gui.renderer.GSTexture texture -> d
    int rw -> ds
    int rh -> dt
    float u0 -> m
    float v0 -> n
    float u1 -> o
    float v1 -> p
    15:25:void <init>(com.g4mesoft.gui.renderer.GSTexture,int,int,int,int) -> <init>
    29:29:com.g4mesoft.gui.renderer.GSTexture getTexture() -> a
    34:34:int getRegionWidth() -> C
    39:39:int getRegionHeight() -> D
    44:44:float getU0() -> n
    49:49:float getV0() -> o
    54:54:float getU1() -> p
    59:59:float getV1() -> q
com.g4mesoft.gui.scroll.GSIScrollListener -> core.aw:
    6:6:void preScrollChanged(float) -> d
    void scrollChanged(float) -> e
com.g4mesoft.gui.scroll.GSIScrollableElement -> core.ax:
    8:14:int getScrollOffset() -> E
com.g4mesoft.gui.scroll.GSIScrollableViewport -> core.ay:
    int getContentWidth() -> w
    int getContentHeight() -> x
    12:12:int getContentViewWidth() -> F
    16:16:int getContentViewHeight() -> G
    20:20:float getIncrementalScrollX(int) -> a
    24:24:float getIncrementalScrollY(int) -> b
com.g4mesoft.gui.scroll.GSScrollBar -> core.az:
    net.minecraft.class_2960 TEXTURE_IDENTIFIER -> a
    com.g4mesoft.gui.renderer.GSTexture SCROLL_BUTTON_TEXTURE -> e
    int KNOB_AREA_COLOR -> du
    int DISABLED_KNOB_AREA_COLOR -> dv
    int KNOB_COLOR -> dw
    int HOVERED_KNOB_COLOR -> dx
    int DISABLED_KNOB_COLOR -> dy
    float DEFAULT_SCROLL_AMOUNT -> q
    int DEFAULT_SCROLL_BAR_WIDTH -> dz
    int DEFAULT_BUTTON_WIDTH -> dA
    int DEFAULT_BUTTON_HEIGHT -> dB
    int DEFAULT_MINIMUM_NOB_SIZE -> dC
    com.g4mesoft.gui.scroll.GSIScrollableViewport parent -> a
    com.g4mesoft.gui.scroll.GSIScrollListener listener -> a
    com.g4mesoft.gui.scroll.GSScrollBar$GSParentScrollHandler parentScrollHandler -> a
    boolean vertical -> p
    boolean scrollDragActive -> q
    float scrollOffset -> r
    boolean enabled -> j
    53:65:void <init>(com.g4mesoft.gui.scroll.GSIScrollableViewport,com.g4mesoft.gui.scroll.GSIScrollListener) -> <init>
    68:71:void initVerticalLeft(int,int,int) -> e
    74:75:void initVerticalRight(int,int,int) -> f
    78:81:void initHorizontalTop(int,int,int) -> g
    84:85:void initHorizontalBottom(int,int,int) -> h
    89:93:void onBoundsChanged() -> s
    97:100:void onAdded(com.g4mesoft.gui.GSIElement) -> g
    104:107:void onRemoved(com.g4mesoft.gui.GSIElement) -> h
    111:116:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    119:126:void drawScrollButton(com.g4mesoft.gui.renderer.GSIRenderer2D,boolean) -> c
    129:135:void drawScrollButton(com.g4mesoft.gui.renderer.GSIRenderer2D,int,int,int,int,boolean) -> a
    138:138:int getScrollButtonSpriteX(boolean,boolean) -> a
    142:142:int getScrollButtonSpriteY(boolean,boolean) -> b
    146:151:boolean isMouseOverScrollButton(int,int,boolean) -> a
    155:164:void drawKnobArea(com.g4mesoft.gui.renderer.GSIRenderer2D) -> i
    167:177:void drawKnob(com.g4mesoft.gui.renderer.GSIRenderer2D) -> j
    180:180:com.g4mesoft.gui.renderer.GSTexture getScrollButtonTexture() -> b
    184:186:int getKnobAreaColor() -> H
    190:194:int getKnobColor(boolean) -> a
    198:206:int getKnobPos() -> I
    210:216:int getKnobSize() -> J
    220:220:int getKnobAreaSize() -> K
    224:224:int getContentSize() -> L
    228:228:int getContentViewSize() -> M
    232:232:int getButtonWidth() -> N
    236:236:int getButtonHeight() -> O
    240:240:int getMinimumNobSize() -> P
    244:244:int getPreferredScrollBarWidth() -> Q
    248:248:float getDefaultScrollAmount() -> r
    253:267:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    270:275:void onIncrementalScroll(int) -> i
    278:278:float getIncrementalScroll(int) -> c
    283:287:void mouseReleased(com.g4mesoft.gui.event.GSMouseEvent) -> c
    291:302:void mouseDragged(com.g4mesoft.gui.event.GSMouseEvent) -> b
    305:312:void setScrollOffset(float) -> f
    315:315:int getMaxScrollOffset() -> R
    319:319:boolean isVertical() -> u
    323:323:float getScrollOffset() -> s
    327:327:boolean isEnabled() -> o
    331:332:void setEnabled(boolean) -> d
    335:335:boolean isScrollDragActive() -> v
    14:14:boolean access$100(com.g4mesoft.gui.scroll.GSScrollBar) -> a
    14:14:float access$200(com.g4mesoft.gui.scroll.GSScrollBar) -> a
    16:17:void <clinit>() -> <clinit>
com.g4mesoft.gui.scroll.GSScrollBar$1 -> core.aA:
com.g4mesoft.gui.scroll.GSScrollBar$GSParentScrollHandler -> core.aB:
    com.g4mesoft.gui.scroll.GSScrollBar this$0 -> a
    338:338:void <init>(com.g4mesoft.gui.scroll.GSScrollBar) -> <init>
    344:363:void mouseScrolled(com.g4mesoft.gui.event.GSMouseEvent) -> e
    338:338:void <init>(com.g4mesoft.gui.scroll.GSScrollBar,com.g4mesoft.gui.scroll.GSScrollBar$1) -> <init>
com.g4mesoft.gui.scroll.GSScrollablePanel -> core.aC:
    com.g4mesoft.gui.scroll.GSScrollablePanel$GSScrollableContentPanel contentPanel -> a
    com.g4mesoft.gui.scroll.GSScrollBar scrollBar -> b
    12:13:void <init>() -> <init>
    15:24:void <init>(com.g4mesoft.gui.scroll.GSIScrollableElement) -> <init>
    28:35:void onBoundsChanged() -> s
    38:39:void setContent(com.g4mesoft.gui.scroll.GSIScrollableElement) -> a
    42:42:int getScrollOffset() -> E
com.g4mesoft.gui.scroll.GSScrollablePanel$1 -> core.aD:
com.g4mesoft.gui.scroll.GSScrollablePanel$GSScrollableContentPanel -> core.aE:
    com.g4mesoft.gui.scroll.GSIScrollableElement content -> a
    com.g4mesoft.gui.scroll.GSScrollablePanel this$0 -> a
    45:45:void <init>(com.g4mesoft.gui.scroll.GSScrollablePanel) -> <init>
    50:59:void setContent(com.g4mesoft.gui.scroll.GSIScrollableElement) -> a
    63:67:void onBoundsChanged() -> s
    71:74:void preRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> b
    78:80:void postRender(com.g4mesoft.gui.renderer.GSIRenderer2D) -> d
    84:84:int getEventOffsetY() -> n
    89:89:int getContentWidth() -> w
    94:94:int getContentHeight() -> x
    99:99:float getIncrementalScrollX(int) -> a
    104:104:float getIncrementalScrollY(int) -> b
    45:45:void <init>(com.g4mesoft.gui.scroll.GSScrollablePanel,com.g4mesoft.gui.scroll.GSScrollablePanel$1) -> <init>
com.g4mesoft.gui.setting.GSBooleanSettingElementGUI -> core.aF:
    int SETTING_HEIGHT -> dD
    int TEXT_MAX_WIDTH -> dE
    int TOGGLE_WIDTH -> dF
    com.g4mesoft.gui.action.GSToggleSwitchPanel switchWidget -> a
    21:25:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSBooleanSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    28:29:void updateSettingValue() -> I
    33:39:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    43:43:int getPreferredWidth() -> v
    48:48:int getPreferredHeight() -> u
    53:59:void onBoundsChanged() -> s
    63:67:void onSettingChanged() -> J
    71:71:java.lang.String getFormattedDefault() -> i
    12:12:void <clinit>() -> <clinit>
com.g4mesoft.gui.setting.GSFloatSettingElementGUI -> core.aG:
    float MAX_DEF_INTERVAL_FOR_SLIDER -> s
    java.text.DecimalFormat FORMATTER -> a
    19:20:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSFloatSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    24:25:void setValueFromSlider(float) -> g
    30:35:boolean setValueFromTextField(java.lang.String) -> c
    40:40:boolean shouldUseSlider() -> w
    45:51:void updateFieldValue() -> K
    55:55:java.lang.String getFormattedDefault() -> i
    16:16:void <clinit>() -> <clinit>
com.g4mesoft.gui.setting.GSIntegerSettingElementGUI -> core.aH:
    int MAX_DEF_INTERVAL_FOR_SLIDER -> dG
    15:16:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSIntegerSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    20:21:void setValueFromSlider(float) -> g
    26:31:boolean setValueFromTextField(java.lang.String) -> c
    36:36:boolean shouldUseSlider() -> w
    41:47:void updateFieldValue() -> K
    50:58:java.lang.String getFormattedValue(int) -> a
    63:63:java.lang.String getFormattedDefault() -> i
com.g4mesoft.gui.setting.GSNumberSettingElementGUI -> core.aI:
    int SETTING_HEIGHT -> dD
    int TEXT_FIELD_HEIGHT -> dH
    int TEXT_FIELD_MAX_WIDTH -> dI
    java.lang.String SET_VALUE_TEXT -> E
    int TEXT_MAX_WIDTH -> dE
    com.g4mesoft.gui.action.GSSliderPanel slider -> a
    com.g4mesoft.gui.text.GSTextField textField -> a
    com.g4mesoft.gui.action.GSButtonPanel valueSetButton -> c
    com.g4mesoft.gui.action.GSButtonPanel resetButton -> b
    java.lang.String prevTextFieldValue -> F
    28:29:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    33:39:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    43:43:int getPreferredWidth() -> v
    48:54:int getPreferredHeight() -> u
    59:99:void onBoundsChanged() -> s
    102:109:void updateSliderBounds() -> L
    112:122:void updateTextFieldBounds() -> M
    125:142:void onValueChanged() -> N
    void setValueFromSlider(float) -> g
    boolean setValueFromTextField(java.lang.String) -> c
    boolean shouldUseSlider() -> w
    void updateFieldValue() -> K
    153:155:void setSliderValue(float) -> h
    158:160:void setSliderText(java.lang.String) -> g
    163:165:void setTextFieldValue(java.lang.String) -> h
    169:169:int getSettingHeight() -> S
    174:184:void onSettingChanged() -> J
    188:188:boolean isSliderActive() -> x
com.g4mesoft.gui.setting.GSSettingElementGUI -> core.aJ:
    int HOVERED_BACKGROUND -> dg
    int CONTENT_PADDING -> dJ
    int CONTENT_MARGIN -> dK
    int RESET_BUTTON_WIDTH -> de
    int RESET_BUTTON_HEIGHT -> dL
    java.lang.String RESET_TEXT -> y
    int ENABLED_TEXT_COLOR -> dM
    int DISABLED_TEXT_COLOR -> B
    com.g4mesoft.gui.setting.GSSettingsGUI settingsGUI -> a
    com.g4mesoft.setting.GSSetting setting -> a
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.lang.String nameTranslationKey -> A
    com.g4mesoft.gui.action.GSButtonPanel resetButton -> b
    31:40:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    44:48:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    51:51:int getTextColor() -> T
    56:63:void onBoundsChanged() -> s
    66:68:void resetSetting() -> O
    71:72:void onSettingChanged() -> J
    75:76:void updateResetActive() -> P
    java.lang.String getFormattedDefault() -> i
    81:81:int getSettingHeight() -> S
    85:85:int getPreferredWidth() -> v
    89:89:int getPreferredHeight() -> u
    93:93:java.lang.String getSettingTranslationName() -> j
com.g4mesoft.gui.setting.GSSettingsGUI -> core.aK:
    int SETTING_CATEGORY_MARGIN -> dN
    int CATEGORY_TITLE_MARGIN_BOTTOM -> dO
    int CATEGORY_TITLE_COLOR -> dk
    int DESC_BACKGROUND_COLOR -> dP
    int DESC_LINE_SPACING -> dQ
    int DESC_LINE_MARGIN -> dR
    int DESC_TEXT_COLOR -> dS
    float DESC_ANIMATION_TIME -> t
    java.util.Map settingCategories -> e
    int settingsWidth -> dT
    int contentHeight -> dl
    boolean layoutChanged -> r
    com.g4mesoft.gui.setting.GSSettingElementGUI hoveredElement -> a
    java.util.List descLines -> k
    int startDescHeight -> dU
    int targetDescHeight -> dV
    long descAnimStart -> b
    53:63:void <init>(com.g4mesoft.setting.GSSettingManager) -> <init>
    66:77:void addSettingElement(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> d
    81:84:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    88:89:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    93:102:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    105:120:void layoutSettingElements() -> Q
    124:128:void update() -> o
    132:175:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    178:207:void renderHoveredDesc(com.g4mesoft.gui.renderer.GSIRenderer2D,com.g4mesoft.gui.setting.GSSettingElementGUI) -> a
    211:213:void onBoundsChanged() -> s
    217:217:int getContentWidth() -> w
    222:222:int getContentHeight() -> x
com.g4mesoft.gui.setting.GSSettingsGUI$GSSettingCategoryElement -> core.aL:
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.lang.String title -> u
    java.util.List settings -> l
    int x -> l
    int y -> m
    int width -> n
    int height -> o
    com.g4mesoft.gui.setting.GSSettingsGUI this$0 -> b
    237:243:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSettingCategory) -> <init>
    246:251:int getMinimumWidth() -> U
    255:267:void addSetting(com.g4mesoft.setting.GSSetting) -> a
    270:278:void removeSetting(com.g4mesoft.setting.GSSetting) -> b
    281:287:void onSettingChanged(com.g4mesoft.setting.GSSetting) -> c
    290:307:int layoutElements(int,int,int) -> b
    311:319:com.g4mesoft.gui.setting.GSSettingElementGUI getHoveredElement(int,int) -> a
    323:323:boolean isHovered(int,int) -> b
    328:330:void tick() -> tick
    333:335:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    338:338:boolean isEmpty() -> y
com.g4mesoft.gui.text.GSAbstractTextModel -> core.aM:
    java.util.List modelListeners -> m
    30:32:void <init>() -> <init>
    36:39:void addTextModelListener(com.g4mesoft.gui.text.GSITextModelListener) -> a
    43:44:void removeTextModelListener(com.g4mesoft.gui.text.GSITextModelListener) -> b
    48:49:void appendText(java.lang.String) -> i
    60:62:void dispatchTextInsertedEvent(int,int) -> e
    73:75:void dispatchTextRemovedEvent(int,int) -> f
com.g4mesoft.gui.text.GSBasicTextCaret -> core.aN:
    int DEFAULT_BLINK_RATE -> dW
    int DEFAULT_CARET_WIDTH -> dX
    int DEFAULT_CARET_INSETS -> dY
    int DEFAULT_CARET_COLOR -> dZ
    int NO_MODIFIERS -> I
    int SELECTION_MODIFIER -> ea
    int WORD_NAVIGATION_MODIFIER -> eb
    com.g4mesoft.gui.text.GSTextField textField -> a
    com.g4mesoft.gui.text.GSITextModel textModel -> a
    java.util.List caretListeners -> n
    int dot -> ec
    int mark -> ed
    int caretInsets -> ee
    int caretWidth -> ef
    long lastFrame -> c
    int blinkRate -> eg
    int blinkTimer -> eh
    int caretColor -> ei
    67:79:void <init>() -> <init>
    83:96:void install(com.g4mesoft.gui.text.GSTextField) -> a
    99:105:void installTextModel(com.g4mesoft.gui.text.GSITextModel) -> a
    109:119:void uninstall(com.g4mesoft.gui.text.GSTextField) -> b
    122:126:void uninstallTextModel(com.g4mesoft.gui.text.GSITextModel) -> b
    130:132:void modelChanged() -> R
    136:140:void addTextCaretListener(com.g4mesoft.gui.text.GSITextCaretListener) -> a
    144:148:void removeTextCaretListener(com.g4mesoft.gui.text.GSITextCaretListener) -> b
    151:153:void dispatchCaretLocationChangedEvent() -> S
    168:179:void navigateStep(boolean,int) -> a
    184:207:void navigateToNextWord(boolean,int) -> b
    210:253:com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType getWordCharacterTypeAt(int) -> a
    265:270:void navigateToLocation(int,int) -> g
    280:300:void navigateToPoint(int,int,int) -> i
    304:304:void update() -> o
    308:318:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    327:339:void paintCaret(com.g4mesoft.gui.renderer.GSIRenderer2D) -> k
    351:358:int getBoundedLocation(int) -> c
    363:363:int getCaretLocation() -> V
    368:377:void setCaretLocation(int) -> j
    381:381:int getCaretDot() -> W
    386:395:void setCaretDot(int) -> k
    399:399:int getCaretMark() -> X
    404:411:void setCaretMark(int) -> l
    420:432:void setSelection(int,int) -> h
    436:436:boolean hasCaretSelection() -> z
    441:450:void textInserted(com.g4mesoft.gui.text.GSITextModel,int,int) -> a
    454:473:void textRemoved(com.g4mesoft.gui.text.GSITextModel,int,int) -> b
    477:477:int getBlinkRate() -> Y
    491:497:void setBlinkRate(int) -> m
    503:503:int getCaretWidth() -> Z
    515:519:void setCaretWidth(int) -> n
    525:525:int getCaretInsets() -> aa
    538:542:void setCaretInsets(int) -> o
    545:545:int getCaretColor() -> ab
    549:550:void setCaretColor(int) -> p
    554:558:void mousePressed(com.g4mesoft.gui.event.GSMouseEvent) -> a
    562:567:void mouseDragged(com.g4mesoft.gui.event.GSMouseEvent) -> b
    571:596:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    599:607:int getModifierFlags(int) -> d
com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType -> core.aO:
    com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType LETTER_OR_DIGIT -> a
    com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType SYMBOL -> b
    com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType OTHER -> c
    com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType[] $VALUES -> a
    610:610:com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType[] values() -> values
    610:610:com.g4mesoft.gui.text.GSBasicTextCaret$GSWordCharacterType valueOf(java.lang.String) -> valueOf
    610:610:void <init>(java.lang.String,int) -> <init>
    610:612:void <clinit>() -> <clinit>
com.g4mesoft.gui.text.GSIModelChangeListener -> core.aP:
    void modelChanged() -> R
com.g4mesoft.gui.text.GSITextCaret -> core.aQ:
    void install(com.g4mesoft.gui.text.GSTextField) -> a
    void uninstall(com.g4mesoft.gui.text.GSTextField) -> b
    void addTextCaretListener(com.g4mesoft.gui.text.GSITextCaretListener) -> a
    void removeTextCaretListener(com.g4mesoft.gui.text.GSITextCaretListener) -> b
    void update() -> o
    void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    int getCaretLocation() -> V
    void setCaretLocation(int) -> j
    int getCaretDot() -> W
    void setCaretDot(int) -> k
    int getCaretMark() -> X
    void setCaretMark(int) -> l
    boolean hasCaretSelection() -> z
    int getBlinkRate() -> Y
    void setBlinkRate(int) -> m
com.g4mesoft.gui.text.GSITextCaretListener -> core.aR:
    void caretLocationChanged(int,int) -> i
com.g4mesoft.gui.text.GSITextModel -> core.aS:
    void addTextModelListener(com.g4mesoft.gui.text.GSITextModelListener) -> a
    void removeTextModelListener(com.g4mesoft.gui.text.GSITextModelListener) -> b
    int getLength() -> ac
    void appendText(java.lang.String) -> i
    void insertText(int,java.lang.String) -> a
    void insertChars(int,int,char[],int) -> a
    void insertChar(int,char) -> a
    void removeText(int,int) -> j
    java.lang.String getText(int,int) -> a
    void getChars(int,int,char[],int) -> b
    char getChar(int) -> a
com.g4mesoft.gui.text.GSITextModelListener -> core.aT:
    void textInserted(com.g4mesoft.gui.text.GSITextModel,int,int) -> a
    void textRemoved(com.g4mesoft.gui.text.GSITextModel,int,int) -> b
com.g4mesoft.gui.text.GSSingleLineTextModel -> core.aU:
    char LINE_SEPARATOR -> b
    char PARAGRAPH_SEPARATOR -> c
    char LINE_FEED -> d
    char CARRIAGE_RETURN -> e
    char VERTICAL_TAB -> f
    char FORM_FEED -> g
    int DEFAULT_INITIAL_CAPACITY -> ej
    char[] buffer -> a
    int length -> ek
    java.lang.String cacheText -> G
    59:60:void <init>() -> <init>
    62:68:void <init>(int) -> <init>
    77:92:void ensureCapacity(int) -> q
    105:105:int getCapacity() -> ad
    110:110:int getLength() -> ac
    124:133:boolean shouldDiscardCharacter(char) -> a
    138:173:void insertText(int,java.lang.String) -> a
    177:211:void insertChars(int,int,char[],int) -> a
    215:233:void insertChar(int,char) -> a
    237:256:void removeText(int,int) -> j
    260:276:java.lang.String getText(int,int) -> a
    281:289:void getChars(int,int,char[],int) -> b
    293:296:char getChar(int) -> a
com.g4mesoft.gui.text.GSTextAlignment -> core.aV:
    com.g4mesoft.gui.text.GSTextAlignment CENTER -> a
    com.g4mesoft.gui.text.GSTextAlignment LEFT -> b
    com.g4mesoft.gui.text.GSTextAlignment RIGHT -> c
    com.g4mesoft.gui.text.GSTextAlignment[] $VALUES -> a
    6:6:com.g4mesoft.gui.text.GSTextAlignment[] values() -> values
    6:6:com.g4mesoft.gui.text.GSTextAlignment valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:10:void <clinit>() -> <clinit>
com.g4mesoft.gui.text.GSTextField -> core.aW:
    int DEFAULT_BACKGROUND_COLOR -> el
    int DEFAULT_EDITABLE_TEXT_COLOR -> em
    int DEFAULT_UNEDITABLE_TEXT_COLOR -> en
    int DEFAULT_SELECTION_TEXT_COLOR -> eo
    int DEFAULT_SELECTION_BACKGROUND_COLOR -> ep
    int DEFAULT_BORDER_WIDTH -> eq
    int DEFAULT_BORDER_COLOR -> er
    int DEFAULT_VERTICAL_MARGIN -> es
    int DEFAULT_HORIZONTAL_MARGIN -> et
    int VERTICAL_PADDING -> eu
    int PRINTABLE_CHARACTERS_START -> ev
    int BACKSPACE_CONTROL_CHARACTER -> Q
    int DELETE_CONTROL_CHARACTER -> V
    com.g4mesoft.gui.text.GSITextModel textModel -> a
    java.util.List modelChangeListeners -> o
    int backgroundColor -> ew
    int editableTextColor -> ex
    int uneditableTextColor -> ey
    com.g4mesoft.gui.text.GSTextAlignment textAlignment -> d
    boolean editable -> s
    com.g4mesoft.gui.text.GSITextCaret caret -> a
    int selectionTextColor -> ez
    int selectionBackgroundColor -> eA
    int borderWidth -> eB
    int borderColor -> eC
    int verticalMargin -> eD
    int horizontalMargin -> eE
    java.lang.String clippedText -> H
    int clippedModelStart -> eF
    int clippedModelEnd -> eG
    int clippedViewOffset -> eH
    boolean clippedModelInvalid -> t
    int oldCaretPointX -> eI
    70:71:void <init>() -> <init>
    73:107:void <init>(java.lang.String) -> <init>
    110:116:void setPreferredBounds(int,int) -> b
    119:125:void setPreferredBounds(int,int,int) -> a
    129:132:void onBoundsChanged() -> s
    136:136:boolean isEditingText() -> n
    140:152:float expandClippedModelLeft(float) -> b
    156:168:float expandClippedModelRight(float) -> c
    172:226:void reconstructClippedModel() -> T
    229:229:int getCaretLocation() -> V
    233:233:int getCaretSelectionStart() -> ae
    237:237:int getCaretSelectionEnd() -> af
    242:244:void update() -> o
    248:282:void render(com.g4mesoft.gui.renderer.GSIRenderer2D) -> c
    285:297:void drawBorderAndBackground(com.g4mesoft.gui.renderer.GSIRenderer2D) -> l
    300:324:void drawVisibleTextSegment(com.g4mesoft.gui.renderer.GSIRenderer2D,int,int,int) -> a
    327:346:void drawCaretSelection(com.g4mesoft.gui.renderer.GSIRenderer2D,int,int) -> a
    350:376:java.awt.Rectangle modelToView(int) -> a
    381:381:com.g4mesoft.gui.GSCursorType getCursor() -> a
    385:408:int viewToModel(int,int) -> a
    413:429:void caretLocationChanged(int,int) -> i
    432:445:boolean isLocationInView(int) -> b
    450:451:void textInserted(com.g4mesoft.gui.text.GSITextModel,int,int) -> a
    455:456:void textRemoved(com.g4mesoft.gui.text.GSITextModel,int,int) -> b
    460:472:void keyPressed(com.g4mesoft.gui.event.GSKeyEvent) -> a
    475:484:void copyToClipboard() -> U
    487:489:void cutToClipboard() -> V
    492:500:void pasteFromClipboard() -> W
    504:508:void keyTyped(com.g4mesoft.gui.event.GSKeyEvent) -> c
    511:521:void handleTypedCodePoint(int) -> r
    524:527:boolean isTypeableCharacter(char) -> b
    532:543:void removeCaretSelection() -> X
    546:565:void insertTypedChar(int,char) -> b
    568:572:void moveCaretPointX(java.lang.String,int) -> a
    575:575:boolean isControlCharacter(char) -> c
    579:580:void addModelChangeListener(com.g4mesoft.gui.text.GSIModelChangeListener) -> a
    583:584:void removeModelChangeListener(com.g4mesoft.gui.text.GSIModelChangeListener) -> b
    587:595:void setTextModel(com.g4mesoft.gui.text.GSITextModel) -> c
    598:599:void invokeModelChangeEvent() -> Y
    602:602:com.g4mesoft.gui.text.GSITextModel getTextModel() -> a
    606:610:void setText(java.lang.String) -> j
    613:617:void appendText(java.lang.String) -> i
    620:620:java.lang.String getText() -> k
    624:624:int getBackgroundColor() -> ag
    628:629:void setBackgroundColor(int) -> s
    632:632:int getEditableTextColor() -> ah
    636:637:void setEditableTextColor(int) -> t
    640:640:int getUneditableTextColor() -> ai
    644:645:void setUneditableTextColor(int) -> u
    648:648:com.g4mesoft.gui.text.GSTextAlignment getTextAlignment() -> a
    652:656:void setTextAlignment(com.g4mesoft.gui.text.GSTextAlignment) -> a
    659:660:void setEditable(boolean) -> g
    663:663:boolean isEditable() -> A
    667:677:void setCaret(com.g4mesoft.gui.text.GSITextCaret) -> a
    680:680:com.g4mesoft.gui.text.GSITextCaret getCaret() -> a
    684:685:void setSelectionTextColor(int) -> v
    688:688:int getSelectionTextColor() -> aj
    692:693:void setSelectionBackgroundColor(int) -> w
    696:696:int getSelectionBackgroundColor() -> ak
    700:700:int getBorderWidth() -> al
    704:708:void setBorderWidth(int) -> x
    711:711:int getBorderColor() -> am
    715:716:void setBorderColor(int) -> y
    719:719:int getVerticalMargin() -> an
    723:727:void setVerticalMargin(int) -> z
    730:730:int getHorizontalMargin() -> ao
    734:738:void setHorizontalMargin(int) -> A
com.g4mesoft.gui.text.GSTextField$1 -> core.aX:
    int[] $SwitchMap$com$g4mesoft$gui$text$GSTextAlignment -> d
    207:207:void <clinit>() -> <clinit>
com.g4mesoft.gui.text.GSTextModelIndexOutOfBoundsException -> core.aY:
    long serialVersionUID -> d
    7:8:void <init>() -> <init>
    11:12:void <init>(java.lang.String) -> <init>
    15:16:void <init>(int) -> <init>
com.g4mesoft.hotkey.GSEKeyEventType -> core.aZ:
    com.g4mesoft.hotkey.GSEKeyEventType PRESS -> a
    com.g4mesoft.hotkey.GSEKeyEventType RELEASE -> b
    com.g4mesoft.hotkey.GSEKeyEventType[] $VALUES -> a
    3:3:com.g4mesoft.hotkey.GSEKeyEventType[] values() -> values
    3:3:com.g4mesoft.hotkey.GSEKeyEventType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.g4mesoft.hotkey.GSIKeyBindingListener -> core.ba:
    void onKeyStateChanged(com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> onKeyStateChanged
com.g4mesoft.hotkey.GSIKeyBindingRegisterListener -> core.bb:
    void onKeyRegistered(com.g4mesoft.hotkey.GSKeyBinding) -> a
com.g4mesoft.hotkey.GSKeyBinding -> core.bc:
    com.g4mesoft.hotkey.GSKeyManager manager -> b
    java.lang.String name -> I
    java.lang.String category -> J
    net.minecraft.class_3675$class_306 defaultKeyCode -> a
    boolean allowDisabled -> u
    net.minecraft.class_3675$class_306 keyCode -> b
    boolean keyState -> v
    boolean wasPressed -> w
    boolean pressed -> x
    int repeatCount -> eJ
    com.g4mesoft.hotkey.GSIKeyBindingListener listener -> a
    26:36:void <init>(com.g4mesoft.hotkey.GSKeyManager,java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,boolean) -> <init>
    39:42:void setKeyListener(com.g4mesoft.hotkey.GSIKeyBindingListener) -> a
    45:47:void reset() -> g
    50:58:void onKeyPressed() -> Z
    61:62:void onKeyReleased() -> aa
    65:78:void onStateChanged(boolean,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    81:82:void onKeyRepeated() -> ab
    85:89:void update() -> o
    92:107:java.lang.String getLocalizedName() -> l
    111:111:boolean isPressed() -> B
    115:115:boolean wasPressed() -> C
    119:119:boolean isClicking() -> D
    123:123:boolean isReleaing() -> E
    127:127:int getRepeatCount() -> ap
    131:131:java.lang.String getName() -> b
    135:135:java.lang.String getCategory() -> m
    139:139:net.minecraft.class_3675$class_306 getKeyCode() -> a
    143:151:void setKeyCode(net.minecraft.class_3675$class_306) -> a
    154:154:net.minecraft.class_3675$class_306 getDefaultKeyCode() -> b
    74:74:void lambda$onStateChanged$0(com.g4mesoft.hotkey.GSIKeyBindingListener,com.g4mesoft.hotkey.GSEKeyEventType) -> a
com.g4mesoft.hotkey.GSKeyBinding$1 -> core.bd:
    int[] $SwitchMap$net$minecraft$client$util$InputUtil$Type -> b
    94:94:void <clinit>() -> <clinit>
com.g4mesoft.hotkey.GSKeyManager -> core.be:
    java.util.Map keySettings -> f
    java.util.List keyBindings -> p
    java.util.Map codeToKeys -> g
    com.g4mesoft.hotkey.GSIKeyBindingRegisterListener registerListener -> a
    34:39:void <init>() -> <init>
    42:60:void loadKeys(java.io.File) -> a
    64:81:void saveKeys(java.io.File) -> b
    84:89:net.minecraft.class_3675$class_306 getKeySetting(java.lang.String,java.lang.String) -> a
    93:101:void setKeySetting(java.lang.String,java.lang.String,net.minecraft.class_3675$class_306) -> a
    104:106:void update() -> o
    109:109:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    113:113:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType,boolean) -> a
    117:117:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    121:124:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType,boolean) -> a
    131:131:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.BiConsumer) -> a
    135:135:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.BiConsumer,boolean) -> a
    139:139:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.BiConsumer) -> a
    143:146:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.BiConsumer,boolean) -> a
    150:150:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int) -> a
    154:154:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,boolean) -> a
    158:158:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int) -> a
    162:162:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,boolean) -> a
    166:166:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,com.g4mesoft.hotkey.GSIKeyBindingListener) -> a
    170:170:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,int,com.g4mesoft.hotkey.GSIKeyBindingListener,boolean) -> a
    174:174:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,com.g4mesoft.hotkey.GSIKeyBindingListener) -> a
    178:188:com.g4mesoft.hotkey.GSKeyBinding registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,com.g4mesoft.hotkey.GSIKeyBindingListener,boolean) -> a
    192:201:void addKeyBinding(com.g4mesoft.hotkey.GSKeyBinding) -> c
    204:205:void setKeyRegisterListener(com.g4mesoft.hotkey.GSIKeyBindingRegisterListener) -> a
    208:215:void handleKeyEvent(net.minecraft.class_3675$class_306,java.util.function.Consumer) -> a
    218:230:void onKeyCodeChanged(com.g4mesoft.hotkey.GSKeyBinding,net.minecraft.class_3675$class_306,net.minecraft.class_3675$class_306) -> a
    233:241:void addKeyCodeMapping(com.g4mesoft.hotkey.GSKeyBinding) -> d
    244:245:void onKeyPressed(int,int,int) -> j
    248:249:void onKeyReleased(int,int,int) -> k
    252:253:void onKeyRepeat(int,int,int) -> l
    256:257:void onMousePressed(int,int) -> k
    260:261:void onMouseReleased(int,int) -> l
    264:264:java.util.List getKeyBindings() -> g
    146:146:void lambda$registerKey$1(java.util.function.BiConsumer,java.lang.Object,com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    125:127:void lambda$registerKey$0(com.g4mesoft.hotkey.GSEKeyEventType,java.util.function.Consumer,java.lang.Object,com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> a
com.g4mesoft.mixin.client.GSBufferBuilderMixin -> com.g4mesoft.mixin.client.GSBufferBuilderMixin:
    java.nio.ByteBuffer field_1555 -> field_1555
    int field_1567 -> field_1567
    net.minecraft.class_293 field_1565 -> field_1565
    boolean field_1556 -> field_1556
    int field_20776 -> field_20776
    int field_1554 -> field_1554
    int field_20884 -> field_20884
    float offsetX -> offsetX
    float offsetY -> offsetY
    float offsetZ -> offsetZ
    boolean offsetVertices -> offsetVertices
    boolean positionFormat -> positionFormat
    com.g4mesoft.gui.renderer.GSClipAdjuster adjuster -> adjuster
    22:41:void <init>() -> <init>
    45:46:void begin(int,net.minecraft.class_293,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    50:52:void onNextHead(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    56:58:void onNextReturn(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    61:62:boolean hasPosition(net.minecraft.class_293) -> a
    66:70:void offsetVertexPosition(int) -> B
    74:75:void pushClip(float,float,float,float) -> a
    79:83:void pushClip(com.g4mesoft.gui.renderer.GSClipRect) -> a
    87:87:com.g4mesoft.gui.renderer.GSClipRect popClip() -> a
    92:99:void setOffset(float,float,float) -> a
    103:103:float getOffsetX() -> a
    108:108:float getOffsetY() -> b
    113:113:float getOffsetZ() -> c
    118:118:float getClipOffsetX() -> d
    123:123:float getClipOffsetY() -> e
    128:129:void setClipOffset(float,float) -> a
    133:133:java.nio.ByteBuffer getByteBuffer() -> a
    138:138:int getDrawMode() -> b
    143:143:net.minecraft.class_293 getVertexFormat() -> a
    148:148:int getBuildStart() -> c
    153:153:int getVertexCount() -> d
    158:159:void setVertexCount(int) -> a
    163:164:void setElementOffset(int) -> b
com.g4mesoft.mixin.client.GSClientPlayNetworkHandlerMixin -> com.g4mesoft.mixin.client.GSClientPlayNetworkHandlerMixin:
    int WORLD_TIME_UPDATE_INTERVAL -> WORLD_TIME_UPDATE_INTERVAL
    net.minecraft.class_310 field_3690 -> field_3690
    net.minecraft.class_638 field_3699 -> field_3699
    35:35:void <init>() -> <init>
    44:45:void onInit(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> c
    49:61:void onCustomPayload(net.minecraft.class_2658,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    66:72:void onWorldTimeSync(net.minecraft.class_2761,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    79:112:boolean replaceChunkDataBlockEntityLoop(java.util.Iterator) -> a
    118:148:void onOnBlockEntityUpdate(net.minecraft.class_2622,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.client.GSInGameHudMixin -> com.g4mesoft.mixin.client.GSInGameHudMixin:
    int TPS_LABEL_MAGIN -> TPS_LABEL_MAGIN
    float RED_START -> RED_START
    float RED_END -> RED_END
    float GREEN_START -> GREEN_START
    float GREEN_END -> GREEN_END
    float BLUE_START -> BLUE_START
    float BLUE_END -> BLUE_END
    int LABEL_COLOR_MIN -> LABEL_COLOR_MIN
    int LABEL_COLOR_MAX -> LABEL_COLOR_MAX
    int LABEL_COLOR_DIFF -> LABEL_COLOR_DIFF
    int LABEL_BACKGROUND_COLOR -> LABEL_BACKGROUND_COLOR
    int LABEL_TARGET_COLOR -> LABEL_TARGET_COLOR
    java.text.DecimalFormat LOW_PRECISION_TPS_FORMAT -> LOW_PRECISION_TPS_FORMAT
    net.minecraft.class_310 field_2035 -> field_2035
    26:26:void <init>() -> <init>
    net.minecraft.class_327 method_1756() -> method_1756
    53:78:void render(float,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    81:91:int getTpsLabelColor(float,float) -> a
    44:44:void <clinit>() -> <clinit>
com.g4mesoft.mixin.client.GSIntegratedServerMixin -> com.g4mesoft.mixin.client.GSIntegratedServerMixin:
    boolean field_5524 -> field_5524
    16:16:void <init>() -> <init>
    22:28:void onTick(java.util.function.BooleanSupplier,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.client.GSKeyboardMixin -> com.g4mesoft.mixin.client.GSKeyboardMixin:
    net.minecraft.class_310 field_1678 -> field_1678
    boolean prevEventRepeating -> prevEventRepeating
    18:18:void <init>() -> <init>
    26:36:void onKeyEvent(long,int,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    41:49:void onKeyPressRepeat(long,int,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    53:53:boolean isPreviousEventRepeating() -> a
com.g4mesoft.mixin.client.GSMinecraftClientMixin -> com.g4mesoft.mixin.client.GSMinecraftClientMixin:
    net.minecraft.class_317 field_1728 -> field_1728
    net.minecraft.class_1144 field_1727 -> field_1727
    net.minecraft.class_746 field_1724 -> field_1724
    21:21:void <init>() -> <init>
    boolean method_1493() -> method_1493
    32:34:void onInit(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> c
    40:42:void onDisconnect(net.minecraft.class_437,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    46:47:void onClientClose(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> d
    51:54:void onTick(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> e
com.g4mesoft.mixin.client.GSMouseMixin -> com.g4mesoft.mixin.client.GSMouseMixin:
    net.minecraft.class_310 field_1779 -> field_1779
    int prevEventModifiers -> prevEventModifiers
    float prevEventScrollX -> prevEventScrollX
    18:18:void <init>() -> <init>
    27:35:void onMouseEvent(long,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    40:42:void onMouseEventHandled(long,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    46:50:void onOnMouseScroll(long,double,double,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    54:54:int getPreviousEventModifiers() -> e
    59:59:double getPreviousEventScrollX() -> a
com.g4mesoft.mixin.client.GSPistonBlockEntityMixin -> com.g4mesoft.mixin.client.GSPistonBlockEntityMixin:
    float PISTON_STEPS -> PISTON_STEPS
    float INCREMENTER -> INCREMENTER
    float actualLastProgress -> actualLastProgress
    net.minecraft.class_2350 field_12201 -> field_12201
    float field_12207 -> field_12207
    float field_12206 -> field_12206
    29:30:void <init>(net.minecraft.class_2591) -> <init>
    45:65:float getSmoothProgress(float) -> a
    70:70:float getSmoothRenderOffsetX(net.minecraft.class_2669,float) -> a
    75:75:float getSmoothRenderOffsetY(net.minecraft.class_2669,float) -> b
    80:80:float getSmoothRenderOffsetZ(net.minecraft.class_2669,float) -> c
    85:86:void onTagRead(net.minecraft.class_2487,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    90:91:void onTickProgressChanged(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> f
    95:96:void onFinishProgressChanged(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> g
    102:107:double method_11006() -> method_11006
com.g4mesoft.mixin.client.GSPistonBlockEntityRendererMixin -> com.g4mesoft.mixin.client.GSPistonBlockEntityRendererMixin:
    15:15:void <init>() -> <init>
    19:19:float getPistonProgress(net.minecraft.class_2669,float) -> d
    24:24:float fixShortArm(float) -> d
    31:31:float fixPistonBlink(float) -> e
com.g4mesoft.mixin.client.GSRenderTickCounterMixin -> com.g4mesoft.mixin.client.GSRenderTickCounterMixin:
    float field_1968 -> field_1968
    float field_1969 -> field_1969
    long field_1971 -> field_1971
    20:20:void <init>() -> <init>
    28:29:void onInit(float,long,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    34:40:void onModifyTickrate(long,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    44:45:void onBeginRenderTick(long,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    49:49:float getTickTime() -> f
com.g4mesoft.mixin.client.GSSoundSystemMixin -> com.g4mesoft.mixin.client.GSSoundSystemMixin:
    java.util.Map field_18950 -> field_18950
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> tpsModule
    29:29:void <init>() -> <init>
    37:42:void onInit(net.minecraft.class_1144,net.minecraft.class_315,net.minecraft.class_3300,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    50:54:float method_4849(net.minecraft.class_1113) -> method_4849
    58:62:void updatePitch() -> ac
    66:67:void tpsChanged(float,float) -> c
    71:73:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    60:60:void lambda$updatePitch$0(float,net.minecraft.class_4224) -> a
com.g4mesoft.mixin.server.GSClientConnectionMixin -> com.g4mesoft.mixin.server.GSClientConnectionMixin:
    14:14:void <init>() -> <init>
    20:20:void onExceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.server.GSCommandManagerMixin -> com.g4mesoft.mixin.server.GSCommandManagerMixin:
    com.mojang.brigadier.CommandDispatcher field_9832 -> field_9832
    17:17:void <init>() -> <init>
    23:24:void registerCommands(boolean,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.server.GSCustomPayloadC2SPacketMixin -> com.g4mesoft.mixin.server.GSCustomPayloadC2SPacketMixin:
    net.minecraft.class_2960 field_12830 -> field_12830
    net.minecraft.class_2540 field_12832 -> field_12832
    14:14:void <init>() -> <init>
    21:21:net.minecraft.class_2960 getChannelGS() -> b
    26:26:net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.mixin.server.GSCustomPayloadS2CPacketMixin -> com.g4mesoft.mixin.server.GSCustomPayloadS2CPacketMixin:
    net.minecraft.class_2960 field_12165 -> field_12165
    net.minecraft.class_2540 field_12162 -> field_12162
    13:13:void <init>() -> <init>
    20:20:net.minecraft.class_2960 getChannelGS() -> b
    25:25:net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.mixin.server.GSMinecraftServerMixin -> com.g4mesoft.mixin.server.GSMinecraftServerMixin:
    float msAccum -> msAccum
    float msPerTick -> msPerTick
    org.apache.logging.log4j.Logger field_4546 -> field_4546
    boolean field_4544 -> field_4544
    long field_4571 -> field_4571
    long field_4557 -> field_4557
    boolean field_4597 -> field_4597
    net.minecraft.class_3689 field_16258 -> field_16258
    boolean field_4547 -> field_4547
    boolean field_19249 -> field_19249
    long field_19248 -> field_19248
    26:29:void <init>() -> <init>
    void method_3748(java.util.function.BooleanSupplier) -> method_3748
    boolean method_3866() -> method_3866
    void method_16208() -> method_16208
    49:67:void tpsChanged(float,float) -> c
    75:78:void onInitialized(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> h
    87:119:void onModifiedRunLoop(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> i
    123:126:void onTick(java.util.function.BooleanSupplier,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    130:131:void onShutdown(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> j
com.g4mesoft.mixin.server.GSPistonBlockEntityMixin -> com.g4mesoft.mixin.server.GSPistonBlockEntityMixin:
    18:19:void <init>(net.minecraft.class_2591) -> <init>
    24:26:net.minecraft.class_2622 method_16886() -> method_16886
    32:32:net.minecraft.class_2487 method_16887() -> method_16887
com.g4mesoft.mixin.server.GSPistonBlockMixin -> com.g4mesoft.mixin.server.GSPistonBlockMixin:
    14:14:void <init>() -> <init>
    19:22:int modifySetAirBlockFlags(int) -> e
    30:33:int modifySetMovingBlockFlags(int) -> f
com.g4mesoft.mixin.server.GSPlayerManagerMixin -> com.g4mesoft.mixin.server.GSPlayerManagerMixin:
    19:19:void <init>() -> <init>
    net.minecraft.class_3222 method_14602(java.util.UUID) -> method_14602
    25:26:void onPlayerJoin(net.minecraft.class_2535,net.minecraft.class_3222,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    30:31:void onPlayerLeave(net.minecraft.class_3222,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    35:36:void onAddToOperators(com.mojang.authlib.GameProfile,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    40:41:void onRemoveFromOperators(com.mojang.authlib.GameProfile,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    47:50:void onPlayerPermissionChanged(com.mojang.authlib.GameProfile) -> a
com.g4mesoft.mixin.server.GSServerPlayNetworkHandlerMixin -> com.g4mesoft.mixin.server.GSServerPlayNetworkHandlerMixin:
    com.g4mesoft.core.GSVersion version -> version
    com.g4mesoft.GSExtensionUID[] extensionUids -> extensionUids
    java.util.Set extensionUidSet -> extensionUidSet
    java.util.Map translationVersions -> translationVersions
    net.minecraft.class_3222 field_14140 -> field_14140
    31:38:void <init>() -> <init>
    44:55:void onCustomPayload(net.minecraft.class_2817,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    59:60:void setCoreVersion(com.g4mesoft.core.GSVersion) -> a
    64:64:com.g4mesoft.core.GSVersion getCoreVersion() -> a
    69:74:void setExtensionUids(com.g4mesoft.GSExtensionUID[]) -> a
    78:78:com.g4mesoft.GSExtensionUID[] getExtensionUids() -> a
    83:83:boolean isExtensionInstalled(com.g4mesoft.GSExtensionUID) -> a
    88:89:void setTranslationVersion(com.g4mesoft.GSExtensionUID,int) -> a
    93:93:int getTranslationVersion(com.g4mesoft.GSExtensionUID) -> a
com.g4mesoft.mixin.server.GSServerWorldMixin -> com.g4mesoft.mixin.server.GSServerWorldMixin:
    12:12:void <init>() -> <init>
    16:16:double blockEventDistance(double) -> a
com.g4mesoft.mixin.server.GSTranslatableTextMixin -> com.g4mesoft.mixin.server.GSTranslatableTextMixin:
    long field_11871 -> field_11871
    java.lang.String field_11876 -> field_11876
    java.util.List field_11877 -> field_11877
    long lastTranslationTimestamp -> lastTranslationTimestamp
    21:27:void <init>() -> <init>
    void method_11024(java.lang.String) -> method_11024
    33:60:void onUpdateTranslations(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> k
com.g4mesoft.module.tps.GSETpsHotkeyType -> core.bf:
    com.g4mesoft.module.tps.GSETpsHotkeyType RESET_TPS -> a
    com.g4mesoft.module.tps.GSETpsHotkeyType INCREMENT_TPS -> b
    com.g4mesoft.module.tps.GSETpsHotkeyType DECREMENT_TPS -> c
    com.g4mesoft.module.tps.GSETpsHotkeyType DOUBLE_TPS -> d
    com.g4mesoft.module.tps.GSETpsHotkeyType HALVE_TPS -> e
    com.g4mesoft.module.tps.GSETpsHotkeyType[] HOTKEY_TYPES -> a
    int index -> eK
    com.g4mesoft.module.tps.GSETpsHotkeyType[] $VALUES -> b
    3:3:com.g4mesoft.module.tps.GSETpsHotkeyType[] values() -> values
    3:3:com.g4mesoft.module.tps.GSETpsHotkeyType valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,int) -> <init>
    31:33:com.g4mesoft.module.tps.GSETpsHotkeyType fromIndex(int) -> a
    37:37:int getIndex() -> aq
    3:22:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSITpsDependant -> core.bg:
    void tpsChanged(float,float) -> c
com.g4mesoft.module.tps.GSRenderTickCounterAdjuster -> core.bh:
    float DEFAULT_MS_PER_TICK -> u
    float EXTRA_SERVER_SYNC_DELAY -> v
    float MIN_SERVER_SYNC_DELAY -> w
    float SYNC_DELAY_EASING_FACTOR -> x
    com.g4mesoft.module.tps.GSRenderTickCounterAdjuster INSTANCE -> a
    boolean initialized -> a
    float msPerTick -> msPerTick
    java.lang.Object serverSyncLock -> a
    float approximatedServerTickDelta -> y
    boolean serverSyncReceived -> y
    long serverLast -> e
    int serverTicksSinceLastSync -> eL
    int serverSyncInterval -> eM
    long clientLast -> f
    float serverSyncDelay -> z
    boolean tickAfterServer -> z
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> tpsModule
    22:40:void <init>() -> <init>
    43:61:void init(float,long) -> a
    68:68:float getAdjustedMsPerTick(net.minecraft.class_317) -> a
    72:82:void performSynchronization(net.minecraft.class_317,long) -> a
    86:100:void updateServerClock(net.minecraft.class_317,long) -> b
    103:108:void updateSyncDelay(net.minecraft.class_317,long) -> c
    111:120:boolean shouldAdjustTickDelta() -> F
    124:157:void adjustTickDelta(net.minecraft.class_317) -> a
    161:162:void tpsChanged(float,float) -> c
    165:172:void onServerTickSync(int) -> C
    175:175:com.g4mesoft.module.tps.GSRenderTickCounterAdjuster getInstance() -> a
    20:20:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSServerSyncPacket -> core.bi:
    int packetInterval -> eN
    18:19:void <init>() -> <init>
    21:23:void <init>(int) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:37:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    42:43:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
    47:47:boolean shouldForceMainThread() -> G
com.g4mesoft.module.tps.GSServerTpsPacket -> core.bj:
    float serverTps -> A
    16:17:void <init>() -> <init>
    19:21:void <init>(float) -> <init>
    25:26:void read(net.minecraft.class_2540) -> a
    30:31:void write(net.minecraft.class_2540) -> b
    35:35:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    39:40:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.module.tps.GSTpsChangePacket -> core.bk:
    float requestedTps -> B
    18:19:void <init>() -> <init>
    21:23:void <init>(float) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:40:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    45:46:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.module.tps.GSTpsCommand -> core.bl:
    17:18:void <init>() -> <init>
    21:32:void registerCommand(com.mojang.brigadier.CommandDispatcher) -> c
    35:58:int informCurrentTps(net.minecraft.class_2168) -> b
    62:64:java.lang.String formatSign(int) -> b
    68:72:int setCurrentTps(net.minecraft.class_2168,float) -> a
    28:28:int lambda$registerCommand$2(com.mojang.brigadier.context.CommandContext) -> b
    25:25:int lambda$registerCommand$1(com.mojang.brigadier.context.CommandContext) -> c
    22:22:boolean lambda$registerCommand$0(net.minecraft.class_2168) -> a
com.g4mesoft.module.tps.GSTpsHotkeyPacket -> core.bm:
    com.g4mesoft.module.tps.GSETpsHotkeyType type -> f
    boolean sneaking -> A
    19:20:void <init>() -> <init>
    22:25:void <init>(com.g4mesoft.module.tps.GSETpsHotkeyType,boolean) -> <init>
    29:31:void read(net.minecraft.class_2540) -> a
    35:37:void write(net.minecraft.class_2540) -> b
    41:42:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    47:48:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.module.tps.GSTpsModule -> core.bn:
    float DEFAULT_TPS -> C
    float MIN_TPS -> D
    float MAX_TPS -> E
    float MS_PER_SEC -> F
    long SERVER_TPS_INTERVAL -> g
    float TPS_INCREMENT_INTERVAL -> G
    float TONE_MULTIPLIER -> H
    com.g4mesoft.core.GSVersion TPS_INTRODUCTION_VERSION -> g
    com.g4mesoft.core.GSVersion TPS_MONITOR_INTRODUCTION_VERSION -> h
    com.g4mesoft.setting.GSSettingCategory TPS_CATEGORY -> b
    com.g4mesoft.setting.GSSettingCategory BETTER_PISTONS_CATEGORY -> c
    java.lang.String KEY_CATEGORY -> K
    int PISTON_ANIM_PAUSE_END -> eO
    int PISTON_ANIM_PAUSE_BEGINNING -> eP
    int PISTON_ANIM_NO_PAUSE -> eQ
    int AUTOMATIC_PISTON_RENDER_DISTANCE -> eR
    java.text.DecimalFormat TPS_FORMAT -> b
    float tps -> I
    java.util.List listeners -> q
    int serverSyncTimer -> eS
    com.g4mesoft.module.tps.GSTpsMonitor serverTpsMonitor -> a
    long lastServerTpsTime -> h
    float serverTps -> A
    com.g4mesoft.core.GSIModuleManager manager -> a
    com.g4mesoft.setting.types.GSBooleanSetting cShiftPitch -> a
    com.g4mesoft.setting.types.GSBooleanSetting cSyncTick -> b
    com.g4mesoft.setting.types.GSFloatSetting cSyncTickAggression -> a
    com.g4mesoft.setting.types.GSBooleanSetting cForceCarpetTickrate -> c
    com.g4mesoft.setting.types.GSIntegerSetting sSyncPacketInterval -> a
    com.g4mesoft.setting.types.GSBooleanSetting sAllowHotkeyControls -> d
    com.g4mesoft.setting.types.GSBooleanSetting cShowTpsLabel -> e
    com.g4mesoft.setting.types.GSBooleanSetting sBroadcastTps -> f
    com.g4mesoft.setting.types.GSIntegerSetting cPistonAnimationType -> b
    com.g4mesoft.setting.types.GSIntegerSetting cPistonRenderDistance -> c
    com.g4mesoft.setting.types.GSIntegerSetting sBlockEventDistance -> d
    com.g4mesoft.setting.types.GSBooleanSetting sParanoidMode -> g
    75:117:void <init>() -> <init>
    121:126:void init(com.g4mesoft.core.GSIModuleManager) -> a
    130:137:void onClose() -> d
    141:153:void registerClientSettings(com.g4mesoft.setting.GSSettingManager) -> a
    157:171:void registerHotkeys(com.g4mesoft.hotkey.GSKeyManager) -> a
    175:181:void registerServerSettings(com.g4mesoft.setting.GSSettingManager) -> b
    185:186:void registerCommands(com.mojang.brigadier.CommandDispatcher) -> a
    190:225:void tick(boolean) -> a
    228:230:void onServerTps(float) -> i
    233:257:void onClientHotkey(com.g4mesoft.module.tps.GSETpsHotkeyType) -> a
    260:282:void onPlayerHotkey(net.minecraft.class_3222,com.g4mesoft.module.tps.GSETpsHotkeyType,boolean) -> a
    285:349:void performHotkeyAction(com.g4mesoft.module.tps.GSETpsHotkeyType,boolean) -> a
    353:356:void onDisconnectServer() -> e
    360:362:void onG4mespeedClientJoin(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    365:369:void addTpsListener(com.g4mesoft.module.tps.GSITpsDependant) -> a
    372:375:void removeTpsListener(com.g4mesoft.module.tps.GSITpsDependant) -> b
    378:381:void clearTpsListeners() -> ad
    384:385:void resetTps() -> ae
    388:419:void setTps(float) -> j
    422:422:boolean isGameModeAllowingHotkeys(net.minecraft.class_1657) -> a
    426:426:boolean isPlayerAllowedTpsChange(net.minecraft.class_1657) -> b
    431:433:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    437:438:void onCarpetTickrateChanged(float) -> b
    441:441:float getMsPerTick() -> t
    445:445:float getTps() -> u
    450:454:void onServerSyncPacket(int) -> D
    458:460:float getServerTps() -> v
    400:413:void lambda$setTps$4(com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    361:361:void lambda$onG4mespeedClientJoin$3(net.minecraft.class_3222,com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    268:276:void lambda$onPlayerHotkey$2(net.minecraft.class_3222,com.g4mesoft.core.server.GSIModuleManagerServer) -> b
    234:256:void lambda$onClientHotkey$1(com.g4mesoft.module.tps.GSETpsHotkeyType,com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    191:215:void lambda$tick$0(boolean,com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    50:66:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSTpsModule$1 -> core.bo:
    int[] $SwitchMap$com$g4mesoft$module$tps$GSETpsHotkeyType -> e
    318:318:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSTpsMonitor -> core.bp:
    long MILLIS_PER_SECOND -> i
    int MAX_TPS_HISTORY_SIZE -> eT
    int[] tpsHistory -> f
    int tpsHistorySize -> eU
    int tpsHistoryPosition -> eV
    long tpsAccumulator -> j
    long lastUpdateTime -> k
    int ticks -> eW
    float averageTps -> J
    22:26:void <init>() -> <init>
    29:36:void reset() -> g
    39:76:void update(int) -> E
    79:87:void addToHistory(int) -> F
    90:90:float getAverageTps() -> w
com.g4mesoft.module.translation.GSOutdatedTranslationVersionPacket -> core.bq:
    int translationVersion -> eX
    18:19:void <init>() -> <init>
    22:24:void <init>(int) -> <init>
    28:29:void read(net.minecraft.class_2540) -> a
    33:34:void write(net.minecraft.class_2540) -> b
    38:39:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    44:44:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.module.translation.GSTranslationCache -> core.br:
    int cacheVersion -> eY
    java.util.Map translations -> h
    12:15:void <init>(int,java.util.Map) -> <init>
    18:19:void getAllTranslations(java.util.Map) -> a
    22:22:int getCacheVersion() -> ar
    26:28:com.g4mesoft.module.translation.GSTranslationCache merge(com.g4mesoft.module.translation.GSTranslationCache) -> a
    32:32:java.util.Map getTranslationMap() -> a
com.g4mesoft.module.translation.GSTranslationCacheList -> core.bs:
    java.util.Map caches -> i
    int cachedTranslationVersion -> eZ
    12:15:void <init>() -> <init>
    18:26:void addTranslationCache(com.g4mesoft.module.translation.GSTranslationCache) -> a
    29:29:int getVersion() -> as
    33:33:java.util.Map getCaches() -> b
com.g4mesoft.module.translation.GSTranslationCachePacket -> core.bt:
    com.g4mesoft.GSExtensionUID uid -> c
    com.g4mesoft.module.translation.GSTranslationCache cache -> a
    25:26:void <init>() -> <init>
    28:31:void <init>(com.g4mesoft.GSExtensionUID,com.g4mesoft.module.translation.GSTranslationCache) -> <init>
    35:42:void read(net.minecraft.class_2540,com.g4mesoft.core.GSVersion) -> a
    46:58:void read(net.minecraft.class_2540) -> a
    62:72:void write(net.minecraft.class_2540) -> b
    76:76:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    81:82:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
    86:86:boolean shouldForceMainThread() -> G
com.g4mesoft.module.translation.GSTranslationModule -> core.bu:
    com.g4mesoft.core.GSVersion TRANSLATION_INTRODUCTION_VERSION -> i
    com.g4mesoft.core.GSVersion TRANSLATION_EXTENSION_VERSION -> j
    java.lang.String CACHED_TRANSLATION_FILENAME -> L
    int INVALID_TRANSLATION_VERSION -> fa
    long MAX_CACHE_LIFE_HOURS -> l
    java.util.Map translations -> h
    java.util.Map cacheLists -> j
    com.g4mesoft.core.GSIModuleManager manager -> a
    long cacheSaveTime -> m
    long translationsChangeTimestamp -> n
    54:59:void <init>() -> <init>
    63:77:void init(com.g4mesoft.core.GSIModuleManager) -> a
    81:100:void onClose() -> d
    104:105:void extensionAdded(com.g4mesoft.GSIExtension) -> extensionAdded
    108:116:void addExtensionTranslations(com.g4mesoft.GSIExtension) -> d
    120:133:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> b
    136:137:void onOutdatedTranslationVersionReceived(net.minecraft.class_3222,int) -> a
    140:142:void onTranslationVersionsReceived(net.minecraft.class_3222,java.util.Map) -> a
    147:168:void sendMissingTranslations(net.minecraft.class_3222,com.g4mesoft.GSExtensionUID,int) -> a
    171:197:void loadCachedTranslations(java.io.InputStream) -> a
    200:203:void loadTranslations(java.io.InputStream,com.g4mesoft.GSExtensionUID,boolean) -> a
    206:248:void loadTranslations(java.io.BufferedReader,com.g4mesoft.GSExtensionUID,boolean) -> a
    251:279:void saveTranslations(java.io.OutputStream) -> a
    282:282:java.io.File getCachedFile(com.g4mesoft.core.GSIModuleManager) -> a
    286:296:void addTranslationCache(com.g4mesoft.GSExtensionUID,com.g4mesoft.module.translation.GSTranslationCache) -> a
    299:299:long getTranslationTimestamp() -> a
    303:304:java.lang.String getTranslation(java.lang.String) -> c
    308:309:java.lang.String getFormattedTranslation(java.lang.String,java.lang.Object[]) -> c
    313:313:boolean hasTranslation(java.lang.String) -> d
    153:164:void lambda$sendMissingTranslations$5(com.g4mesoft.module.translation.GSTranslationCacheList,int,com.g4mesoft.GSExtensionUID,net.minecraft.class_3222,com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    154:154:int lambda$null$4(com.g4mesoft.module.translation.GSTranslationCache,com.g4mesoft.module.translation.GSTranslationCache) -> a
    129:129:void lambda$onJoinG4mespeedServer$3(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    123:123:void lambda$onJoinG4mespeedServer$2(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.client.GSIModuleManagerClient) -> b
    83:97:void lambda$onClose$1(com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    66:73:void lambda$init$0(com.g4mesoft.core.GSIModuleManager,com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    38:39:void <clinit>() -> <clinit>
com.g4mesoft.module.translation.GSTranslationVersionsPacket -> core.bv:
    java.util.Map uidToVersion -> k
    21:22:void <init>() -> <init>
    24:29:void <init>(java.util.Map) -> <init>
    33:41:void read(net.minecraft.class_2540) -> a
    45:51:void write(net.minecraft.class_2540) -> b
    55:56:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    61:61:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.packet.GSICustomPayloadHolder -> core.bw:
    net.minecraft.class_2960 getChannelGS() -> b
    net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.packet.GSIPacket -> core.bx:
    void read(net.minecraft.class_2540) -> a
    19:20:void read(net.minecraft.class_2540,com.g4mesoft.core.GSVersion) -> a
    void write(net.minecraft.class_2540) -> b
    void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
    30:30:boolean shouldForceMainThread() -> G
com.g4mesoft.packet.GSPacketManager -> core.by:
    net.minecraft.class_2960 GS_IDENTIFIER -> c
    int MIN_CORE_FALLBACK_PACKET_ID -> fb
    int MAX_CORE_FALLBACK_PACKET_ID -> fc
    short INVALID_FALLBACK_PACKET_ID -> a
    com.g4mesoft.packet.GSPacketRegistryList registryList -> a
    30:35:void <init>() -> <init>
    38:57:net.minecraft.class_2596 encodePacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSController) -> a
    61:91:com.g4mesoft.packet.GSIPacket decodePacket(com.g4mesoft.packet.GSICustomPayloadHolder,com.g4mesoft.core.GSVersion,net.minecraft.class_2547,net.minecraft.class_1255) -> a
    96:106:boolean isFallbackPacket(long) -> a
    110:110:short getFallbackId(long) -> a
    114:114:com.g4mesoft.registry.GSElementRegistry getFallbackRegistry() -> a
    118:121:void registerPackets(com.g4mesoft.GSIExtension) -> e
    21:21:void <clinit>() -> <clinit>
com.g4mesoft.packet.GSPacketRegistryList -> core.bz:
    java.util.Map uidToRegistry -> l
    java.util.Map idCache -> m
    14:17:void <init>() -> <init>
    20:37:long getFullPacketId(java.lang.Class) -> a
    41:45:com.g4mesoft.packet.GSIPacket createNewPacket(long) -> a
    49:49:com.g4mesoft.registry.GSElementRegistry getPacketRegistry(com.g4mesoft.GSExtensionUID) -> a
    53:58:void addPacketRegistry(com.g4mesoft.GSExtensionUID,com.g4mesoft.registry.GSElementRegistry) -> a
    61:61:com.g4mesoft.GSExtensionUID getPacketExtensionUID(long) -> a
    65:65:int getBasicPacketId(long) -> a
com.g4mesoft.registry.GSElementRegistry -> core.bA:
    java.util.Map elementToId -> n
    java.util.Map idToElement -> o
    java.util.Map idToSupplier -> p
    13:17:void <init>() -> <init>
    20:28:void register(int,java.lang.Class,java.util.function.Supplier) -> a
    31:31:java.lang.Class getElementFromId(int) -> a
    35:35:boolean containsElement(java.lang.Class) -> a
    39:40:int getIdFromElement(java.lang.Class) -> a
    44:45:java.lang.Object createNewElement(int) -> a
com.g4mesoft.setting.GSISettingChangeListener -> core.bB:
    5:5:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    7:7:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    9:9:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
com.g4mesoft.setting.GSRemoteSettingManager -> core.bC:
    com.g4mesoft.core.client.GSControllerClient controllerClient -> b
    java.util.Map shadowSettings -> q
    boolean remoteSettingChanging -> B
    boolean allowedSettingChange -> C
    18:25:void <init>(com.g4mesoft.core.client.GSControllerClient) -> <init>
    29:30:void registerSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> e
    33:42:void registerShadowSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> f
    45:46:com.g4mesoft.setting.GSSetting getShadowSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> a
    50:53:void updateShadowValue(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> g
    57:63:void settingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> h
    67:70:void settingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> i
    74:79:void settingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> j
    82:87:void onRemoteSettingMapReceived(com.g4mesoft.setting.GSSettingMap) -> a
    90:97:void onRemoteSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> k
    100:101:void onRemoteSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> l
    104:105:void onRemoteSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> m
    108:116:void setAllowedSettingChange(boolean) -> h
    119:119:boolean isAllowedSettingChange() -> H
com.g4mesoft.setting.GSServerSettingMapPacket -> core.bD:
    com.g4mesoft.core.GSVersion DISABLE_SETTING_INTRODUCTION -> k
    com.g4mesoft.setting.GSSettingMap settingMap -> a
    21:22:void <init>() -> <init>
    24:26:void <init>(com.g4mesoft.setting.GSSettingMap) -> <init>
    30:32:void read(net.minecraft.class_2540) -> a
    36:38:void write(net.minecraft.class_2540) -> b
    42:42:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    47:48:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
    17:17:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSetting -> core.bE:
    java.lang.String name -> I
    java.lang.Object defaultValue -> b
    boolean visibleInGui -> D
    com.g4mesoft.setting.GSSettingMap settingOwner -> b
    boolean active -> E
    boolean enabledInGui -> F
    14:23:void <init>(java.lang.String,java.lang.Object,boolean) -> <init>
    26:26:java.lang.String getName() -> b
    30:33:void setSettingOwner(com.g4mesoft.setting.GSSettingMap) -> b
    36:38:void notifyOwnerChange() -> af
    java.lang.Object getValue() -> a
    com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    boolean isDefaultValue() -> I
    boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    com.g4mesoft.setting.GSSetting copySetting() -> a
    51:52:void reset() -> g
    56:58:void setValueIfSameType(com.g4mesoft.setting.GSSetting) -> d
    61:61:java.lang.Object getDefaultValue() -> b
    65:66:void setActive(boolean) -> i
    69:69:boolean isActive() -> J
    73:73:boolean isVisibleInGUI() -> K
    77:81:com.g4mesoft.setting.GSSetting setEnabledInGui(boolean) -> a
    85:85:boolean isEnabledInGui() -> L
com.g4mesoft.setting.GSSettingCategory -> core.bF:
    java.lang.String name -> I
    11:13:void <init>(java.lang.String) -> <init>
    16:16:java.lang.String getName() -> b
    21:21:int hashCode() -> hashCode
    26:28:boolean equals(java.lang.Object) -> equals
    32:32:com.g4mesoft.setting.GSSettingCategory read(net.minecraft.class_2540) -> a
    36:37:void write(net.minecraft.class_2540) -> b
com.g4mesoft.setting.GSSettingChangePacket -> core.bG:
    com.g4mesoft.core.GSVersion DISABLE_SETTING_INTRODUCTION -> k
    com.g4mesoft.setting.GSSettingCategory category -> a
    com.g4mesoft.setting.GSSetting setting -> a
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType type -> a
    25:26:void <init>() -> <init>
    28:32:void <init>(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType) -> <init>
    36:45:void read(net.minecraft.class_2540) -> a
    51:61:void write(net.minecraft.class_2540) -> b
    65:73:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    78:91:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
    19:19:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingChangePacket$1 -> core.bH:
    int[] $SwitchMap$com$g4mesoft$setting$GSSettingChangePacket$GSESettingChangeType -> g
    80:80:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType -> core.bI:
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_CHANGED -> b
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_ADDED -> c
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_REMOVED -> d
    int index -> eK
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType[] $VALUES -> a
    93:93:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType[] values() -> values
    93:93:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType valueOf(java.lang.String) -> valueOf
    100:102:void <init>(java.lang.String,int,int) -> <init>
    105:114:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType fromIndex(int) -> a
    118:118:int getIndex() -> aq
    93:96:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingManager -> core.bJ:
    java.lang.String UNKNOWN_SETTING_TYPE -> M
    byte CATEGORY_ENTRY_CODE -> a
    java.util.Map settings -> r
    java.util.List listeners -> q
    java.util.Map typeToDecoder -> s
    java.util.Map clazzToDecoder -> t
    53:56:void <init>() -> <init>
    59:63:void registerDefaultParsers() -> ag
    66:82:void registerSettingDecoder(com.g4mesoft.setting.decoder.GSISettingDecoder) -> a
    85:90:com.g4mesoft.setting.decoder.GSISettingDecoder getSettingDecoder(java.lang.String) -> a
    95:100:com.g4mesoft.setting.decoder.GSISettingDecoder getSettingDecoder(java.lang.Class) -> a
    104:108:void loadSettings(java.io.File) -> c
    112:119:void saveSettings(java.io.File) -> d
    122:126:void readSettings(java.io.FileInputStream) -> a
    129:137:void writeSettings(java.io.FileOutputStream) -> a
    140:156:void readSettings(net.minecraft.class_2540) -> c
    159:169:void writeSettings(net.minecraft.class_2540) -> d
    172:173:com.g4mesoft.setting.GSSetting getSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> b
    177:184:void registerSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> e
    187:190:void removeSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> a
    193:193:java.util.Collection getSettings() -> b
    197:197:boolean hasCategory(com.g4mesoft.setting.GSSettingCategory) -> a
    201:204:void clearSettings() -> ah
    207:209:void settingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> h
    212:214:void settingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> i
    217:219:void settingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> j
    222:223:void addChangeListener(com.g4mesoft.setting.GSISettingChangeListener) -> a
    226:227:void removeChangeListener(com.g4mesoft.setting.GSISettingChangeListener) -> b
    43:51:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingMap -> core.bK:
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.util.Map settings -> r
    com.g4mesoft.setting.GSSettingManager owner -> b
    27:32:void <init>(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSettingManager) -> <init>
    35:35:com.g4mesoft.setting.GSSetting getSetting(java.lang.String) -> a
    39:58:void registerSetting(com.g4mesoft.setting.GSSetting) -> e
    61:67:void clearSettings() -> ah
    70:73:com.g4mesoft.setting.GSSetting removeSetting(java.lang.String) -> b
    77:77:java.util.Collection getSettings() -> b
    81:83:void settingChanged(com.g4mesoft.setting.GSSetting) -> f
    86:86:com.g4mesoft.setting.GSSettingCategory getCategory() -> a
    90:134:void readSettings(net.minecraft.class_2540) -> c
    137:138:void writeSettings(net.minecraft.class_2540) -> d
    142:178:void writeSettings(net.minecraft.class_2540,java.util.function.Predicate) -> a
com.g4mesoft.setting.GSSettingPermissionPacket -> core.bL:
    boolean allowedSettingChange -> C
    18:19:void <init>() -> <init>
    21:23:void <init>(boolean) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:37:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    42:43:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> b
com.g4mesoft.setting.decoder.GSBooleanSettingDecoder -> core.bM:
    java.lang.String BOOLEAN_TYPE_STRING -> N
    7:7:void <init>() -> <init>
    13:17:com.g4mesoft.setting.types.GSBooleanSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    22:25:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSBooleanSetting) -> a
    29:29:java.lang.String getTypeString() -> n
    34:34:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSFloatSettingDecoder -> core.bN:
    java.lang.String FLOAT_TYPE_STRING -> O
    7:7:void <init>() -> <init>
    13:20:com.g4mesoft.setting.types.GSFloatSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    25:31:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSFloatSetting) -> a
    35:35:java.lang.String getTypeString() -> n
    40:40:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSISettingDecoder -> core.bO:
    com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    java.lang.String getTypeString() -> n
    java.lang.Class getSettingClass() -> a
com.g4mesoft.setting.decoder.GSIntegerSettingDecoder -> core.bP:
    java.lang.String INTEGER_TYPE_STRING -> P
    7:7:void <init>() -> <init>
    13:20:com.g4mesoft.setting.types.GSIntegerSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    25:31:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSIntegerSetting) -> a
    35:35:java.lang.String getTypeString() -> n
    40:40:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSStringSettingDecoder -> core.bQ:
    java.lang.String STRING_TYPE_STRING -> Q
    8:8:void <init>() -> <init>
    14:18:com.g4mesoft.setting.types.GSStringSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    23:26:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSStringSetting) -> a
    30:30:java.lang.String getTypeString() -> n
    35:35:java.lang.Class getSettingClass() -> a
    8:8:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    8:8:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.types.GSBooleanSetting -> core.bR:
    boolean value -> G
    10:11:void <init>(java.lang.String,boolean) -> <init>
    14:17:void <init>(java.lang.String,boolean,boolean) -> <init>
    21:21:java.lang.Boolean getValue() -> a
    26:32:com.g4mesoft.setting.types.GSBooleanSetting setValue(java.lang.Boolean) -> a
    37:37:boolean isDefaultValue() -> I
    42:42:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    47:47:com.g4mesoft.setting.GSSetting copySetting() -> a
    5:5:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    5:5:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSFloatSetting -> core.bS:
    float value -> b
    float minValue -> K
    float interval -> L
    float maxValue -> M
    15:16:void <init>(java.lang.String,float) -> <init>
    19:20:void <init>(java.lang.String,float,boolean) -> <init>
    23:24:void <init>(java.lang.String,float,float,float) -> <init>
    27:28:void <init>(java.lang.String,float,float,float,boolean) -> <init>
    31:32:void <init>(java.lang.String,float,float,float,float) -> <init>
    35:42:void <init>(java.lang.String,float,float,float,float,boolean) -> <init>
    46:46:java.lang.Float getValue() -> a
    51:57:com.g4mesoft.setting.types.GSFloatSetting setValue(java.lang.Float) -> a
    61:69:float adjustValue(float) -> f
    74:74:boolean isDefaultValue() -> I
    79:79:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    83:83:float getMinValue() -> x
    87:87:float getInterval() -> y
    91:91:float getMaxValue() -> z
    96:96:com.g4mesoft.setting.GSSetting copySetting() -> a
    6:6:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    6:6:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSIntegerSetting -> core.bT:
    int value -> a
    int minValue -> fd
    int maxValue -> fe
    int interval -> ff
    15:16:void <init>(java.lang.String,int) -> <init>
    19:20:void <init>(java.lang.String,int,boolean) -> <init>
    23:24:void <init>(java.lang.String,int,int,int) -> <init>
    27:28:void <init>(java.lang.String,int,int,int,boolean) -> <init>
    31:32:void <init>(java.lang.String,int,int,int,int) -> <init>
    35:42:void <init>(java.lang.String,int,int,int,int,boolean) -> <init>
    46:46:java.lang.Integer getValue() -> a
    51:57:com.g4mesoft.setting.types.GSIntegerSetting setValue(java.lang.Integer) -> a
    61:69:int adjustValue(int) -> g
    74:74:boolean isDefaultValue() -> I
    79:79:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    83:83:int getMinValue() -> at
    87:87:int getMaxValue() -> au
    91:91:int getInterval() -> av
    96:96:com.g4mesoft.setting.GSSetting copySetting() -> a
    6:6:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    6:6:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSStringSetting -> core.bU:
    java.lang.String value -> R
    12:13:void <init>(java.lang.String,java.lang.String) -> <init>
    16:19:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    23:23:java.lang.String getValue() -> o
    28:33:com.g4mesoft.setting.types.GSStringSetting setValue(java.lang.String) -> a
    38:38:boolean isDefaultValue() -> I
    43:43:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    48:48:com.g4mesoft.setting.GSSetting copySetting() -> a
    7:7:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    7:7:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSUnknownSetting -> core.bV:
    java.lang.String type -> S
    byte[] data -> a
    11:15:void <init>(java.lang.String,java.lang.String,byte[]) -> <init>
    19:19:java.lang.Object getValue() -> a
    24:24:com.g4mesoft.setting.types.GSUnknownSetting setValue(java.lang.Object) -> a
    29:29:boolean isDefaultValue() -> I
    34:34:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    38:38:java.lang.String getType() -> p
    42:42:byte[] getData() -> a
    47:47:com.g4mesoft.setting.GSSetting copySetting() -> a
    5:5:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
com.g4mesoft.util.GSBufferUtil -> core.bW:
    int MAX_STRING_LENGTH -> fg
    3:3:void <init>() -> <init>
com.g4mesoft.util.GSFileUtils -> core.bX:
    6:6:void <init>() -> <init>
    9:11:void ensureDirectoryExists(java.io.File) -> e
    14:18:void ensureFileExists(java.io.File) -> f
com.g4mesoft.util.GSMathUtils -> core.bY:
    float EPSILON_F -> N
    double EPSILON_D -> a
    3:3:void <init>() -> <init>
    9:9:int clamp(int,int,int) -> c
    13:13:long clamp(long,long,long) -> a
    17:17:float clamp(float,float,float) -> a
    21:21:double clamp(double,double,double) -> a
    25:25:boolean equalsApproximate(float,float) -> a
    29:29:boolean equalsApproximate(float,float,float) -> a
    33:33:boolean equalsApproximate(double,double) -> a
    37:37:boolean equalsApproximate(double,double,double) -> a
