com.g4mesoft.G4mespeedMod -> com.g4mesoft.G4mespeedMod:
    java.lang.String MOD_NAME -> MOD_NAME
    com.g4mesoft.core.GSVersion GS_VERSION -> GS_VERSION
    org.apache.logging.log4j.Logger GS_LOGGER -> GS_LOGGER
    com.g4mesoft.G4mespeedMod instance -> instance
    com.g4mesoft.packet.GSPacketManager packetManager -> packetManager
    11:11:void <init>() -> <init>
    24:29:void onInitialize() -> onInitialize
    32:32:com.g4mesoft.packet.GSPacketManager getPacketManager() -> getPacketManager
    36:36:com.g4mesoft.G4mespeedMod getInstance() -> getInstance
    14:16:void <clinit>() -> <clinit>
com.g4mesoft.access.GSINetworkHandlerAccess -> classes.a:
    void setG4mespeedVersion(com.g4mesoft.core.GSVersion) -> a
    com.g4mesoft.core.GSVersion getG4mespeedVersion() -> a
    void setTranslationVersion(int) -> a
    int getTranslationVersion() -> a
com.g4mesoft.access.GSIRenderTickCounterAccess -> classes.b:
    float getTimeScale() -> a
com.g4mesoft.access.GSISmoothPistonBlockEntityAccess -> classes.c:
    float getSmoothProgress(float) -> a
com.g4mesoft.core.GSController -> classes.d:
    java.lang.String SETTINGS_PATH -> c
    java.lang.String CACHE_DIR_NAME -> a
    java.lang.String INTEGRATED_CACHE_DIR_NAME -> b
    java.util.Set INSTANCES -> a
    com.g4mesoft.setting.GSSettingManager settings -> a
    java.util.List modules -> a
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> a
    com.g4mesoft.module.translation.GSTranslationModule translationModule -> a
    34:44:void <init>() -> <init>
    47:50:void onStart() -> a
    53:62:void onStop() -> b
    65:68:void initModules() -> c
    72:74:void addModule(com.g4mesoft.core.GSIModule) -> a
    77:79:void tick() -> d
    82:82:com.g4mesoft.module.tps.GSTpsModule getTpsModule() -> a
    86:86:com.g4mesoft.module.translation.GSTranslationModule getTranslationModule() -> a
    91:91:java.util.List getModules() -> a
    96:96:com.g4mesoft.setting.GSSettingManager getSettingManager() -> a
    100:100:java.io.File getSettingsFile() -> b
    104:108:com.g4mesoft.core.GSController getInstanceOnThread() -> a
    boolean isThreadOwner() -> a
    net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    boolean isClient() -> b
    com.g4mesoft.core.GSVersion getVersion() -> a
    24:24:void <clinit>() -> <clinit>
com.g4mesoft.core.GSCoreOverride -> com.g4mesoft.core.GSCoreOverride:
com.g4mesoft.core.GSIModule -> classes.e:
    void init(com.g4mesoft.core.GSIModuleManager) -> a
    18:18:void initGUI(com.g4mesoft.gui.GSTabbedGUI) -> a
    20:20:void onClose() -> a
    23:23:void registerClientSettings(com.g4mesoft.setting.GSSettingManager) -> a
    26:26:void registerHotkeys(com.g4mesoft.hotkey.GSKeyManager) -> a
    28:28:void registerServerSettings(com.g4mesoft.setting.GSSettingManager) -> b
    30:30:void registerCommands(com.mojang.brigadier.CommandDispatcher) -> a
    32:32:void tick() -> b
    35:35:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> a
    38:38:void onDisconnectServer() -> c
    40:40:void onPlayerJoin(net.minecraft.class_3222) -> a
    42:42:void onG4mespeedClientJoin(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    44:44:void onPlayerLeave(net.minecraft.class_3222) -> b
    46:46:void onPlayerPermissionChanged(net.minecraft.class_3222) -> c
com.g4mesoft.core.GSIModuleManager -> classes.f:
    java.util.List getModules() -> a
    void runOnClient(java.util.function.Consumer) -> a
    void runOnServer(java.util.function.Consumer) -> b
    com.g4mesoft.setting.GSSettingManager getSettingManager() -> a
    java.io.File getCacheFile() -> a
com.g4mesoft.core.GSVersion -> classes.g:
    com.g4mesoft.core.GSVersion INVALID -> a
    com.g4mesoft.core.GSVersion MINIMUM_VERSION -> b
    int majorVersion -> a
    int minorVersion -> b
    int updateVersion -> c
    java.lang.String versionStringCache -> a
    16:22:void <init>(int,int,int) -> <init>
    25:25:int getMajorVersion() -> a
    29:29:int getMinorVersion() -> b
    33:33:int getUpdateVersion() -> c
    37:39:java.lang.String getVersionString() -> a
    43:43:boolean isInvalid() -> a
    47:50:com.g4mesoft.core.GSVersion read(net.minecraft.class_2540) -> a
    54:57:void write(net.minecraft.class_2540) -> a
    60:74:boolean isGreaterThanOrEqualTo(com.g4mesoft.core.GSVersion) -> a
    78:78:boolean isLessThan(com.g4mesoft.core.GSVersion) -> b
    82:85:boolean isEqual(com.g4mesoft.core.GSVersion) -> c
    92:94:boolean equals(java.lang.Object) -> equals
    99:99:java.lang.String toString() -> toString
    7:8:void <clinit>() -> <clinit>
com.g4mesoft.core.GSVersionPacket -> classes.h:
    com.g4mesoft.core.GSVersion version -> a
    18:19:void <init>() -> <init>
    21:23:void <init>(com.g4mesoft.core.GSVersion) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:38:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    43:44:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
com.g4mesoft.core.client.GSControllerClient -> classes.i:
    java.lang.String CLIENT_SETTINGS_GUI_TITLE -> c
    java.lang.String SERVER_SETTINGS_GUI_TITLE -> d
    java.lang.String HOTKEY_GUI_TITLE -> e
    java.lang.String G4MESPEED_INFO_GUI_TITLE -> f
    java.lang.String GS_KEY_CATEGORY -> g
    java.lang.String GUI_KEY_NAME -> h
    java.lang.String HOTKEY_SETTINGS_FILE_NAME -> i
    com.g4mesoft.core.client.GSControllerClient instance -> a
    net.minecraft.class_310 minecraft -> a
    net.minecraft.class_634 networkHandler -> a
    com.g4mesoft.core.GSVersion serverVersion -> a
    com.g4mesoft.setting.GSRemoteSettingManager serverSettings -> a
    com.g4mesoft.hotkey.GSKeyManager keyManager -> a
    com.g4mesoft.gui.GSTabbedGUI tabbedGUI -> a
    57:68:void <init>() -> <init>
    72:80:void addModule(com.g4mesoft.core.GSIModule) -> a
    83:90:void init(net.minecraft.class_310) -> a
    93:94:void setNetworkHandler(net.minecraft.class_634) -> a
    97:102:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> a
    105:112:void onDisconnectServer() -> e
    115:118:void onClientClose() -> f
    121:121:java.io.File getHotkeySettingsFile() -> b
    126:129:void tick() -> d
    133:133:boolean isThreadOwner() -> a
    138:138:net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    143:143:boolean isClient() -> b
    148:148:com.g4mesoft.core.GSVersion getVersion() -> a
    153:154:void runOnClient(java.util.function.Consumer) -> a
    158:158:void runOnServer(java.util.function.Consumer) -> b
    162:162:com.g4mesoft.core.GSVersion getServerVersion() -> b
    167:167:boolean isG4mespeedServer() -> c
    172:172:boolean isInGame() -> d
    177:178:void sendPacket(com.g4mesoft.packet.GSIPacket) -> a
    182:189:void sendPacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
    193:193:java.io.File getCacheFile() -> a
    197:197:com.g4mesoft.hotkey.GSKeyManager getKeyManager() -> a
    201:201:com.g4mesoft.setting.GSRemoteSettingManager getServerSettings() -> a
    205:205:com.g4mesoft.core.client.GSControllerClient getInstance() -> a
    46:46:void <clinit>() -> <clinit>
com.g4mesoft.core.client.GSIModuleManagerClient -> classes.j:
    com.g4mesoft.core.GSVersion getServerVersion() -> b
    boolean isG4mespeedServer() -> c
    boolean isInGame() -> d
    void sendPacket(com.g4mesoft.packet.GSIPacket) -> a
    void sendPacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
com.g4mesoft.core.server.GSControllerServer -> classes.k:
    com.g4mesoft.core.GSVersion SETTING_PERMISSION_INTRODUCTION -> a
    int OP_PERMISSION_LEVEL -> a
    com.g4mesoft.core.server.GSControllerServer instance -> a
    com.mojang.brigadier.CommandDispatcher dispatcher -> a
    net.minecraft.server.MinecraftServer server -> a
    45:49:void <init>() -> <init>
    53:59:void addModule(com.g4mesoft.core.GSIModule) -> a
    62:65:void init(net.minecraft.server.MinecraftServer) -> a
    68:74:void setCommandDispatcher(com.mojang.brigadier.CommandDispatcher) -> a
    77:81:void onPlayerJoin(net.minecraft.class_3222) -> a
    84:93:void onG4mespeedClientJoined(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    96:98:void onPlayerLeave(net.minecraft.class_3222) -> b
    101:104:void onServerShutdown() -> e
    107:111:void onPlayerPermissionChanged(net.minecraft.class_3222) -> c
    115:115:boolean isThreadOwner() -> a
    120:120:net.minecraft.class_2596 encodeCustomPayload(net.minecraft.class_2960,net.minecraft.class_2540) -> a
    125:125:boolean isClient() -> b
    130:130:com.g4mesoft.core.GSVersion getVersion() -> a
    135:135:void runOnClient(java.util.function.Consumer) -> a
    139:140:void runOnServer(java.util.function.Consumer) -> b
    144:145:void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> a
    149:157:void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    161:162:void sendPacketToAll(com.g4mesoft.packet.GSIPacket) -> a
    166:179:void sendPacketToAll(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
    183:187:java.io.File getCacheFile() -> a
    192:193:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    197:198:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    202:203:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    206:210:void sendSettingChange(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType) -> a
    213:213:boolean isAllowedSettingChange(net.minecraft.class_3222) -> a
    217:218:void sendSettingPermissionPacket(net.minecraft.class_3222) -> d
    221:221:net.minecraft.server.MinecraftServer getServer() -> a
    225:225:com.g4mesoft.core.server.GSControllerServer getInstance() -> a
    35:39:void <clinit>() -> <clinit>
com.g4mesoft.core.server.GSIModuleManagerServer -> classes.l:
    void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222) -> a
    void sendPacket(com.g4mesoft.packet.GSIPacket,net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    void sendPacketToAll(com.g4mesoft.packet.GSIPacket) -> a
    void sendPacketToAll(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSVersion) -> a
com.g4mesoft.core.server.GSInfoCommand -> classes.m:
    10:10:void <init>() -> <init>
    13:16:void registerCommand(com.mojang.brigadier.CommandDispatcher) -> a
    19:20:int informG4mespeedVersion(net.minecraft.class_2168) -> a
    14:14:int lambda$registerCommand$0(com.mojang.brigadier.context.CommandContext) -> a
com.g4mesoft.debug.GSDebug -> classes.n:
    boolean GS_DEBUG -> a
    boolean PRINT_TICK_INTERVAL -> b
    long lastMethodCallTimeNs -> a
    3:3:void <init>() -> <init>
    15:15:void onClientTick() -> a
    23:23:void onServerTick() -> b
    28:31:void printTimeIntervalSync(java.lang.String) -> a
    25:25:void <clinit>() -> <clinit>
com.g4mesoft.gui.GSInfoGUI -> classes.o:
    int TEXT_COLOR -> a
    int VERSION_COLOR -> b
    int LESS_THAN_VERSION_COLOR -> c
    int INVALID_VERSION_COLOR -> d
    java.lang.String SERVER_VERSION_TITLE_MSG -> a
    java.lang.String INVALID_SERVER_MSG -> b
    java.lang.String CLIENT_VERSION_TITLE_MSG -> c
    com.g4mesoft.core.client.GSControllerClient controllerClient -> a
    23:26:void <init>(com.g4mesoft.core.client.GSControllerClient) -> <init>
    30:54:void renderTranslated(int,int,float) -> a
com.g4mesoft.gui.GSParentGUI -> classes.p:
    java.lang.String TRIMMED_TEXT_ELLIPSIS -> a
    char FORMATTING_CHAR -> a
    boolean selected -> a
    int x -> a
    int y -> b
    26:29:void <init>(net.minecraft.class_2561) -> <init>
    32:36:void initBounds(net.minecraft.class_310,int,int,int,int) -> a
    41:42:void init(net.minecraft.class_310,int,int) -> init
    45:49:void setBounds(int,int,int,int) -> setBounds
    54:55:void setSize(int,int) -> setSize
    58:58:int getTranslationX() -> a
    62:62:int getTranslationY() -> b
    68:74:void render(int,int,float) -> render
    77:78:void renderTranslated(int,int,float) -> a
    81:82:void setSelected(boolean) -> a
    85:85:boolean isSelected() -> a
    89:89:double translateMouseX(double) -> a
    93:93:double translateMouseY(double) -> b
    99:99:boolean mouseClicked(double,double,int) -> mouseClicked
    103:103:boolean mouseClickedTranslated(double,double,int) -> a
    109:109:boolean mouseReleased(double,double,int) -> mouseReleased
    113:113:boolean mouseReleasedTranslated(double,double,int) -> b
    119:119:boolean mouseDragged(double,double,int,double,double) -> mouseDragged
    123:123:boolean mouseDraggedTranslated(double,double,int,double,double) -> a
    129:129:boolean keyPressed(int,int,int) -> keyPressed
    135:135:boolean method_16803(int,int,int) -> method_16803
    141:141:boolean charTyped(char,int) -> charTyped
    147:149:boolean mouseScrolled(double,double,double) -> mouseScrolled
    153:153:boolean mouseScrolledTranslated(double,double,double) -> a
    159:162:boolean isMouseOver(double,double) -> isMouseOver
    167:194:java.lang.String trimText(java.lang.String,int) -> a
    198:253:java.util.List splitToLines(java.lang.String,int) -> a
    257:257:int getX() -> c
    261:261:int getY() -> d
    265:265:com.g4mesoft.module.translation.GSTranslationModule getTranslationModule() -> a
com.g4mesoft.gui.GSScrollableParentGUI -> classes.q:
    double SCROLL_AMOUNT -> b
    int SCROLL_BAR_WIDTH -> a
    int SCROLL_BAR_MARGIN_X -> b
    int SCROLL_BAR_MARGIN_Y -> c
    int SCROLL_HIGHLIGHT -> d
    int SCROLL_SHADOW -> e
    int SCROLL_BACKGROUND -> f
    double scrollOffset -> a
    boolean scrollDragActive -> a
    34:35:void <init>(net.minecraft.class_2561) -> <init>
    int getScrollableHeight() -> e
    40:42:void setScrollOffset(double) -> a
    47:86:void render(int,int,float) -> render
    89:98:java.awt.Rectangle getDraggableScrollArea() -> a
    104:109:void init() -> init
    113:113:int getTranslationY() -> b
    118:123:boolean mouseScrolledTranslated(double,double,double) -> a
    127:127:boolean isMouseInView(double,double) -> a
    132:137:boolean mouseClickedTranslated(double,double,int) -> a
    142:143:boolean mouseReleasedTranslated(double,double,int) -> b
    148:157:boolean mouseDraggedTranslated(double,double,int,double,double) -> a
    161:161:int getScrollOffset() -> f
com.g4mesoft.gui.GSTabbedGUI -> classes.r:
    int TAB_VERTICAL_PADDING -> a
    int TAB_HORIZONTAL_PADDING -> b
    int HORIZONTAL_MARGIN -> c
    int VERTICAL_MARGIN -> d
    int MINIMUM_TAB_WIDTH -> e
    int TAB_TEXT_COLOR -> f
    int TAB_BORDER_COLOR -> g
    int SELECTED_TEXT_COLOR -> h
    int SELECTED_BACKGROUND_COLOR -> i
    int HOVERED_BACKGROUND_COLOR -> j
    int tabHeight -> k
    java.util.List tabs -> a
    boolean tabsChanged -> a
    int selectedTabIndex -> l
    44:48:void <init>() -> <init>
    51:59:void addTab(java.lang.String,com.g4mesoft.gui.GSParentGUI) -> a
    62:75:void setSelectedTabIndex(int) -> a
    78:78:com.g4mesoft.gui.GSTabbedGUI$GSTabEntry getSelectedTab() -> a
    82:137:void layoutTabs() -> a
    141:150:void renderTranslated(int,int,float) -> a
    155:160:void tick() -> tick
    163:181:void renderTabs(int,int) -> a
    184:184:boolean isTabHovered(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,double,double) -> a
    189:190:void playClickSound(net.minecraft.class_1144) -> a
    193:204:void renderTab(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,int,boolean,boolean) -> a
    208:218:boolean mouseClickedTranslated(double,double,int) -> a
    224:234:void setFocused(net.minecraft.class_364) -> setFocused
    239:241:void init() -> init
    246:248:void setBounds(int,int,int,int) -> setBounds
    253:253:boolean isPauseScreen() -> isPauseScreen
    94:94:int lambda$layoutTabs$0(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry,com.g4mesoft.gui.GSTabbedGUI$GSTabEntry) -> a
com.g4mesoft.gui.GSTabbedGUI$GSTabEntry -> classes.s:
    java.lang.String title -> a
    com.g4mesoft.gui.GSParentGUI tabContent -> a
    java.lang.String displayTitle -> b
    int x -> a
    int width -> b
    com.g4mesoft.gui.GSTabbedGUI this$0 -> a
    265:268:void <init>(com.g4mesoft.gui.GSTabbedGUI,java.lang.String,com.g4mesoft.gui.GSParentGUI) -> <init>
    271:271:com.g4mesoft.gui.GSParentGUI getTabContent() -> a
    275:276:void setDisplayTitle(java.lang.String) -> a
    279:279:java.lang.String getDisplayTitle() -> a
    283:283:java.lang.String getTranslatedTitle() -> b
    287:288:void setX(int) -> a
    291:291:int getX() -> a
    295:296:void setWidth(int) -> b
    299:299:int getWidth() -> b
    256:256:com.g4mesoft.gui.GSParentGUI access$000(com.g4mesoft.gui.GSTabbedGUI$GSTabEntry) -> a
com.g4mesoft.gui.hotkey.GSHotkeyElementGUI -> classes.t:
    int HOTKEY_HEIGHT -> a
    int HOTKEY_PADDING -> b
    int MAX_NAME_WIDTH -> c
    int MODIFY_BUTTON_WIDTH -> d
    int RESET_BUTTON_WIDTH -> e
    int FONT_COLOR -> f
    int HOVERED_BACKGROUND -> g
    java.lang.String RESET_TEXT -> a
    java.lang.String CANCEL_TEXT -> b
    com.g4mesoft.gui.hotkey.GSHotkeyGUI hotkeyGui -> a
    com.g4mesoft.hotkey.GSKeyBinding keyBinding -> a
    java.lang.String keyName -> c
    java.lang.String localizedKeyCodeName -> d
    boolean modifyingKeyCode -> a
    net.minecraft.class_4185 modifyButton -> a
    net.minecraft.class_4185 resetButton -> b
    40:46:void <init>(com.g4mesoft.gui.hotkey.GSHotkeyGUI,com.g4mesoft.hotkey.GSKeyBinding) -> <init>
    51:74:void init() -> init
    77:79:void updateButtons() -> a
    82:93:void updateResetButton() -> b
    96:104:void updateModifyButton() -> c
    108:115:void renderTranslated(int,int,float) -> a
    118:121:void setKeyCode(net.minecraft.class_3675$class_306) -> a
    124:134:void setModifying(boolean) -> b
    139:144:boolean keyPressed(int,int,int) -> keyPressed
    149:154:boolean mouseClickedTranslated(double,double,int) -> a
    158:158:int getPreferredHeight() -> e
    162:162:int getPreferredWidth() -> f
    68:69:void lambda$init$1(net.minecraft.class_4185) -> a
    60:65:void lambda$init$0(net.minecraft.class_4185) -> b
com.g4mesoft.gui.hotkey.GSHotkeyGUI -> classes.u:
    int HOTKEY_MARGIN -> a
    int CATEGORY_MARGIN -> b
    int CATEGORY_TITLE_BOTTOM_MARGIN -> c
    int CATEGORY_TITLE_COLOR -> d
    java.util.Map hotkeyCategories -> a
    int scrollableHeight -> e
    boolean needsRelayout -> b
    com.g4mesoft.gui.hotkey.GSHotkeyElementGUI changingElement -> a
    32:41:void <init>(com.g4mesoft.hotkey.GSKeyManager) -> <init>
    44:59:void layoutHotkeys() -> a
    64:67:void init() -> init
    71:80:void renderTranslated(int,int,float) -> a
    84:85:void onKeyRegistered(com.g4mesoft.hotkey.GSKeyBinding) -> a
    88:96:void addKeyEntry(com.g4mesoft.hotkey.GSKeyBinding) -> b
    100:100:int getScrollableHeight() -> e
    104:107:void setChangingElement(com.g4mesoft.gui.hotkey.GSHotkeyElementGUI) -> a
    110:110:com.g4mesoft.gui.hotkey.GSHotkeyElementGUI getChangingElement() -> a
    16:16:net.minecraft.class_327 access$000(com.g4mesoft.gui.hotkey.GSHotkeyGUI) -> a
    16:16:net.minecraft.class_310 access$100(com.g4mesoft.gui.hotkey.GSHotkeyGUI) -> a
    16:16:java.util.List access$200(com.g4mesoft.gui.hotkey.GSHotkeyGUI) -> a
    16:16:net.minecraft.class_327 access$300(com.g4mesoft.gui.hotkey.GSHotkeyGUI) -> b
com.g4mesoft.gui.hotkey.GSHotkeyGUI$GSHotkeyCategoryGUI -> classes.v:
    java.util.List hotkeyElements -> a
    java.lang.String categoryName -> a
    int x -> a
    int y -> b
    int w -> c
    com.g4mesoft.gui.hotkey.GSHotkeyGUI this$0 -> a
    122:125:void <init>(com.g4mesoft.gui.hotkey.GSHotkeyGUI,java.lang.String) -> <init>
    128:129:void addKeyBinding(com.g4mesoft.hotkey.GSKeyBinding) -> a
    132:138:int getPreferredWidth() -> a
    142:156:int layoutHotkeys(int,int,int) -> a
    160:165:void render(int,int,float) -> a
com.g4mesoft.gui.setting.GSBooleanSettingElementGUI -> classes.w:
    int SETTING_HEIGHT -> f
    int TEXT_MAX_WIDTH -> g
    int TOGGLE_WIDTH -> h
    com.g4mesoft.gui.widget.GSToggleSwitchWidget switchWidget -> a
    21:26:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSBooleanSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    30:34:void renderTranslated(int,int,float) -> a
    38:38:int getPreferredWidth() -> e
    43:43:int getPreferredHeight() -> f
    49:56:void init() -> init
    60:64:void onSettingChanged() -> a
    68:68:java.lang.String getFormattedDefault() -> a
    24:25:void lambda$new$0(boolean) -> b
    12:12:void <clinit>() -> <clinit>
com.g4mesoft.gui.setting.GSFloatSettingElementGUI -> classes.x:
    float MAX_DEF_INTERVAL_FOR_SLIDER -> a
    java.text.DecimalFormat FORMATTER -> a
    18:19:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSFloatSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    23:23:java.lang.String getSliderText() -> b
    28:29:void setValueFromSlider(double) -> a
    34:39:boolean setValueFromTextField(java.lang.String) -> a
    44:44:boolean shouldUseSlider() -> b
    49:54:void updateFieldValue() -> b
    58:58:java.lang.String getFormattedDefault() -> a
    15:15:void <clinit>() -> <clinit>
com.g4mesoft.gui.setting.GSIntegerSettingElementGUI -> classes.y:
    int MAX_DEF_INTERVAL_FOR_SLIDER -> f
    16:17:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.types.GSIntegerSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    21:21:java.lang.String getSliderText() -> b
    26:27:void setValueFromSlider(double) -> a
    32:37:boolean setValueFromTextField(java.lang.String) -> a
    42:42:boolean shouldUseSlider() -> b
    47:52:void updateFieldValue() -> b
    55:65:java.lang.String getFormattedValue(int) -> a
    70:70:java.lang.String getFormattedDefault() -> a
com.g4mesoft.gui.setting.GSNumberSettingElementGUI -> classes.z:
    int SETTING_HEIGHT -> f
    int TEXT_FIELD_HEIGHT -> g
    int TEXT_FIELD_MAX_WIDTH -> h
    java.lang.String SET_VALUE_TEXT -> d
    int TEXT_MAX_WIDTH -> i
    com.g4mesoft.gui.widget.GSSliderWidget slider -> a
    net.minecraft.class_342 textField -> a
    java.lang.String prevTextFieldValue -> a
    26:27:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    31:35:void renderTranslated(int,int,float) -> a
    39:39:int getPreferredWidth() -> e
    44:50:int getPreferredHeight() -> f
    56:99:void init() -> init
    java.lang.String getSliderText() -> b
    void setValueFromSlider(double) -> a
    boolean setValueFromTextField(java.lang.String) -> a
    boolean shouldUseSlider() -> b
    void updateFieldValue() -> b
    112:114:void setSliderValue(double) -> b
    117:119:void setTextFieldValue(java.lang.String) -> a
    123:123:int getSettingHeight() -> g
    128:136:void onSettingChanged() -> a
    140:140:boolean isSliderActive() -> c
    83:95:void lambda$init$2(net.minecraft.class_4185) -> a
    62:62:java.lang.String lambda$init$1(double) -> a
    60:62:void lambda$init$0(double) -> c
com.g4mesoft.gui.setting.GSSettingElementGUI -> classes.A:
    int HOVERED_BACKGROUND -> a
    int CONTENT_PADDING -> b
    int CONTENT_MARGIN -> c
    int RESET_BUTTON_WIDTH -> d
    int RESET_BUTTON_HEIGHT -> e
    java.lang.String RESET_TEXT -> b
    int ENABLED_TEXT_COLOR -> f
    int DISABLED_TEXT_COLOR -> g
    com.g4mesoft.gui.setting.GSSettingsGUI settingsGUI -> a
    com.g4mesoft.setting.GSSetting setting -> a
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.lang.String settingTranslationName -> c
    java.util.List drawableChildren -> a
    net.minecraft.class_4185 resetButton -> a
    41:52:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingCategory) -> <init>
    56:63:void renderTranslated(int,int,float) -> a
    66:66:int getTextColor() -> h
    70:74:void addWidget(net.minecraft.class_364) -> a
    79:86:void init() -> init
    89:91:void resetSetting() -> c
    94:95:void onSettingChanged() -> a
    98:100:void updateResetActive() -> b
    java.lang.String getFormattedDefault() -> a
    106:106:boolean mouseScrolledTranslated(double,double,double) -> a
    110:110:int getSettingHeight() -> g
    114:118:net.minecraft.class_4185 createResetButton() -> a
    124:124:int getPreferredWidth() -> e
    128:128:int getPreferredHeight() -> f
    132:132:java.lang.String getSettingTranslationName() -> c
    119:120:void lambda$createResetButton$0(net.minecraft.class_4185) -> a
com.g4mesoft.gui.setting.GSSettingsGUI -> classes.B:
    int SETTING_CATEGORY_MARGIN -> a
    int CATEGORY_TITLE_MARGIN_BOTTOM -> b
    int CATEGORY_TITLE_COLOR -> c
    int DESC_BACKGROUND_COLOR -> d
    int DESC_LINE_SPACING -> e
    int DESC_LINE_MARGIN -> f
    int DESC_TEXT_COLOR -> g
    float DESC_ANIMATION_TIME -> a
    java.util.Map settingCategories -> a
    int settingsWidth -> h
    int scrollableHeight -> i
    boolean layoutChanged -> b
    com.g4mesoft.gui.setting.GSSettingElementGUI hoveredElement -> a
    java.util.List descLines -> a
    int startDescHeight -> j
    int targetDescHeight -> k
    long descAnimStart -> a
    57:68:void <init>(com.g4mesoft.setting.GSSettingManager) -> <init>
    71:82:void addSettingElement(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> d
    86:89:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    93:94:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    98:107:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    110:127:void layoutSettingElements() -> a
    132:136:void tick() -> tick
    140:181:void renderTranslated(int,int,float) -> a
    184:216:void renderHoveredDesc(com.g4mesoft.gui.setting.GSSettingElementGUI,float) -> a
    221:223:void init() -> init
    228:230:void setBounds(int,int,int,int) -> setBounds
    234:234:int getScrollableHeight() -> e
    31:31:net.minecraft.class_327 access$000(com.g4mesoft.gui.setting.GSSettingsGUI) -> a
    31:31:net.minecraft.class_310 access$100(com.g4mesoft.gui.setting.GSSettingsGUI) -> a
    31:31:java.util.List access$200(com.g4mesoft.gui.setting.GSSettingsGUI) -> a
    31:31:net.minecraft.class_327 access$300(com.g4mesoft.gui.setting.GSSettingsGUI) -> b
com.g4mesoft.gui.setting.GSSettingsGUI$GSSettingCategoryElement -> classes.C:
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.lang.String title -> a
    java.util.List settings -> a
    int x -> a
    int y -> b
    int width -> c
    int height -> d
    com.g4mesoft.gui.setting.GSSettingsGUI this$0 -> a
    249:255:void <init>(com.g4mesoft.gui.setting.GSSettingsGUI,com.g4mesoft.setting.GSSettingCategory) -> <init>
    258:263:int getMinimumWidth() -> a
    267:274:void addSetting(com.g4mesoft.setting.GSSetting) -> a
    277:282:void removeSetting(com.g4mesoft.setting.GSSetting) -> b
    285:291:void onSettingChanged(com.g4mesoft.setting.GSSetting) -> c
    294:311:int layoutElements(int,int,int) -> a
    315:323:com.g4mesoft.gui.setting.GSSettingElementGUI getHoveredElement(int,int) -> a
    327:327:boolean isHovered(int,int) -> a
    332:334:void tick() -> a
    337:342:void render(int,int,float) -> a
    345:345:boolean isEmpty() -> a
com.g4mesoft.gui.widget.GSSliderWidget -> classes.D:
    int SLIDER_HEIGHT -> a
    int MAX_WIDTH -> b
    com.g4mesoft.gui.widget.GSSliderWidget$GSSliderListener listener -> a
    com.g4mesoft.gui.widget.GSSliderWidget$GSSliderFormatter formatter -> a
    18:24:void <init>(int,int,int,double,com.g4mesoft.gui.widget.GSSliderWidget$GSSliderListener,com.g4mesoft.gui.widget.GSSliderWidget$GSSliderFormatter) -> <init>
    29:30:void updateMessage() -> updateMessage
    35:37:void applyValue() -> applyValue
    40:43:void setValueSilent(double) -> a
    50:50:boolean isHovered() -> isHovered
com.g4mesoft.gui.widget.GSSliderWidget$GSSliderFormatter -> classes.E:
    java.lang.String formatValue(double) -> formatValue
com.g4mesoft.gui.widget.GSSliderWidget$GSSliderListener -> classes.F:
    void onValueChanged(double) -> onValueChanged
com.g4mesoft.gui.widget.GSToggleSwitchWidget -> classes.G:
    net.minecraft.class_2960 TEXTURE -> a
    int TOGGLE_SWITCH_WIDTH -> a
    int TOGGLE_SWITCH_HEIGHT -> b
    boolean value -> a
    com.g4mesoft.gui.widget.GSToggleSwitchWidget$GSSwitchListener listener -> a
    23:27:void <init>(int,int,boolean,com.g4mesoft.gui.widget.GSToggleSwitchWidget$GSSwitchListener) -> <init>
    32:35:void onPress() -> onPress
    38:39:void setValueSilent(boolean) -> a
    42:42:boolean isEnabled() -> a
    48:59:void renderButton(int,int,float) -> renderButton
    14:14:void <clinit>() -> <clinit>
com.g4mesoft.gui.widget.GSToggleSwitchWidget$GSSwitchListener -> classes.H:
    void onStateChanged(boolean) -> onStateChanged
com.g4mesoft.hotkey.GSEKeyEventType -> classes.I:
    com.g4mesoft.hotkey.GSEKeyEventType PRESS -> a
    com.g4mesoft.hotkey.GSEKeyEventType RELEASE -> b
    com.g4mesoft.hotkey.GSEKeyEventType[] $VALUES -> a
    3:3:com.g4mesoft.hotkey.GSEKeyEventType[] values() -> values
    3:3:com.g4mesoft.hotkey.GSEKeyEventType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.g4mesoft.hotkey.GSIKeyListener -> classes.J:
    void onKeyStateChanged(com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> onKeyStateChanged
com.g4mesoft.hotkey.GSIKeyRegisterListener -> classes.K:
    void onKeyRegistered(com.g4mesoft.hotkey.GSKeyBinding) -> a
com.g4mesoft.hotkey.GSKeyBinding -> classes.L:
    com.g4mesoft.hotkey.GSKeyManager manager -> a
    java.lang.String name -> a
    java.lang.String category -> b
    net.minecraft.class_3675$class_306 defaultKeyCode -> a
    net.minecraft.class_3675$class_306 keyCode -> b
    boolean keyState -> a
    boolean wasPressed -> b
    boolean pressed -> c
    int repeatCount -> a
    com.g4mesoft.hotkey.GSIKeyListener listener -> a
    25:34:void <init>(com.g4mesoft.hotkey.GSKeyManager,java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int) -> <init>
    37:40:void setKeyListener(com.g4mesoft.hotkey.GSIKeyListener) -> a
    43:45:void reset() -> a
    48:56:void onKeyPressed() -> b
    59:60:void onKeyReleased() -> c
    63:76:void onStateChanged(boolean,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    79:80:void onKeyRepeated() -> d
    83:87:void update() -> e
    90:105:java.lang.String getLocalizedName() -> a
    109:109:boolean isPressed() -> a
    113:113:boolean wasPressed() -> b
    117:117:boolean isClicking() -> c
    121:121:boolean isReleaing() -> d
    125:125:int getRepeatCount() -> a
    129:129:java.lang.String getName() -> b
    133:133:java.lang.String getCategory() -> c
    137:137:net.minecraft.class_3675$class_306 getKeyCode() -> a
    141:146:void setKeyCode(net.minecraft.class_3675$class_306) -> a
    149:149:int getGLFWKeyCode() -> b
    153:153:net.minecraft.class_3675$class_306 getDefaultKeyCode() -> b
    72:72:void lambda$onStateChanged$0(com.g4mesoft.hotkey.GSIKeyListener,com.g4mesoft.hotkey.GSEKeyEventType) -> a
com.g4mesoft.hotkey.GSKeyBinding$1 -> classes.M:
    int[] $SwitchMap$net$minecraft$client$util$InputUtil$Type -> a
    92:92:void <clinit>() -> <clinit>
com.g4mesoft.hotkey.GSKeyManager -> classes.N:
    java.util.Map keySettings -> a
    java.util.List keyBindings -> a
    java.util.Map codeToKeys -> b
    com.g4mesoft.hotkey.GSIKeyRegisterListener registerListener -> a
    34:39:void <init>() -> <init>
    42:60:void loadKeys(java.io.File) -> a
    64:81:void saveKeys(java.io.File) -> b
    84:89:net.minecraft.class_3675$class_306 getKeySetting(java.lang.String,java.lang.String) -> a
    93:101:void setKeySetting(java.lang.String,java.lang.String,net.minecraft.class_3675$class_306) -> a
    104:106:void update() -> a
    109:110:void registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    113:120:void registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.Consumer,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    123:124:void registerKey(java.lang.String,java.lang.String,int,java.lang.Object,java.util.function.BiConsumer) -> a
    127:131:void registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,java.lang.Object,java.util.function.BiConsumer) -> a
    134:135:void registerKey(java.lang.String,java.lang.String,int) -> a
    138:139:void registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int) -> a
    142:143:void registerKey(java.lang.String,java.lang.String,int,com.g4mesoft.hotkey.GSIKeyListener) -> a
    146:155:void registerKey(java.lang.String,java.lang.String,net.minecraft.class_3675$class_307,int,com.g4mesoft.hotkey.GSIKeyListener) -> a
    158:167:void addKeyBinding(com.g4mesoft.hotkey.GSKeyBinding) -> a
    170:171:void setKeyRegisterListener(com.g4mesoft.hotkey.GSIKeyRegisterListener) -> a
    174:181:void handleKeyEvent(net.minecraft.class_3675$class_306,java.util.function.Consumer) -> a
    184:196:void onKeyCodeChanged(com.g4mesoft.hotkey.GSKeyBinding,net.minecraft.class_3675$class_306,net.minecraft.class_3675$class_306) -> a
    199:207:void addKeyCodeMapping(com.g4mesoft.hotkey.GSKeyBinding) -> b
    210:211:void onKeyPressed(int,int,int) -> a
    214:215:void onKeyReleased(int,int,int) -> b
    218:219:void onKeyRepeat(int,int,int) -> c
    222:223:void onMousePressed(int,int) -> a
    226:227:void onMouseReleased(int,int) -> b
    230:230:java.util.List getKeyBindings() -> a
    130:130:void lambda$registerKey$1(java.util.function.BiConsumer,java.lang.Object,com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> a
    117:119:void lambda$registerKey$0(com.g4mesoft.hotkey.GSEKeyEventType,java.util.function.Consumer,java.lang.Object,com.g4mesoft.hotkey.GSKeyBinding,com.g4mesoft.hotkey.GSEKeyEventType) -> a
com.g4mesoft.mixin.client.GSClientPlayNetworkHandlerMixin -> com.g4mesoft.mixin.client.GSClientPlayNetworkHandlerMixin:
    int WORLD_TIME_UPDATE_INTERVAL -> WORLD_TIME_UPDATE_INTERVAL
    net.minecraft.class_310 field_3690 -> field_3690
    net.minecraft.class_638 field_3699 -> field_3699
    34:34:void <init>() -> <init>
    43:44:void onInit(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    48:60:void onCustomPayload(net.minecraft.class_2658,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    65:70:void onWorldTimeSync(net.minecraft.class_2761,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    77:110:boolean replaceChunkDataBlockEntityLoop(java.util.Iterator) -> a
com.g4mesoft.mixin.client.GSKeyboardMixin -> com.g4mesoft.mixin.client.GSKeyboardMixin:
    com.g4mesoft.hotkey.GSKeyManager keyManager -> keyManager
    net.minecraft.class_310 field_1678 -> field_1678
    18:18:void <init>() -> <init>
    26:28:void onKeyEvent(long,int,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    33:41:void onKeyPressRepeat(long,int,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    44:46:com.g4mesoft.hotkey.GSKeyManager getKeyManager() -> a
com.g4mesoft.mixin.client.GSMinecraftClientMixin -> com.g4mesoft.mixin.client.GSMinecraftClientMixin:
    net.minecraft.class_317 field_1728 -> field_1728
    net.minecraft.class_1144 field_1727 -> field_1727
    net.minecraft.class_746 field_1724 -> field_1724
    20:20:void <init>() -> <init>
    28:30:void onInit(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    36:38:void onDisconnect(net.minecraft.class_437,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    42:43:void onClientClose(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    47:49:void onTick(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> c
com.g4mesoft.mixin.client.GSMouseMixin -> com.g4mesoft.mixin.client.GSMouseMixin:
    com.g4mesoft.hotkey.GSKeyManager keyManager -> keyManager
    16:16:void <init>() -> <init>
    22:24:void onMouseEvent(long,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    29:31:void onMouseEventHandled(long,int,int,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    34:36:com.g4mesoft.hotkey.GSKeyManager getKeyManager() -> a
com.g4mesoft.mixin.client.GSPistonBlockEntityMixin -> com.g4mesoft.mixin.client.GSPistonBlockEntityMixin:
    float PISTON_STEPS -> PISTON_STEPS
    float INCREMENTER -> INCREMENTER
    float actualProgress -> actualProgress
    net.minecraft.class_2350 field_12201 -> field_12201
    float field_12207 -> field_12207
    float field_12206 -> field_12206
    29:30:void <init>(net.minecraft.class_2591) -> <init>
    45:65:float getSmoothProgress(float) -> a
    70:70:float getSmoothRenderOffsetX(net.minecraft.class_2669,float) -> a
    75:75:float getSmoothRenderOffsetY(net.minecraft.class_2669,float) -> b
    80:80:float getSmoothRenderOffsetZ(net.minecraft.class_2669,float) -> c
    85:86:void onTagRead(net.minecraft.class_2487,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    90:91:void onTickProgressChanged(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    95:96:void onFinishProgressChanged(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    102:107:double method_11006() -> method_11006
com.g4mesoft.mixin.client.GSPistonBlockEntityRendererMixin -> com.g4mesoft.mixin.client.GSPistonBlockEntityRendererMixin:
    19:19:void <init>() -> <init>
    23:23:float getPistonProgress(net.minecraft.class_2669,float) -> a
    28:28:float fixShortArm(float) -> a
    35:35:float fixPistonBlink(float) -> b
    40:45:void onEnableCull() -> a
    52:53:void onRenderEnd(net.minecraft.class_2669,double,double,double,float,int,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.client.GSRenderTickCounterMixin -> com.g4mesoft.mixin.client.GSRenderTickCounterMixin:
    float field_1968 -> field_1968
    17:17:void <init>() -> <init>
    23:24:void onInit(float,long,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    28:28:float getMsPerTick(net.minecraft.class_317) -> a
    33:34:void onBeginRenderTick(long,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    38:38:float getTimeScale() -> a
com.g4mesoft.mixin.client.GSSoundSystemMixin -> com.g4mesoft.mixin.client.GSSoundSystemMixin:
    java.util.Map field_18950 -> field_18950
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> tpsModule
    29:29:void <init>() -> <init>
    37:42:void onInit(net.minecraft.class_1144,net.minecraft.class_315,net.minecraft.class_3300,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    50:54:float method_4849(net.minecraft.class_1113) -> method_4849
    58:62:void updatePitch() -> a
    66:67:void tpsChanged(float,float) -> a
    71:73:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    60:60:void lambda$updatePitch$0(float,net.minecraft.class_4224) -> a
com.g4mesoft.mixin.server.GSClientConnectionMixin -> com.g4mesoft.mixin.server.GSClientConnectionMixin:
    14:14:void <init>() -> <init>
    19:20:void onExceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.server.GSCommandManagerMixin -> com.g4mesoft.mixin.server.GSCommandManagerMixin:
    com.mojang.brigadier.CommandDispatcher field_9832 -> field_9832
    17:17:void <init>() -> <init>
    23:24:void registerCommands(boolean,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.server.GSCustomPayloadC2SPacketMixin -> com.g4mesoft.mixin.server.GSCustomPayloadC2SPacketMixin:
    net.minecraft.class_2960 field_12830 -> field_12830
    net.minecraft.class_2540 field_12832 -> field_12832
    14:14:void <init>() -> <init>
    21:21:net.minecraft.class_2960 getChannelGS() -> a
    26:26:net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.mixin.server.GSCustomPayloadS2CPacketMixin -> com.g4mesoft.mixin.server.GSCustomPayloadS2CPacketMixin:
    net.minecraft.class_2960 field_12165 -> field_12165
    net.minecraft.class_2540 field_12162 -> field_12162
    14:14:void <init>() -> <init>
    21:21:net.minecraft.class_2960 getChannelGS() -> a
    26:26:net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.mixin.server.GSMinecraftServerMixin -> com.g4mesoft.mixin.server.GSMinecraftServerMixin:
    float msAccum -> msAccum
    float msPerTick -> msPerTick
    boolean tpsChanged -> tpsChanged
    org.apache.logging.log4j.Logger field_4546 -> field_4546
    boolean field_4544 -> field_4544
    long field_4571 -> field_4571
    long field_4557 -> field_4557
    boolean field_4597 -> field_4597
    net.minecraft.class_3689 field_16258 -> field_16258
    boolean field_4547 -> field_4547
    boolean field_19249 -> field_19249
    long field_19248 -> field_19248
    24:27:void <init>() -> <init>
    void method_3748(java.util.function.BooleanSupplier) -> method_3748
    boolean method_3866() -> method_3866
    void method_16208() -> method_16208
    48:53:void tpsChanged(float,float) -> a
    56:57:void resetTimeReference() -> a
    61:61:boolean disableServerLoop(net.minecraft.server.MinecraftServer) -> a
    70:73:void onInitialized(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    78:115:void modifiedRunLoop(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> c
    119:121:void onTick(java.util.function.BooleanSupplier,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    125:126:void onShutdown(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.mixin.server.GSPlayerManagerMixin -> com.g4mesoft.mixin.server.GSPlayerManagerMixin:
    19:19:void <init>() -> <init>
    net.minecraft.class_3222 method_14602(java.util.UUID) -> method_14602
    25:26:void onPlayerJoin(net.minecraft.class_2535,net.minecraft.class_3222,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    30:31:void onPlayerLeave(net.minecraft.class_3222,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    35:36:void onAddToOperators(com.mojang.authlib.GameProfile,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    40:41:void onRemoveFromOperators(com.mojang.authlib.GameProfile,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> b
    47:50:void onPlayerPermissionChanged(com.mojang.authlib.GameProfile) -> a
com.g4mesoft.mixin.server.GSServerPlayNetworkHandlerMixin -> com.g4mesoft.mixin.server.GSServerPlayNetworkHandlerMixin:
    com.g4mesoft.core.GSVersion version -> version
    int translationVersion -> translationVersion
    net.minecraft.class_3222 field_14140 -> field_14140
    24:28:void <init>() -> <init>
    34:45:void onCustomPayload(net.minecraft.class_2817,org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
    49:50:void setG4mespeedVersion(com.g4mesoft.core.GSVersion) -> a
    54:54:com.g4mesoft.core.GSVersion getG4mespeedVersion() -> a
    59:60:void setTranslationVersion(int) -> a
    64:64:int getTranslationVersion() -> a
com.g4mesoft.mixin.server.GSServerWorldMixin -> com.g4mesoft.mixin.server.GSServerWorldMixin:
    12:12:void <init>() -> <init>
    16:16:double blockEventDistance(double) -> a
com.g4mesoft.mixin.server.GSTranslatableTextMixin -> com.g4mesoft.mixin.server.GSTranslatableTextMixin:
    long field_11871 -> field_11871
    java.lang.String field_11876 -> field_11876
    java.util.List field_11877 -> field_11877
    long lastTranslationVersion -> lastTranslationVersion
    21:27:void <init>() -> <init>
    void method_11024(java.lang.String) -> method_11024
    33:60:void onUpdateTranslations(org.spongepowered.asm.mixin.injection.callback.CallbackInfo) -> a
com.g4mesoft.module.probe.GSEProbeEventCategory -> classes.O:
    com.g4mesoft.module.probe.GSEProbeEventCategory ALL -> a
    com.g4mesoft.module.probe.GSEProbeEventCategory BLOCK_EVENT -> b
    com.g4mesoft.module.probe.GSEProbeEventCategory SCHEDULED_TICK -> c
    com.g4mesoft.module.probe.GSEProbeEventCategory REDSTONE_POWER -> d
    com.g4mesoft.module.probe.GSEProbeEventCategory[] PROBE_TYPES -> a
    int index -> a
    java.lang.String name -> a
    com.g4mesoft.module.probe.GSEProbeEventCategory[] $VALUES -> b
    3:3:com.g4mesoft.module.probe.GSEProbeEventCategory[] values() -> values
    3:3:com.g4mesoft.module.probe.GSEProbeEventCategory valueOf(java.lang.String) -> valueOf
    24:27:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    30:30:int getIndex() -> a
    34:36:com.g4mesoft.module.probe.GSEProbeEventCategory fromIndex(int) -> a
    40:40:java.lang.String getName() -> a
    3:19:void <clinit>() -> <clinit>
com.g4mesoft.module.probe.GSEProbeEventType -> classes.P:
    com.g4mesoft.module.probe.GSEProbeEventType BLOCK_POWER -> a
    com.g4mesoft.module.probe.GSEProbeEventType BLOCK_DEPOWER -> b
    com.g4mesoft.module.probe.GSEProbeEventType DUST_SS_CHANGE -> c
    com.g4mesoft.module.probe.GSEProbeEventType PISTON_EXTEND -> d
    com.g4mesoft.module.probe.GSEProbeEventType PISTON_RETRACT -> e
    com.g4mesoft.module.probe.GSEProbeEventType REPEATER_TURN_ON -> f
    com.g4mesoft.module.probe.GSEProbeEventType REPEATER_TURN_OFF -> g
    com.g4mesoft.module.probe.GSEProbeEventType REPEATER_LOCK_CHANGE -> h
    com.g4mesoft.module.probe.GSEProbeEventType REDSTONE_TORCH_TURN_ON -> i
    com.g4mesoft.module.probe.GSEProbeEventType REDSTONE_TORCH_TURN_OFF -> j
    com.g4mesoft.module.probe.GSEProbeEventType REDSTONE_TORCH_BURNOUT -> k
    com.g4mesoft.module.probe.GSEProbeEventType COMPARATOR_TURN_ON -> l
    com.g4mesoft.module.probe.GSEProbeEventType COMPARATOR_TURN_OFF -> m
    com.g4mesoft.module.probe.GSEProbeEventType COMPARATOR_SIDE_CHANGE -> n
    com.g4mesoft.module.probe.GSEProbeEventType COMPARATOR_POWER_CHANGE -> o
    com.g4mesoft.module.probe.GSEProbeEventType OBSERVER_TURN_ON -> p
    com.g4mesoft.module.probe.GSEProbeEventType OBSERVER_TURN_OFF -> q
    com.g4mesoft.module.probe.GSEProbeEventType OBSERVER_DETECT -> r
    com.g4mesoft.module.probe.GSEProbeEventType DISPENSER_TURN_ON -> s
    com.g4mesoft.module.probe.GSEProbeEventType DISPENSER_TURN_OFF -> t
    com.g4mesoft.module.probe.GSEProbeEventType[] EVENT_TYPES -> a
    int index -> a
    java.lang.String name -> a
    com.g4mesoft.module.probe.GSEProbeEventCategory category -> a
    com.g4mesoft.core.GSVersion versionAdded -> a
    com.g4mesoft.module.probe.GSEProbeEventType[] $VALUES -> b
    10:10:com.g4mesoft.module.probe.GSEProbeEventType[] values() -> values
    10:10:com.g4mesoft.module.probe.GSEProbeEventType valueOf(java.lang.String) -> valueOf
    56:61:void <init>(java.lang.String,int,int,java.lang.String,com.g4mesoft.module.probe.GSEProbeEventCategory,com.g4mesoft.core.GSVersion) -> <init>
    64:64:int getIndex() -> a
    68:70:com.g4mesoft.module.probe.GSEProbeEventType fromIndex(int) -> a
    74:74:java.lang.String getName() -> a
    78:78:com.g4mesoft.module.probe.GSEProbeEventCategory getCategory() -> a
    82:82:com.g4mesoft.core.GSVersion getVersionAdded() -> a
    10:49:void <clinit>() -> <clinit>
com.g4mesoft.module.probe.GSProbeInfo -> classes.Q:
    java.lang.String name -> a
    net.minecraft.class_2338 pos -> a
    java.util.Set types -> a
    15:19:void <init>(java.lang.String,net.minecraft.class_2338,java.util.Set) -> <init>
    22:22:java.lang.String getName() -> a
    26:26:net.minecraft.class_2338 getPos() -> a
    30:30:boolean isTrackingType(com.g4mesoft.module.probe.GSEProbeEventType) -> a
    34:34:java.util.Set getTrackedTypes() -> a
com.g4mesoft.module.probe.GSProbeModule -> classes.R:
    com.g4mesoft.core.GSVersion PROBE_INTRODUCTION_VERSION -> a
    java.lang.String PROBE_GUI_TITLE -> a
    8:8:void <init>() -> <init>
    15:15:void init(com.g4mesoft.core.GSIModuleManager) -> a
    19:20:void initGUI(com.g4mesoft.gui.GSTabbedGUI) -> a
    10:10:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSETpsHotkeyType -> classes.S:
    com.g4mesoft.module.tps.GSETpsHotkeyType RESET_TPS -> a
    com.g4mesoft.module.tps.GSETpsHotkeyType INCREMENT_TPS -> b
    com.g4mesoft.module.tps.GSETpsHotkeyType DECREMENT_TPS -> c
    com.g4mesoft.module.tps.GSETpsHotkeyType DOUBLE_TPS -> d
    com.g4mesoft.module.tps.GSETpsHotkeyType HALVE_TPS -> e
    com.g4mesoft.module.tps.GSETpsHotkeyType[] HOTKEY_TYPES -> a
    int index -> a
    com.g4mesoft.module.tps.GSETpsHotkeyType[] $VALUES -> b
    3:3:com.g4mesoft.module.tps.GSETpsHotkeyType[] values() -> values
    3:3:com.g4mesoft.module.tps.GSETpsHotkeyType valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,int) -> <init>
    31:33:com.g4mesoft.module.tps.GSETpsHotkeyType fromIndex(int) -> a
    37:37:int getIndex() -> a
    3:22:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSITpsDependant -> classes.T:
    void tpsChanged(float,float) -> a
com.g4mesoft.module.tps.GSRenderTickCounterAdjuster -> classes.U:
    float DEFAULT_MS_PER_TICK -> a
    float EXTRA_SERVER_SYNC_DELAY -> b
    float MIN_SERVER_SYNC_DELAY -> c
    float SYNC_DELAY_EASING_FACTOR -> d
    com.g4mesoft.module.tps.GSRenderTickCounterAdjuster INSTANCE -> a
    boolean initialized -> a
    float msPerTick -> e
    java.lang.Object serverSyncLock -> a
    float approximatedServerTickDelta -> f
    boolean serverSyncReceived -> b
    long serverLast -> a
    int serverTicksSinceLastSync -> a
    int serverSyncInterval -> b
    long clientLast -> b
    float serverSyncDelay -> g
    boolean tickAfterServer -> c
    com.g4mesoft.module.tps.GSTpsModule tpsModule -> a
    20:38:void <init>() -> <init>
    41:59:void init(float,long) -> a
    66:66:float getAdjustedMsPerTick(net.minecraft.class_317) -> a
    70:80:void performSynchronization(net.minecraft.class_317,long) -> a
    84:98:void updateServerClock(net.minecraft.class_317,long) -> b
    101:106:void updateSyncDelay(net.minecraft.class_317,long) -> c
    109:115:boolean shouldAdjustTickDelta() -> a
    119:152:void adjustTickDelta(net.minecraft.class_317) -> a
    156:157:void tpsChanged(float,float) -> a
    160:167:void onServerTickSync(int) -> a
    170:170:com.g4mesoft.module.tps.GSRenderTickCounterAdjuster getInstance() -> a
    18:18:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSServerSyncPacket -> classes.V:
    int packetInterval -> a
    18:19:void <init>() -> <init>
    21:23:void <init>(int) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:37:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    42:43:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
    47:47:boolean shouldForceMainThread() -> a
com.g4mesoft.module.tps.GSTpsChangePacket -> classes.W:
    float requestedTps -> a
    18:19:void <init>() -> <init>
    21:23:void <init>(float) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:40:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    45:46:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
com.g4mesoft.module.tps.GSTpsCommand -> classes.X:
    java.text.DecimalFormat TPS_FORMAT -> a
    16:16:void <init>() -> <init>
    21:32:void registerCommand(com.mojang.brigadier.CommandDispatcher) -> a
    35:57:int informCurrentTps(net.minecraft.class_2168) -> a
    61:63:java.lang.String formatSign(int) -> a
    67:69:int setCurrentTps(net.minecraft.class_2168,float) -> a
    28:28:int lambda$registerCommand$2(com.mojang.brigadier.context.CommandContext) -> a
    25:25:int lambda$registerCommand$1(com.mojang.brigadier.context.CommandContext) -> b
    22:22:boolean lambda$registerCommand$0(net.minecraft.class_2168) -> a
    18:18:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSTpsHotkeyPacket -> classes.Y:
    com.g4mesoft.module.tps.GSETpsHotkeyType type -> a
    boolean sneaking -> a
    19:20:void <init>() -> <init>
    22:25:void <init>(com.g4mesoft.module.tps.GSETpsHotkeyType,boolean) -> <init>
    29:31:void read(net.minecraft.class_2540) -> a
    35:37:void write(net.minecraft.class_2540) -> b
    41:44:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    49:50:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
com.g4mesoft.module.tps.GSTpsModule -> classes.Z:
    float DEFAULT_TPS -> a
    float MIN_TPS -> b
    float MAX_TPS -> c
    float MS_PER_SEC -> d
    float TPS_INCREMENT_INTERVAL -> e
    float TONE_MULTIPLIER -> f
    com.g4mesoft.core.GSVersion TPS_INTRODUCTION_VERSION -> a
    com.g4mesoft.setting.GSSettingCategory TPS_CATEGORY -> a
    com.g4mesoft.setting.GSSettingCategory BETTER_PISTONS_CATEGORY -> b
    java.lang.String KEY_CATEGORY -> a
    int PISTON_ANIM_PAUSE_END -> a
    int PISTON_ANIM_PAUSE_BEGINNING -> b
    int PISTON_ANIM_NO_PAUSE -> c
    int AUTOMATIC_PISTON_RENDER_DISTANCE -> d
    float tps -> g
    java.util.List listeners -> a
    int serverSyncTimer -> e
    com.g4mesoft.core.GSIModuleManager manager -> a
    com.g4mesoft.setting.types.GSBooleanSetting cShiftPitch -> a
    com.g4mesoft.setting.types.GSBooleanSetting cSyncTick -> b
    com.g4mesoft.setting.types.GSFloatSetting cSyncTickAggression -> a
    com.g4mesoft.setting.types.GSIntegerSetting sSyncPacketInterval -> a
    com.g4mesoft.setting.types.GSBooleanSetting cCullMovingBlocks -> c
    com.g4mesoft.setting.types.GSIntegerSetting cPistonAnimationType -> b
    com.g4mesoft.setting.types.GSIntegerSetting cPistonRenderDistance -> c
    com.g4mesoft.setting.types.GSIntegerSetting sBlockEventDistance -> d
    71:88:void <init>() -> <init>
    92:93:void init(com.g4mesoft.core.GSIModuleManager) -> a
    97:102:void onClose() -> a
    106:116:void registerClientSettings(com.g4mesoft.setting.GSSettingManager) -> a
    120:134:void registerHotkeys(com.g4mesoft.hotkey.GSKeyManager) -> a
    138:140:void registerServerSettings(com.g4mesoft.setting.GSSettingManager) -> b
    144:145:void registerCommands(com.mojang.brigadier.CommandDispatcher) -> a
    149:158:void tick() -> b
    161:176:void onHotkey(com.g4mesoft.module.tps.GSETpsHotkeyType) -> a
    179:243:void performHotkeyAction(com.g4mesoft.module.tps.GSETpsHotkeyType,boolean) -> a
    247:248:void onDisconnectServer() -> c
    252:254:void onG4mespeedClientJoin(net.minecraft.class_3222,com.g4mesoft.core.GSVersion) -> a
    257:261:void addTpsListener(com.g4mesoft.module.tps.GSITpsDependant) -> a
    264:267:void removeTpsListener(com.g4mesoft.module.tps.GSITpsDependant) -> b
    270:273:void clearTpsListeners() -> e
    276:277:void resetTps() -> d
    280:300:void setTps(float) -> a
    303:303:boolean isPlayerAllowedTpsChange(net.minecraft.class_3222) -> a
    308:310:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    313:313:float getMsPerTick() -> a
    317:317:float getTps() -> b
    292:298:void lambda$setTps$3(com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    253:253:void lambda$onG4mespeedClientJoin$2(net.minecraft.class_3222,com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    162:175:void lambda$onHotkey$1(com.g4mesoft.module.tps.GSETpsHotkeyType,com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    150:157:void lambda$tick$0(com.g4mesoft.core.server.GSIModuleManagerServer) -> b
    39:44:void <clinit>() -> <clinit>
com.g4mesoft.module.tps.GSTpsModule$1 -> classes.aa:
    int[] $SwitchMap$com$g4mesoft$module$tps$GSETpsHotkeyType -> a
    212:212:void <clinit>() -> <clinit>
com.g4mesoft.module.translation.GSTranslationCache -> classes.ab:
    int cacheVersion -> a
    java.util.Map translations -> a
    12:15:void <init>(int,java.util.Map) -> <init>
    18:19:void getAllTranslations(java.util.Map) -> a
    22:22:int getCacheVersion() -> a
    26:28:com.g4mesoft.module.translation.GSTranslationCache merge(com.g4mesoft.module.translation.GSTranslationCache) -> a
    32:32:java.util.Map getTranslationMap() -> a
com.g4mesoft.module.translation.GSTranslationCachePacket -> classes.ac:
    com.g4mesoft.module.translation.GSTranslationCache cache -> a
    20:21:void <init>() -> <init>
    23:25:void <init>(com.g4mesoft.module.translation.GSTranslationCache) -> <init>
    29:41:void read(net.minecraft.class_2540) -> a
    45:53:void write(net.minecraft.class_2540) -> b
    57:57:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    62:63:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
    67:67:boolean shouldForceMainThread() -> a
com.g4mesoft.module.translation.GSTranslationModule -> classes.ad:
    com.g4mesoft.core.GSVersion TRANSLATION_INTRODUCTION_VERSION -> a
    java.lang.String TRANSLATION_FILENAME -> a
    int INVALID_TRANSLATION_VERSION -> a
    long MAX_CACHE_LIFE_HOURS -> a
    java.util.Map translations -> a
    java.util.Map caches -> b
    com.g4mesoft.core.GSIModuleManager manager -> a
    int cachedTranslationVersion -> b
    long cacheSaveTime -> b
    48:53:void <init>() -> <init>
    57:77:void init(com.g4mesoft.core.GSIModuleManager) -> a
    81:98:void onClose() -> a
    102:103:void onJoinG4mespeedServer(com.g4mesoft.core.GSVersion) -> a
    108:128:void onTranslationVersionReceived(net.minecraft.class_3222,int) -> a
    131:157:void loadCachedTranslations(java.io.InputStream) -> a
    160:163:void loadTranslations(java.io.InputStream) -> b
    166:201:void loadTranslations(java.io.BufferedReader) -> a
    204:230:void saveTranslations(java.io.OutputStream) -> a
    233:233:java.io.File getCachedFile(com.g4mesoft.core.GSIModuleManager) -> a
    237:247:void addTranslationCache(com.g4mesoft.module.translation.GSTranslationCache) -> a
    250:251:java.lang.String getTranslation(java.lang.String) -> a
    255:256:java.lang.String getFormattedTranslation(java.lang.String,java.lang.Object[]) -> a
    260:260:boolean hasTranslation(java.lang.String) -> a
    264:264:long getCachedTranslationVersion() -> a
    115:126:void lambda$onTranslationVersionReceived$4(int,net.minecraft.class_3222,com.g4mesoft.core.server.GSIModuleManagerServer) -> a
    116:116:int lambda$null$3(com.g4mesoft.module.translation.GSTranslationCache,com.g4mesoft.module.translation.GSTranslationCache) -> a
    102:102:void lambda$onJoinG4mespeedServer$2(com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    83:97:void lambda$onClose$1(com.g4mesoft.core.client.GSIModuleManagerClient) -> b
    60:67:void lambda$init$0(com.g4mesoft.core.GSIModuleManager,com.g4mesoft.core.client.GSIModuleManagerClient) -> a
    33:33:void <clinit>() -> <clinit>
com.g4mesoft.module.translation.GSTranslationVersionPacket -> classes.ae:
    int translationVersion -> a
    18:19:void <init>() -> <init>
    21:23:void <init>(int) -> <init>
    27:28:void read(net.minecraft.class_2540) -> a
    32:33:void write(net.minecraft.class_2540) -> b
    37:38:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    43:43:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
com.g4mesoft.packet.GSICustomPayloadHolder -> classes.af:
    net.minecraft.class_2960 getChannelGS() -> a
    net.minecraft.class_2540 getDataGS() -> a
com.g4mesoft.packet.GSIPacket -> classes.ag:
    void read(net.minecraft.class_2540) -> a
    19:20:void read(net.minecraft.class_2540,com.g4mesoft.core.GSVersion) -> a
    void write(net.minecraft.class_2540) -> b
    void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
    30:30:boolean shouldForceMainThread() -> a
com.g4mesoft.packet.GSPacketManager -> classes.ah:
    net.minecraft.class_2960 GS_IDENTIFIER -> a
    com.g4mesoft.packet.GSPacketRegistry registry -> a
    32:47:void <init>() -> <init>
    50:63:net.minecraft.class_2596 encodePacket(com.g4mesoft.packet.GSIPacket,com.g4mesoft.core.GSController) -> a
    67:97:com.g4mesoft.packet.GSIPacket decodePacket(com.g4mesoft.packet.GSICustomPayloadHolder,com.g4mesoft.core.GSVersion,net.minecraft.class_2547,net.minecraft.class_1255) -> a
    27:27:void <clinit>() -> <clinit>
com.g4mesoft.packet.GSPacketRegistry -> classes.ai:
    java.lang.Class[] packets -> a
    java.util.Map packetToIndex -> a
    11:17:void <init>(java.lang.Class[]) -> <init>
    20:20:int getPacketIndex(com.g4mesoft.packet.GSIPacket) -> a
    24:25:int getPacketIndex(java.lang.Class) -> a
    29:31:java.lang.Class getPacketClass(int) -> a
com.g4mesoft.setting.GSISettingChangeListener -> classes.aj:
    5:5:void onSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    7:7:void onSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    9:9:void onSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
com.g4mesoft.setting.GSRemoteSettingManager -> classes.ak:
    com.g4mesoft.core.client.GSControllerClient controllerClient -> a
    java.util.Map shadowSettings -> b
    boolean remoteSettingChanging -> a
    boolean allowedSettingChange -> b
    18:25:void <init>(com.g4mesoft.core.client.GSControllerClient) -> <init>
    29:30:void registerSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    33:42:void registerShadowSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> b
    45:46:com.g4mesoft.setting.GSSetting getShadowSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> a
    50:53:void updateShadowValue(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> i
    57:63:void settingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    67:70:void settingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> d
    74:79:void settingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> e
    82:87:void onRemoteSettingMapReceived(com.g4mesoft.setting.GSSettingMap) -> a
    90:97:void onRemoteSettingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> f
    100:101:void onRemoteSettingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> g
    104:105:void onRemoteSettingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> h
    108:116:void setAllowedSettingChange(boolean) -> a
    119:119:boolean isAllowedSettingChange() -> a
com.g4mesoft.setting.GSServerSettingMapPacket -> classes.al:
    com.g4mesoft.core.GSVersion DISABLE_SETTING_INTRODUCTION -> a
    com.g4mesoft.setting.GSSettingMap settingMap -> a
    19:20:void <init>() -> <init>
    22:24:void <init>(com.g4mesoft.setting.GSSettingMap) -> <init>
    28:30:void read(net.minecraft.class_2540) -> a
    34:36:void write(net.minecraft.class_2540) -> b
    40:40:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    44:45:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
    15:15:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSetting -> classes.am:
    java.lang.String name -> a
    java.lang.Object defaultValue -> a
    boolean visibleInGui -> a
    com.g4mesoft.setting.GSSettingMap settingOwner -> a
    boolean active -> b
    boolean enabledInGui -> c
    14:23:void <init>(java.lang.String,java.lang.Object,boolean) -> <init>
    26:26:java.lang.String getName() -> a
    30:33:void setSettingOwner(com.g4mesoft.setting.GSSettingMap) -> a
    36:38:void notifyOwnerChange() -> a
    java.lang.Object getValue() -> a
    com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    boolean isDefaultValue() -> a
    boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    com.g4mesoft.setting.GSSetting copySetting() -> a
    51:52:void reset() -> b
    56:58:void setValueIfSameType(com.g4mesoft.setting.GSSetting) -> a
    61:61:java.lang.Object getDefaultValue() -> b
    65:66:void setActive(boolean) -> a
    69:69:boolean isActive() -> b
    73:73:boolean isVisibleInGUI() -> c
    77:81:com.g4mesoft.setting.GSSetting setEnabledInGui(boolean) -> a
    85:85:boolean isEnabledInGui() -> d
com.g4mesoft.setting.GSSettingCategory -> classes.an:
    java.lang.String name -> a
    9:11:void <init>(java.lang.String) -> <init>
    14:14:java.lang.String getName() -> a
    19:19:int hashCode() -> hashCode
    24:26:boolean equals(java.lang.Object) -> equals
    30:30:com.g4mesoft.setting.GSSettingCategory read(net.minecraft.class_2540) -> a
    34:35:void write(net.minecraft.class_2540) -> a
com.g4mesoft.setting.GSSettingChangePacket -> classes.ao:
    com.g4mesoft.core.GSVersion DISABLE_SETTING_INTRODUCTION -> a
    com.g4mesoft.setting.GSSettingCategory category -> a
    com.g4mesoft.setting.GSSetting setting -> a
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType type -> a
    22:23:void <init>() -> <init>
    25:29:void <init>(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting,com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType) -> <init>
    33:42:void read(net.minecraft.class_2540) -> a
    48:58:void write(net.minecraft.class_2540) -> b
    62:70:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    74:87:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
    16:16:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingChangePacket$1 -> classes.ap:
    int[] $SwitchMap$com$g4mesoft$setting$GSSettingChangePacket$GSESettingChangeType -> a
    76:76:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType -> classes.aq:
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_CHANGED -> a
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_ADDED -> b
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType SETTING_REMOVED -> c
    int index -> a
    com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType[] $VALUES -> a
    89:89:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType[] values() -> values
    89:89:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType valueOf(java.lang.String) -> valueOf
    96:98:void <init>(java.lang.String,int,int) -> <init>
    101:110:com.g4mesoft.setting.GSSettingChangePacket$GSESettingChangeType fromIndex(int) -> a
    114:114:int getIndex() -> a
    89:92:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingManager -> classes.ar:
    java.lang.String UNKNOWN_SETTING_TYPE -> a
    byte CATEGORY_ENTRY_CODE -> a
    java.util.Map settings -> a
    java.util.List listeners -> a
    java.util.Map typeToDecoder -> b
    java.util.Map clazzToDecoder -> c
    52:55:void <init>() -> <init>
    58:62:void registerDefaultParsers() -> b
    65:81:void registerSettingDecoder(com.g4mesoft.setting.decoder.GSISettingDecoder) -> a
    84:89:com.g4mesoft.setting.decoder.GSISettingDecoder getSettingDecoder(java.lang.String) -> a
    94:99:com.g4mesoft.setting.decoder.GSISettingDecoder getSettingDecoder(java.lang.Class) -> a
    103:107:void loadSettings(java.io.File) -> a
    111:118:void saveSettings(java.io.File) -> b
    121:125:void readSettings(java.io.FileInputStream) -> a
    128:136:void writeSettings(java.io.FileOutputStream) -> a
    139:155:void readSettings(net.minecraft.class_2540) -> a
    158:168:void writeSettings(net.minecraft.class_2540) -> b
    171:172:com.g4mesoft.setting.GSSetting getSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> b
    176:183:void registerSetting(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> a
    186:189:void removeSetting(com.g4mesoft.setting.GSSettingCategory,java.lang.String) -> a
    192:192:java.util.Collection getSettings() -> a
    196:196:boolean hasCategory(com.g4mesoft.setting.GSSettingCategory) -> a
    200:203:void clearSettings() -> a
    206:208:void settingChanged(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> c
    211:213:void settingAdded(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> d
    216:218:void settingRemoved(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSetting) -> e
    221:222:void addChangeListener(com.g4mesoft.setting.GSISettingChangeListener) -> a
    225:226:void removeChangeListener(com.g4mesoft.setting.GSISettingChangeListener) -> b
    42:50:void <clinit>() -> <clinit>
com.g4mesoft.setting.GSSettingMap -> classes.as:
    com.g4mesoft.setting.GSSettingCategory category -> a
    java.util.Map settings -> a
    com.g4mesoft.setting.GSSettingManager owner -> a
    26:31:void <init>(com.g4mesoft.setting.GSSettingCategory,com.g4mesoft.setting.GSSettingManager) -> <init>
    34:34:com.g4mesoft.setting.GSSetting getSetting(java.lang.String) -> a
    38:57:void registerSetting(com.g4mesoft.setting.GSSetting) -> a
    60:66:void clearSettings() -> a
    69:72:com.g4mesoft.setting.GSSetting removeSetting(java.lang.String) -> b
    76:76:java.util.Collection getSettings() -> a
    80:82:void settingChanged(com.g4mesoft.setting.GSSetting) -> b
    85:85:com.g4mesoft.setting.GSSettingCategory getCategory() -> a
    89:133:void readSettings(net.minecraft.class_2540) -> a
    136:137:void writeSettings(net.minecraft.class_2540) -> b
    141:177:void writeSettings(net.minecraft.class_2540,java.util.function.Predicate) -> a
com.g4mesoft.setting.GSSettingPermissionPacket -> classes.at:
    boolean allowedSettingChange -> a
    16:17:void <init>() -> <init>
    19:21:void <init>(boolean) -> <init>
    25:26:void read(net.minecraft.class_2540) -> a
    30:31:void write(net.minecraft.class_2540) -> b
    35:35:void handleOnServer(com.g4mesoft.core.server.GSControllerServer,net.minecraft.class_3222) -> a
    39:40:void handleOnClient(com.g4mesoft.core.client.GSControllerClient) -> a
com.g4mesoft.setting.decoder.GSBooleanSettingDecoder -> classes.au:
    java.lang.String BOOLEAN_TYPE_STRING -> a
    7:7:void <init>() -> <init>
    13:17:com.g4mesoft.setting.types.GSBooleanSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    22:25:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSBooleanSetting) -> a
    29:29:java.lang.String getTypeString() -> a
    34:34:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSFloatSettingDecoder -> classes.av:
    java.lang.String FLOAT_TYPE_STRING -> a
    7:7:void <init>() -> <init>
    13:20:com.g4mesoft.setting.types.GSFloatSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    25:31:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSFloatSetting) -> a
    35:35:java.lang.String getTypeString() -> a
    40:40:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSISettingDecoder -> classes.aw:
    com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    java.lang.String getTypeString() -> a
    java.lang.Class getSettingClass() -> a
com.g4mesoft.setting.decoder.GSIntegerSettingDecoder -> classes.ax:
    java.lang.String INTEGER_TYPE_STRING -> a
    7:7:void <init>() -> <init>
    13:20:com.g4mesoft.setting.types.GSIntegerSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    25:31:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSIntegerSetting) -> a
    35:35:java.lang.String getTypeString() -> a
    40:40:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.decoder.GSStringSettingDecoder -> classes.ay:
    java.lang.String STRING_TYPE_STRING -> a
    7:7:void <init>() -> <init>
    13:17:com.g4mesoft.setting.types.GSStringSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
    22:25:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.types.GSStringSetting) -> a
    29:29:java.lang.String getTypeString() -> a
    34:34:java.lang.Class getSettingClass() -> a
    7:7:void encodeSetting(net.minecraft.class_2540,com.g4mesoft.setting.GSSetting) -> a
    7:7:com.g4mesoft.setting.GSSetting decodeSetting(java.lang.String,net.minecraft.class_2540) -> a
com.g4mesoft.setting.types.GSBooleanSetting -> classes.az:
    boolean value -> b
    10:11:void <init>(java.lang.String,boolean) -> <init>
    14:17:void <init>(java.lang.String,boolean,boolean) -> <init>
    21:21:java.lang.Boolean getValue() -> a
    26:32:com.g4mesoft.setting.types.GSBooleanSetting setValue(java.lang.Boolean) -> a
    37:37:boolean isDefaultValue() -> a
    42:42:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    47:47:com.g4mesoft.setting.GSSetting copySetting() -> a
    5:5:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    5:5:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSFloatSetting -> classes.aA:
    float value -> a
    float minValue -> b
    float interval -> c
    float maxValue -> d
    15:16:void <init>(java.lang.String,float) -> <init>
    19:20:void <init>(java.lang.String,float,boolean) -> <init>
    23:24:void <init>(java.lang.String,float,float,float) -> <init>
    27:28:void <init>(java.lang.String,float,float,float,boolean) -> <init>
    31:32:void <init>(java.lang.String,float,float,float,float) -> <init>
    35:42:void <init>(java.lang.String,float,float,float,float,boolean) -> <init>
    46:46:java.lang.Float getValue() -> a
    51:57:com.g4mesoft.setting.types.GSFloatSetting setValue(java.lang.Float) -> a
    61:69:float adjustValue(float) -> a
    74:74:boolean isDefaultValue() -> a
    79:79:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    83:83:float getMinValue() -> a
    87:87:float getInterval() -> b
    91:91:float getMaxValue() -> c
    96:96:com.g4mesoft.setting.GSSetting copySetting() -> a
    6:6:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    6:6:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSIntegerSetting -> classes.aB:
    int value -> a
    int minValue -> b
    int maxValue -> c
    int interval -> d
    15:16:void <init>(java.lang.String,int) -> <init>
    19:20:void <init>(java.lang.String,int,boolean) -> <init>
    23:24:void <init>(java.lang.String,int,int,int) -> <init>
    27:28:void <init>(java.lang.String,int,int,int,boolean) -> <init>
    31:32:void <init>(java.lang.String,int,int,int,int) -> <init>
    35:42:void <init>(java.lang.String,int,int,int,int,boolean) -> <init>
    46:46:java.lang.Integer getValue() -> a
    51:57:com.g4mesoft.setting.types.GSIntegerSetting setValue(java.lang.Integer) -> a
    61:69:int adjustValue(int) -> a
    74:74:boolean isDefaultValue() -> a
    79:79:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    83:83:int getMinValue() -> a
    87:87:int getMaxValue() -> b
    91:91:int getInterval() -> c
    96:96:com.g4mesoft.setting.GSSetting copySetting() -> a
    6:6:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    6:6:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSStringSetting -> classes.aC:
    java.lang.String value -> b
    12:13:void <init>(java.lang.String,java.lang.String) -> <init>
    16:19:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    23:23:java.lang.String getValue() -> b
    28:33:com.g4mesoft.setting.types.GSStringSetting setValue(java.lang.String) -> a
    38:38:boolean isDefaultValue() -> a
    43:43:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    48:48:com.g4mesoft.setting.GSSetting copySetting() -> a
    7:7:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
    7:7:java.lang.Object getValue() -> a
com.g4mesoft.setting.types.GSUnknownSetting -> classes.aD:
    java.lang.String type -> b
    byte[] data -> a
    11:15:void <init>(java.lang.String,java.lang.String,byte[]) -> <init>
    19:19:java.lang.Object getValue() -> a
    24:24:com.g4mesoft.setting.types.GSUnknownSetting setValue(java.lang.Object) -> a
    29:29:boolean isDefaultValue() -> a
    34:34:boolean isSameType(com.g4mesoft.setting.GSSetting) -> a
    38:38:java.lang.String getType() -> b
    42:42:byte[] getData() -> a
    47:47:com.g4mesoft.setting.GSSetting copySetting() -> a
    5:5:com.g4mesoft.setting.GSSetting setValue(java.lang.Object) -> a
com.g4mesoft.util.GSFileUtils -> classes.aE:
    6:6:void <init>() -> <init>
    9:11:void ensureDirectoryExists(java.io.File) -> a
    14:18:void ensureFileExists(java.io.File) -> b
com.g4mesoft.util.GSMathUtils -> classes.aF:
    3:3:void <init>() -> <init>
    6:6:int clamp(int,int,int) -> a
    10:10:long clamp(long,long,long) -> a
    14:14:float clamp(float,float,float) -> a
    18:18:double clamp(double,double,double) -> a
    22:22:boolean equalsApproximate(float,float) -> a
    26:26:boolean equalsApproximate(float,float,float) -> a
    30:30:boolean equalsApproximate(double,double) -> a
    34:34:boolean equalsApproximate(double,double,double) -> a
